
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Parsing `motor_mixer.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: motor_mixer.v
Parsing Verilog input from `motor_mixer.v' to AST representation.
Generating RTLIL representation for module `\motor_mixer'.
Generating RTLIL representation for module `\axis_scalar'.
Successfully finished Verilog frontend.

-- Parsing `ip/memory/BlockMemorySinglePort.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ip/memory/BlockMemorySinglePort.v
Parsing Verilog input from `ip/memory/BlockMemorySinglePort.v' to AST representation.
Generating RTLIL representation for module `\BlockMemorySinglePort'.
Successfully finished Verilog frontend.

-- Parsing `ip/memory/BlockMemoryDualPort.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: ip/memory/BlockMemoryDualPort.v
Parsing Verilog input from `ip/memory/BlockMemoryDualPort.v' to AST representation.
Generating RTLIL representation for module `\BlockMemoryDualPort'.
Successfully finished Verilog frontend.

-- Parsing `ip/memory/FIFODualPort.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: ip/memory/FIFODualPort.v
Parsing Verilog input from `ip/memory/FIFODualPort.v' to AST representation.
Generating RTLIL representation for module `\FIFODualPort'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/imu/imu_mpu9250.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: ip/peripherals/imu/imu_mpu9250.v
Parsing Verilog input from `ip/peripherals/imu/imu_mpu9250.v' to AST representation.
Generating RTLIL representation for module `\imu_mpu_9250'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/spi/spi_master.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: ip/peripherals/spi/spi_master.v
Parsing Verilog input from `ip/peripherals/spi/spi_master.v' to AST representation.
Generating RTLIL representation for module `\spi_master'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/uart/uart_rx.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: ip/peripherals/uart/uart_rx.v
Parsing Verilog input from `ip/peripherals/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/uart/uart_tx.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: ip/peripherals/uart/uart_tx.v
Parsing Verilog input from `ip/peripherals/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/uart/uart.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: ip/peripherals/uart/uart.v
Parsing Verilog input from `ip/peripherals/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/rc/dshottx.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: ip/peripherals/rc/dshottx.v
Parsing Verilog input from `ip/peripherals/rc/dshottx.v' to AST representation.
Generating RTLIL representation for module `\DShotPacketEncoder'.
Generating RTLIL representation for module `\DShotTx'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/rc/fport_rx_decode.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: ip/peripherals/rc/fport_rx_decode.v
Parsing Verilog input from `ip/peripherals/rc/fport_rx_decode.v' to AST representation.
Generating RTLIL representation for module `\fport_rx_decoder'.
Successfully finished Verilog frontend.

-- Parsing `ip/peripherals/rc/motor_control.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: ip/peripherals/rc/motor_control.v
Parsing Verilog input from `ip/peripherals/rc/motor_control.v' to AST representation.
Generating RTLIL representation for module `\motor_control'.
Successfully finished Verilog frontend.

-- Parsing `ip/debug/debug_protocol.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: ip/debug/debug_protocol.v
Parsing Verilog input from `ip/debug/debug_protocol.v' to AST representation.
Generating RTLIL representation for module `\debug_protocol'.
Successfully finished Verilog frontend.

-- Parsing `flight.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: flight.v
Parsing Verilog input from `flight.v' to AST representation.
Generating RTLIL representation for module `\flight'.
Warning: Replacing memory \attitude with list of registers. See flight.v:197, flight.v:196
Warning: Replacing memory \motorThrottle with list of registers. See flight.v:300
Warning: Replacing memory \inputs with list of registers. See flight.v:318, flight.v:249
Warning: Replacing memory \setpoint with list of registers. See flight.v:451, flight.v:243
Warning: Replacing memory \gyro_rates_sampled with list of registers. See flight.v:459, flight.v:237
Successfully finished Verilog frontend.

-- Parsing `top_ice40.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: top_ice40.v
Parsing Verilog input from `top_ice40.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -json hardware.json' --

16. Executing SYNTH_ICE40 pass.

16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

16.2. Executing HIERARCHY pass (managing design hierarchy).

16.2.1. Finding top of design hierarchy..
root of   4 design levels: top                 
root of   3 design levels: flight              
root of   0 design levels: debug_protocol      
root of   1 design levels: motor_control       
root of   2 design levels: fport_rx_decoder    
root of   0 design levels: DShotTx             
root of   0 design levels: DShotPacketEncoder  
root of   1 design levels: uart                
root of   0 design levels: uart_tx             
root of   0 design levels: uart_rx             
root of   0 design levels: spi_master          
root of   1 design levels: imu_mpu_9250        
root of   1 design levels: FIFODualPort        
root of   0 design levels: BlockMemoryDualPort 
root of   0 design levels: BlockMemorySinglePort
root of   0 design levels: axis_scalar         
root of   1 design levels: motor_mixer         
Automatically selected top as design top module.

16.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \flight
Used module:         \motor_control
Used module:             \DShotTx
Used module:             \DShotPacketEncoder
Used module:         \motor_mixer
Used module:             \axis_scalar
Used module:         \fport_rx_decoder
Used module:             \FIFODualPort
Used module:                 \BlockMemoryDualPort
Used module:         \uart_rx
Used module:         \imu_mpu_9250
Used module:             \spi_master
Used module:         \debug_protocol
Used module:         \uart
Used module:             \uart_tx

16.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 0
Parameter \MIX_SCALAR = 0
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=0'.

16.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 3
Parameter \MIX_SCALAR = 0
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=0'.

16.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 2
Parameter \MIX_SCALAR = 0
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=0'.

16.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 1
Parameter \MIX_SCALAR = 0
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=0'.

16.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\BlockMemoryDualPort'.
Parameter \DEPTH = 8
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\BlockMemoryDualPort\DEPTH=8\DATA_WIDTH=8'.

16.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\spi_master'.
Parameter \CLKS_PER_BIT = 0
Parameter \WORDBITS = 56
Generating RTLIL representation for module `$paramod\spi_master\CLKS_PER_BIT=0\WORDBITS=56'.

16.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\spi_master'.
Parameter \CLKS_PER_BIT = 16
Parameter \WORDBITS = 16
Generating RTLIL representation for module `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16'.

16.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \CLKS_PER_BIT = 139
Parameter \WORDBITS = 8
Parameter \STOPBITS = 1
Generating RTLIL representation for module `$paramod\uart_rx\CLKS_PER_BIT=139\WORDBITS=8\STOPBITS=1'.

16.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \CLKS_PER_BIT = 139
Parameter \WORDBITS = 8
Parameter \STOPBITS = 1
Generating RTLIL representation for module `$paramod\uart_tx\CLKS_PER_BIT=139\WORDBITS=8\STOPBITS=1'.

16.2.12. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFODualPort'.
Parameter \DEPTH = 64
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8'.

16.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\DShotTx'.
Parameter \CLKS_PER_BIT = 26
Generating RTLIL representation for module `$paramod\DShotTx\CLKS_PER_BIT=26'.

16.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Generating RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.15. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Found cached RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.16. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Found cached RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.17. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Found cached RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.18. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 3
Parameter \ROLL_MIX = 32'11110000000000000000000000000000
Parameter \PITCH_MIX = 268435456
Parameter \YAW_MIX = 32'11110000000000000000000000000000
Parameter \THROTTLE_MIX = 268435456
Generating RTLIL representation for module `$paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer'.

16.2.19. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 2
Parameter \ROLL_MIX = 32'11110000000000000000000000000000
Parameter \PITCH_MIX = 32'11110000000000000000000000000000
Parameter \YAW_MIX = 268435456
Parameter \THROTTLE_MIX = 268435456
Generating RTLIL representation for module `$paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer'.

16.2.20. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 1
Parameter \ROLL_MIX = 268435456
Parameter \PITCH_MIX = 268435456
Parameter \YAW_MIX = 268435456
Parameter \THROTTLE_MIX = 268435456
Generating RTLIL representation for module `$paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer'.

16.2.21. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 0
Parameter \ROLL_MIX = 268435456
Parameter \PITCH_MIX = 32'11110000000000000000000000000000
Parameter \YAW_MIX = 32'11110000000000000000000000000000
Parameter \THROTTLE_MIX = 268435456
Generating RTLIL representation for module `$paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer'.

16.2.22. Executing AST frontend in derive mode using pre-parsed AST for module `\fport_rx_decoder'.
Parameter \BASE_FREQ = 16000000
Generating RTLIL representation for module `$paramod\fport_rx_decoder\BASE_FREQ=16000000'.

16.2.23. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \CLKS_PER_BIT = 138
Generating RTLIL representation for module `$paramod\uart_rx\CLKS_PER_BIT=138'.

16.2.24. Executing AST frontend in derive mode using pre-parsed AST for module `\imu_mpu_9250'.
Parameter \BASE_FREQ = 16000000
Parameter \GYRO_UPDATE_HZ = 32000
Parameter \GYRO_SPI_REG_FREQ = 1000000
Parameter \GYRO_SPI_UPDATE_FREQ = 4000000
Generating RTLIL representation for module `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250'.

16.2.25. Executing AST frontend in derive mode using pre-parsed AST for module `\uart'.
Parameter \CLKS_PER_BIT = 8
Generating RTLIL representation for module `$paramod\uart\CLKS_PER_BIT=8'.

16.2.26. Executing AST frontend in derive mode using pre-parsed AST for module `\flight'.
Parameter \BASE_FREQ = 16000000
Generating RTLIL representation for module `$paramod\flight\BASE_FREQ=16000000'.
Warning: Replacing memory \attitude with list of registers. See flight.v:197, flight.v:196
Warning: Replacing memory \motorThrottle with list of registers. See flight.v:300
Warning: Replacing memory \inputs with list of registers. See flight.v:318, flight.v:249
Warning: Replacing memory \setpoint with list of registers. See flight.v:451, flight.v:243
Warning: Replacing memory \gyro_rates_sampled with list of registers. See flight.v:459, flight.v:237

16.2.27. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod\flight\BASE_FREQ=16000000
Used module:         \motor_control
Used module:             $paramod\DShotTx\CLKS_PER_BIT=26
Used module:             \DShotPacketEncoder
Used module:         \motor_mixer
Used module:             $paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=0
Used module:             $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=0
Used module:             $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=0
Used module:             $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=0
Used module:         \fport_rx_decoder
Used module:             $paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8
Used module:                 \BlockMemoryDualPort
Used module:         \uart_rx
Used module:         \imu_mpu_9250
Used module:             $paramod\spi_master\CLKS_PER_BIT=0\WORDBITS=56
Used module:             $paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16
Used module:         \debug_protocol
Used module:         \uart
Used module:             $paramod\uart_rx\CLKS_PER_BIT=139\WORDBITS=8\STOPBITS=1
Used module:             $paramod\uart_tx\CLKS_PER_BIT=139\WORDBITS=8\STOPBITS=1

16.2.28. Executing AST frontend in derive mode using pre-parsed AST for module `\BlockMemoryDualPort'.
Parameter \DEPTH = 64
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8'.

16.2.29. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Found cached RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.30. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Found cached RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.31. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Found cached RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.32. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_control'.
Parameter \BASE_FREQ = 16000000
Parameter \DSHOT_FREQ = 600000
Found cached RTLIL representation for module `$paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000'.

16.2.33. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 3
Parameter \ROLL_MIX = 32'11110000000000000000000000000000
Parameter \PITCH_MIX = 268435456
Parameter \YAW_MIX = 32'11110000000000000000000000000000
Parameter \THROTTLE_MIX = 268435456
Found cached RTLIL representation for module `$paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer'.

16.2.34. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 2
Parameter \ROLL_MIX = 32'11110000000000000000000000000000
Parameter \PITCH_MIX = 32'11110000000000000000000000000000
Parameter \YAW_MIX = 268435456
Parameter \THROTTLE_MIX = 268435456
Found cached RTLIL representation for module `$paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer'.

16.2.35. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 1
Parameter \ROLL_MIX = 268435456
Parameter \PITCH_MIX = 268435456
Parameter \YAW_MIX = 268435456
Parameter \THROTTLE_MIX = 268435456
Found cached RTLIL representation for module `$paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer'.

16.2.36. Executing AST frontend in derive mode using pre-parsed AST for module `\motor_mixer'.
Parameter \MOTOR_INDEX = 0
Parameter \ROLL_MIX = 268435456
Parameter \PITCH_MIX = 32'11110000000000000000000000000000
Parameter \YAW_MIX = 32'11110000000000000000000000000000
Parameter \THROTTLE_MIX = 268435456
Found cached RTLIL representation for module `$paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer'.

16.2.37. Executing AST frontend in derive mode using pre-parsed AST for module `\fport_rx_decoder'.
Parameter \BASE_FREQ = 16000000
Found cached RTLIL representation for module `$paramod\fport_rx_decoder\BASE_FREQ=16000000'.

16.2.38. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \CLKS_PER_BIT = 138
Found cached RTLIL representation for module `$paramod\uart_rx\CLKS_PER_BIT=138'.

16.2.39. Executing AST frontend in derive mode using pre-parsed AST for module `\imu_mpu_9250'.
Parameter \BASE_FREQ = 16000000
Parameter \GYRO_UPDATE_HZ = 32000
Parameter \GYRO_SPI_REG_FREQ = 1000000
Parameter \GYRO_SPI_UPDATE_FREQ = 4000000
Found cached RTLIL representation for module `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250'.

16.2.40. Executing AST frontend in derive mode using pre-parsed AST for module `\uart'.
Parameter \CLKS_PER_BIT = 8
Found cached RTLIL representation for module `$paramod\uart\CLKS_PER_BIT=8'.

16.2.41. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod\flight\BASE_FREQ=16000000
Used module:         $paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000
Used module:             \DShotTx
Used module:             \DShotPacketEncoder
Used module:         $paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer
Used module:             \axis_scalar
Used module:         $paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer
Used module:         $paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer
Used module:         $paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer
Used module:         $paramod\fport_rx_decoder\BASE_FREQ=16000000
Used module:             \FIFODualPort
Used module:                 $paramod\BlockMemoryDualPort\DEPTH=8\DATA_WIDTH=8
Used module:         $paramod\uart_rx\CLKS_PER_BIT=138
Used module:         $paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250
Used module:             \spi_master
Used module:         \debug_protocol
Used module:         $paramod\uart\CLKS_PER_BIT=8
Used module:             \uart_rx
Used module:             \uart_tx

16.2.42. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 0
Parameter \MIX_SCALAR = 268435456
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456'.

16.2.43. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 3
Parameter \MIX_SCALAR = 32'11110000000000000000000000000000
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=32'11110000000000000000000000000000'.

16.2.44. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 2
Parameter \MIX_SCALAR = 268435456
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=268435456'.

16.2.45. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 1
Parameter \MIX_SCALAR = 32'11110000000000000000000000000000
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=32'11110000000000000000000000000000'.

16.2.46. Executing AST frontend in derive mode using pre-parsed AST for module `\DShotTx'.
Parameter \CLKS_PER_BIT = 26
Found cached RTLIL representation for module `$paramod\DShotTx\CLKS_PER_BIT=26'.

16.2.47. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 0
Parameter \MIX_SCALAR = 268435456
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456'.

16.2.48. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 3
Parameter \MIX_SCALAR = 268435456
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=268435456'.

16.2.49. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 2
Parameter \MIX_SCALAR = 32'11110000000000000000000000000000
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=32'11110000000000000000000000000000'.

16.2.50. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 1
Parameter \MIX_SCALAR = 32'11110000000000000000000000000000
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=32'11110000000000000000000000000000'.

16.2.51. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 0
Parameter \MIX_SCALAR = 268435456
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456'.

16.2.52. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 3
Parameter \MIX_SCALAR = 268435456
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=268435456'.

16.2.53. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 2
Parameter \MIX_SCALAR = 268435456
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=268435456'.

16.2.54. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 1
Parameter \MIX_SCALAR = 268435456
Generating RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=268435456'.

16.2.55. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 0
Parameter \MIX_SCALAR = 268435456
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456'.

16.2.56. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 3
Parameter \MIX_SCALAR = 32'11110000000000000000000000000000
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=32'11110000000000000000000000000000'.

16.2.57. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 2
Parameter \MIX_SCALAR = 32'11110000000000000000000000000000
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=32'11110000000000000000000000000000'.

16.2.58. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_scalar'.
Parameter \AXIS_INDEX = 1
Parameter \MIX_SCALAR = 268435456
Found cached RTLIL representation for module `$paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=268435456'.

16.2.59. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFODualPort'.
Parameter \DEPTH = 64
Parameter \DATA_WIDTH = 8
Found cached RTLIL representation for module `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8'.

16.2.60. Executing AST frontend in derive mode using pre-parsed AST for module `\spi_master'.
Parameter \CLKS_PER_BIT = 4
Parameter \WORDBITS = 56
Generating RTLIL representation for module `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56'.

16.2.61. Executing AST frontend in derive mode using pre-parsed AST for module `\spi_master'.
Parameter \CLKS_PER_BIT = 16
Parameter \WORDBITS = 16
Found cached RTLIL representation for module `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16'.

16.2.62. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \CLKS_PER_BIT = 8
Parameter \WORDBITS = 8
Parameter \STOPBITS = 1
Generating RTLIL representation for module `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1'.

16.2.63. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \CLKS_PER_BIT = 8
Parameter \WORDBITS = 8
Parameter \STOPBITS = 1
Generating RTLIL representation for module `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1'.

16.2.64. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod\flight\BASE_FREQ=16000000
Used module:         $paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000
Used module:             $paramod\DShotTx\CLKS_PER_BIT=26
Used module:             \DShotPacketEncoder
Used module:         $paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer
Used module:             $paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456
Used module:             $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=32'11110000000000000000000000000000
Used module:             $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=268435456
Used module:             $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=32'11110000000000000000000000000000
Used module:         $paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer
Used module:             $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=268435456
Used module:             $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=32'11110000000000000000000000000000
Used module:         $paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer
Used module:             $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=268435456
Used module:         $paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer
Used module:         $paramod\fport_rx_decoder\BASE_FREQ=16000000
Used module:             $paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8
Used module:                 $paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8
Used module:         $paramod\uart_rx\CLKS_PER_BIT=138
Used module:         $paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250
Used module:             $paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56
Used module:             $paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16
Used module:         \debug_protocol
Used module:         $paramod\uart\CLKS_PER_BIT=8
Used module:             $paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1
Used module:             $paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1

16.2.65. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod\flight\BASE_FREQ=16000000
Used module:         $paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000
Used module:             $paramod\DShotTx\CLKS_PER_BIT=26
Used module:             \DShotPacketEncoder
Used module:         $paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer
Used module:             $paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456
Used module:             $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=32'11110000000000000000000000000000
Used module:             $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=268435456
Used module:             $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=32'11110000000000000000000000000000
Used module:         $paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer
Used module:             $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=268435456
Used module:             $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=32'11110000000000000000000000000000
Used module:         $paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer
Used module:             $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=268435456
Used module:         $paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer
Used module:         $paramod\fport_rx_decoder\BASE_FREQ=16000000
Used module:             $paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8
Used module:                 $paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8
Used module:         $paramod\uart_rx\CLKS_PER_BIT=138
Used module:         $paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250
Used module:             $paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56
Used module:             $paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16
Used module:         \debug_protocol
Used module:         $paramod\uart\CLKS_PER_BIT=8
Used module:             $paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1
Used module:             $paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1
Removing unused module `$paramod\uart_tx\CLKS_PER_BIT=139\WORDBITS=8\STOPBITS=1'.
Removing unused module `$paramod\uart_rx\CLKS_PER_BIT=139\WORDBITS=8\STOPBITS=1'.
Removing unused module `$paramod\spi_master\CLKS_PER_BIT=0\WORDBITS=56'.
Removing unused module `$paramod\BlockMemoryDualPort\DEPTH=8\DATA_WIDTH=8'.
Removing unused module `$paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=0'.
Removing unused module `$paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=0'.
Removing unused module `$paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=0'.
Removing unused module `$paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=0'.
Removing unused module `\flight'.
Removing unused module `\motor_control'.
Removing unused module `\fport_rx_decoder'.
Removing unused module `\DShotTx'.
Removing unused module `\uart'.
Removing unused module `\uart_tx'.
Removing unused module `\uart_rx'.
Removing unused module `\spi_master'.
Removing unused module `\imu_mpu_9250'.
Removing unused module `\FIFODualPort'.
Removing unused module `\BlockMemoryDualPort'.
Removing unused module `\BlockMemorySinglePort'.
Removing unused module `\axis_scalar'.
Removing unused module `\motor_mixer'.
Removed 22 unused modules.

16.3. Executing PROC pass (convert processes to netlists).

16.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:44$1938'.
Found and cleaned up 3 empty switches in `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
Cleaned up 3 empty switches.

16.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$ip/peripherals/uart/uart_tx.v:49$1939 in module $paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.
Marked 4 switch rules as full_case in process $proc$ip/peripherals/uart/uart_rx.v:32$1922 in module $paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.
Marked 6 switch rules as full_case in process $proc$ip/peripherals/spi/spi_master.v:42$957 in module $paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.
Marked 5 switch rules as full_case in process $proc$ip/peripherals/spi/spi_master.v:42$1906 in module $paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.
Marked 1 switch rules as full_case in process $proc$ip/debug/debug_protocol.v:79$184 in module debug_protocol.
Marked 27 switch rules as full_case in process $proc$flight.v:288$1277 in module $paramod\flight\BASE_FREQ=16000000.
Marked 7 switch rules as full_case in process $proc$ip/peripherals/imu/imu_mpu9250.v:198$1104 in module $paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.
Marked 4 switch rules as full_case in process $proc$ip/peripherals/uart/uart_rx.v:32$1077 in module $paramod\uart_rx\CLKS_PER_BIT=138.
Marked 6 switch rules as full_case in process $proc$ip/peripherals/rc/fport_rx_decode.v:185$1053 in module $paramod\fport_rx_decoder\BASE_FREQ=16000000.
Marked 1 switch rules as full_case in process $proc$ip/peripherals/rc/fport_rx_decode.v:173$1045 in module $paramod\fport_rx_decoder\BASE_FREQ=16000000.
Marked 3 switch rules as full_case in process $proc$ip/peripherals/rc/dshottx.v:44$1009 in module $paramod\DShotTx\CLKS_PER_BIT=26.
Removed a total of 0 dead cases.

16.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:51$1008'.
  Set init value: \write_address = 6'000000
  Set init value: \read_address = 6'000000
Found init rule in `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:36$1951'.
  Set init value: \data = 8'00000000
  Set init value: \state = 4'0000
  Set init value: \outputBit = 1'1
  Set init value: \bufferFull = 1'0
  Set init value: \sending = 1'0
Found init rule in `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:26$1937'.
  Set init value: \rxData = 8'00000000
  Set init value: \state = 4'0000
  Set init value: \rxDataReady = 1'0
Found init rule in `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:34$972'.
  Set init value: \outMOSI = 1'0
  Set init value: \complete = 1'0
  Set init value: \state = 4'0000
Found init rule in `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:34$1921'.
  Set init value: \outMOSI = 1'0
  Set init value: \complete = 1'0
  Set init value: \state = 4'0000
Found init rule in `\debug_protocol.$proc$ip/debug/debug_protocol.v:75$189'.
  Set init value: \state = 8'00000000
Found init rule in `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
  Set init value: \attitudeUpdateCounter = 8'00000000
  Set init value: \debugState = 5'00000
  Set init value: \debugUpdateCount = 10
  Set init value: \fc_state = 8'00000000
  Set init value: \update_attitude = 1'0
  Set init value: \change_update_state = 1'1
  Set init value: \waitCount = 16'0000000000000000
  Set init value: \gyro_rates_sampled[0] = 0
  Set init value: \gyro_rates_sampled[1] = 0
  Set init value: \gyro_rates_sampled[2] = 0
  Set init value: \setpoint[0] = 32'11110000000000000000000000000000
  Set init value: \setpoint[1] = 0
  Set init value: \setpoint[2] = 0
  Set init value: \setpoint[3] = 0
  Set init value: \inputs[0] = 0
  Set init value: \inputs[1] = 0
  Set init value: \inputs[2] = 0
  Set init value: \inputs[3] = 0
Found init rule in `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
  Set init value: \rates_raw_roll = 0
  Set init value: \rates_raw_pitch = 0
  Set init value: \rates_raw_yaw = 0
  Set init value: \counter1 = 0
  Set init value: \sample_write = 6'000000
  Set init value: \sample_read = 6'000000
  Set init value: \imu_state = 8'00000000
  Set init value: \imu_cfg_state = 8'00000001
  Set init value: \imu_sample_state = 8'00000000
Found init rule in `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:26$1092'.
  Set init value: \rxData = 8'00000000
  Set init value: \state = 4'0000
  Set init value: \rxDataReady = 1'0
Found init rule in `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:151$1076'.
  Set init value: \failsafe = 1'1
  Set init value: \state = 4'0000
  Set init value: \controls4 = 11'00000000000
  Set init value: \controlFrameReady = 1'0
  Set init value: \frameRecv = 1'0
  Set init value: \controls0 = 11'00000000000
  Set init value: \controls1 = 11'00000000000
  Set init value: \controls2 = 11'00000000000
  Set init value: \controls3 = 11'00000000000
  Set init value: \rssi = 8'00000000
  Set init value: \rxFrameLoss = 1'1
  Set init value: \timeout_counter = 16000000
  Set init value: \waitDelay = 4'0000
  Set init value: \unmask = 1'0
  Set init value: \packet_data_read = 8'00000000
  Set init value: \fifo_read = 1'0

16.3.4. Executing PROC_ARST pass (detect async resets in processes).

16.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:51$1008'.
     1/2: $1\read_address[5:0]
     2/2: $1\write_address[5:0]
Creating decoders for process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:63$1006'.
     1/1: $0\read_address[5:0]
Creating decoders for process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:57$1004'.
     1/1: $0\write_address[5:0]
Creating decoders for process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
     1/9: $0\sending[0:0]
     2/9: $0\bufferFull[0:0]
     3/9: $0\sendingComplete[0:0]
     4/9: $0\outputBit[0:0]
     5/9: $0\buffer[7:0]
     6/9: $0\state[3:0]
     7/9: $0\bitCount[4:0]
     8/9: $0\timerCount[2:0]
     9/9: $0\data[7:0]
Creating decoders for process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:36$1951'.
     1/5: $1\bufferFull[0:0]
     2/5: $1\data[7:0]
     3/5: $1\sending[0:0]
     4/5: $1\outputBit[0:0]
     5/5: $1\state[3:0]
Creating decoders for process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:26$1937'.
     1/3: $1\rxData[7:0]
     2/3: $1\rxDataReady[0:0]
     3/3: $1\state[3:0]
Creating decoders for process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
     1/13: $0\rxData[7:0] [7]
     2/13: $0\rxData[7:0] [6]
     3/13: $0\rxData[7:0] [5]
     4/13: $0\rxData[7:0] [4]
     5/13: $0\rxData[7:0] [3]
     6/13: $0\rxData[7:0] [2]
     7/13: $0\rxData[7:0] [1]
     8/13: $0\rxData[7:0] [0]
     9/13: $0\state[3:0]
    10/13: $0\bitCount[4:0]
    11/13: $0\timerCount[2:0]
    12/13: $0\rxDataReady[0:0]
    13/13: $0\data[7:0]
Creating decoders for process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:34$972'.
     1/3: $1\outMOSI[0:0]
     2/3: $1\complete[0:0]
     3/3: $1\state[3:0]
Creating decoders for process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
     1/24: $0\rxData[15:0] [15]
     2/24: $0\rxData[15:0] [14]
     3/24: $0\rxData[15:0] [13]
     4/24: $0\rxData[15:0] [12]
     5/24: $0\rxData[15:0] [11]
     6/24: $0\rxData[15:0] [10]
     7/24: $0\rxData[15:0] [9]
     8/24: $0\rxData[15:0] [8]
     9/24: $0\rxData[15:0] [7]
    10/24: $0\rxData[15:0] [6]
    11/24: $0\rxData[15:0] [5]
    12/24: $0\rxData[15:0] [4]
    13/24: $0\rxData[15:0] [3]
    14/24: $0\rxData[15:0] [2]
    15/24: $0\rxData[15:0] [1]
    16/24: $0\rxData[15:0] [0]
    17/24: $0\bitCount[3:0]
    18/24: $0\timerCount[15:0]
    19/24: $0\state[3:0]
    20/24: $0\complete[0:0]
    21/24: $0\outCS[0:0]
    22/24: $0\outMOSI[0:0]
    23/24: $0\outCLK[0:0]
    24/24: $0\data[15:0]
Creating decoders for process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:34$1921'.
     1/3: $1\outMOSI[0:0]
     2/3: $1\complete[0:0]
     3/3: $1\state[3:0]
Creating decoders for process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
     1/64: $0\rxData[55:0] [55]
     2/64: $0\rxData[55:0] [54]
     3/64: $0\rxData[55:0] [53]
     4/64: $0\rxData[55:0] [52]
     5/64: $0\rxData[55:0] [51]
     6/64: $0\rxData[55:0] [50]
     7/64: $0\rxData[55:0] [49]
     8/64: $0\rxData[55:0] [48]
     9/64: $0\rxData[55:0] [47]
    10/64: $0\rxData[55:0] [46]
    11/64: $0\rxData[55:0] [45]
    12/64: $0\rxData[55:0] [44]
    13/64: $0\rxData[55:0] [43]
    14/64: $0\rxData[55:0] [42]
    15/64: $0\rxData[55:0] [41]
    16/64: $0\rxData[55:0] [40]
    17/64: $0\rxData[55:0] [39]
    18/64: $0\rxData[55:0] [38]
    19/64: $0\rxData[55:0] [37]
    20/64: $0\rxData[55:0] [36]
    21/64: $0\rxData[55:0] [35]
    22/64: $0\rxData[55:0] [34]
    23/64: $0\rxData[55:0] [33]
    24/64: $0\rxData[55:0] [32]
    25/64: $0\rxData[55:0] [31]
    26/64: $0\rxData[55:0] [30]
    27/64: $0\rxData[55:0] [29]
    28/64: $0\rxData[55:0] [28]
    29/64: $0\rxData[55:0] [27]
    30/64: $0\rxData[55:0] [26]
    31/64: $0\rxData[55:0] [25]
    32/64: $0\rxData[55:0] [24]
    33/64: $0\rxData[55:0] [23]
    34/64: $0\rxData[55:0] [22]
    35/64: $0\rxData[55:0] [21]
    36/64: $0\rxData[55:0] [20]
    37/64: $0\rxData[55:0] [19]
    38/64: $0\rxData[55:0] [18]
    39/64: $0\rxData[55:0] [17]
    40/64: $0\rxData[55:0] [16]
    41/64: $0\rxData[55:0] [15]
    42/64: $0\rxData[55:0] [14]
    43/64: $0\rxData[55:0] [13]
    44/64: $0\rxData[55:0] [12]
    45/64: $0\rxData[55:0] [11]
    46/64: $0\rxData[55:0] [10]
    47/64: $0\rxData[55:0] [9]
    48/64: $0\rxData[55:0] [8]
    49/64: $0\rxData[55:0] [7]
    50/64: $0\rxData[55:0] [6]
    51/64: $0\rxData[55:0] [5]
    52/64: $0\rxData[55:0] [4]
    53/64: $0\rxData[55:0] [3]
    54/64: $0\rxData[55:0] [2]
    55/64: $0\rxData[55:0] [1]
    56/64: $0\rxData[55:0] [0]
    57/64: $0\bitCount[5:0]
    58/64: $0\timerCount[15:0]
    59/64: $0\state[3:0]
    60/64: $0\complete[0:0]
    61/64: $0\outCS[0:0]
    62/64: $0\outMOSI[0:0]
    63/64: $0\outCLK[0:0]
    64/64: $0\data[55:0]
Creating decoders for process `\debug_protocol.$proc$ip/debug/debug_protocol.v:75$189'.
     1/1: $1\state[7:0]
Creating decoders for process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
     1/8: $0\uart_data_in[7:0]
     2/8: $0\msgDataIndex[7:0]
     3/8: $0\uart_send[0:0]
     4/8: $0\msgDataLoad[0:0]
     5/8: $0\msgComplete[0:0]
     6/8: $0\sentDataCount[7:0]
     7/8: $0\nextState[7:0]
     8/8: $0\state[7:0]
Creating decoders for process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:43$1885'.
     1/4: $0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887
     2/4: $0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_DATA[7:0]$1886
     3/4: $0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_ADDR[5:0]$1888
     4/4: $0\p2_read_value[7:0]
Creating decoders for process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:31$1880'.
     1/4: $0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1878_EN[7:0]$1883
     2/4: $0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1878_DATA[7:0]$1882
     3/4: $0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1878_ADDR[5:0]$1881
     4/4: $0\p1_read_value[7:0]
Creating decoders for process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
     1/53: $1\waitCount[15:0]
     2/53: $1\attitudeUpdateCounter[7:0]
     3/53: $1\update_attitude[0:0]
     4/53: $1\change_update_state[0:0]
     5/53: $1\fc_state[7:0]
     6/53: $0\inputs[4][31:0]
     7/53: $1\inputs[3][31:0]
     8/53: $1\inputs[2][31:0]
     9/53: $1\inputs[1][31:0]
    10/53: $1\inputs[0][31:0]
    11/53: $0\setpoint[4][31:0]
    12/53: $1\setpoint[3][31:0]
    13/53: $1\setpoint[2][31:0]
    14/53: $1\setpoint[1][31:0]
    15/53: $1\setpoint[0][31:0]
    16/53: $0\useGyro[0:0]
    17/53: $1\gyro_rates_sampled[2][31:0]
    18/53: $1\gyro_rates_sampled[1][31:0]
    19/53: $1\gyro_rates_sampled[0][31:0]
    20/53: $1\debugUpdateCount[31:0]
    21/53: $1\debugState[4:0]
    22/53: $0$memwr$\pid_gains$flight.v:232$1276_DATA[31:0]$1877
    23/53: $0$memwr$\pid_gains$flight.v:232$1276_ADDR[31:0]$1876
    24/53: $0$memwr$\pid_gains$flight.v:231$1275_DATA[31:0]$1875
    25/53: $0$memwr$\pid_gains$flight.v:231$1275_ADDR[31:0]$1874
    26/53: $0$memwr$\pid_gains$flight.v:230$1274_DATA[31:0]$1873
    27/53: $0$memwr$\pid_gains$flight.v:230$1274_ADDR[31:0]$1872
    28/53: $0$memwr$\pid_gains$flight.v:229$1273_DATA[31:0]$1871
    29/53: $0$memwr$\pid_gains$flight.v:229$1273_ADDR[31:0]$1870
    30/53: $0$memwr$\pid_gains$flight.v:226$1272_DATA[31:0]$1869
    31/53: $0$memwr$\pid_gains$flight.v:226$1272_ADDR[31:0]$1868
    32/53: $0$memwr$\pid_gains$flight.v:225$1271_DATA[31:0]$1867
    33/53: $0$memwr$\pid_gains$flight.v:225$1271_ADDR[31:0]$1866
    34/53: $0$memwr$\pid_gains$flight.v:224$1270_DATA[31:0]$1865
    35/53: $0$memwr$\pid_gains$flight.v:224$1270_ADDR[31:0]$1864
    36/53: $0$memwr$\pid_gains$flight.v:223$1269_DATA[31:0]$1863
    37/53: $0$memwr$\pid_gains$flight.v:223$1269_ADDR[31:0]$1862
    38/53: $0$memwr$\pid_gains$flight.v:221$1268_DATA[31:0]$1861
    39/53: $0$memwr$\pid_gains$flight.v:221$1268_ADDR[31:0]$1860
    40/53: $0$memwr$\pid_gains$flight.v:220$1267_DATA[31:0]$1859
    41/53: $0$memwr$\pid_gains$flight.v:220$1267_ADDR[31:0]$1858
    42/53: $0$memwr$\pid_gains$flight.v:219$1266_DATA[31:0]$1857
    43/53: $0$memwr$\pid_gains$flight.v:219$1266_ADDR[31:0]$1856
    44/53: $0$memwr$\pid_gains$flight.v:218$1265_DATA[31:0]$1855
    45/53: $0$memwr$\pid_gains$flight.v:218$1265_ADDR[31:0]$1854
    46/53: $0$memwr$\pid_gains$flight.v:216$1264_DATA[31:0]$1853
    47/53: $0$memwr$\pid_gains$flight.v:216$1264_ADDR[31:0]$1852
    48/53: $0$memwr$\pid_gains$flight.v:215$1263_DATA[31:0]$1851
    49/53: $0$memwr$\pid_gains$flight.v:215$1263_ADDR[31:0]$1850
    50/53: $0$memwr$\pid_gains$flight.v:214$1262_DATA[31:0]$1849
    51/53: $0$memwr$\pid_gains$flight.v:214$1262_ADDR[31:0]$1848
    52/53: $0$memwr$\pid_gains$flight.v:213$1261_DATA[31:0]$1847
    53/53: $0$memwr$\pid_gains$flight.v:213$1261_ADDR[31:0]$1846
Creating decoders for process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:865$1827'.
     1/1: $0$mem2bits$\motorThrottle$flight.v:865$1245[31:0]$1828
Creating decoders for process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:852$1825'.
     1/1: $0$mem2bits$\motorThrottle$flight.v:852$1244[31:0]$1826
Creating decoders for process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:839$1823'.
     1/1: $0$mem2bits$\motorThrottle$flight.v:839$1243[31:0]$1824
Creating decoders for process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:826$1821'.
     1/1: $0$mem2bits$\motorThrottle$flight.v:826$1242[31:0]$1822
Creating decoders for process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
     1/517: $3$mem2bits$\setpoint$flight.v:601$1222[31:0]$1800
     2/517: $3$mem2bits$\setpoint$flight.v:624$1241[31:0]$1819
     3/517: $3$mem2bits$\setpoint$flight.v:623$1240[31:0]$1818
     4/517: $3$mem2bits$\setpoint$flight.v:622$1239[31:0]$1817
     5/517: $3$mem2bits$\setpoint$flight.v:621$1238[31:0]$1816
     6/517: $3$mem2bits$\setpoint$flight.v:619$1237[31:0]$1815
     7/517: $3$mem2bits$\setpoint$flight.v:618$1236[31:0]$1814
     8/517: $3$mem2bits$\setpoint$flight.v:617$1235[31:0]$1813
     9/517: $3$mem2bits$\setpoint$flight.v:616$1234[31:0]$1812
    10/517: $3$mem2bits$\setpoint$flight.v:614$1233[31:0]$1811
    11/517: $3$mem2bits$\setpoint$flight.v:613$1232[31:0]$1810
    12/517: $3$mem2bits$\setpoint$flight.v:612$1231[31:0]$1809
    13/517: $3$mem2bits$\setpoint$flight.v:611$1230[31:0]$1808
    14/517: $3$mem2bits$\setpoint$flight.v:609$1229[31:0]$1807
    15/517: $3$mem2bits$\setpoint$flight.v:608$1228[31:0]$1806
    16/517: $3$mem2bits$\setpoint$flight.v:607$1227[31:0]$1805
    17/517: $3$mem2bits$\setpoint$flight.v:606$1226[31:0]$1804
    18/517: $3$mem2bits$\setpoint$flight.v:604$1225[31:0]$1803
    19/517: $3$mem2bits$\setpoint$flight.v:603$1224[31:0]$1802
    20/517: $3$mem2bits$\setpoint$flight.v:602$1223[31:0]$1801
    21/517: $3$mem2bits$\inputs$flight.v:571$1202[31:0]$1780
    22/517: $3$mem2bits$\inputs$flight.v:594$1221[31:0]$1799
    23/517: $3$mem2bits$\inputs$flight.v:593$1220[31:0]$1798
    24/517: $3$mem2bits$\inputs$flight.v:592$1219[31:0]$1797
    25/517: $3$mem2bits$\inputs$flight.v:591$1218[31:0]$1796
    26/517: $3$mem2bits$\inputs$flight.v:589$1217[31:0]$1795
    27/517: $3$mem2bits$\inputs$flight.v:588$1216[31:0]$1794
    28/517: $3$mem2bits$\inputs$flight.v:587$1215[31:0]$1793
    29/517: $3$mem2bits$\inputs$flight.v:586$1214[31:0]$1792
    30/517: $3$mem2bits$\inputs$flight.v:584$1213[31:0]$1791
    31/517: $3$mem2bits$\inputs$flight.v:583$1212[31:0]$1790
    32/517: $3$mem2bits$\inputs$flight.v:582$1211[31:0]$1789
    33/517: $3$mem2bits$\inputs$flight.v:581$1210[31:0]$1788
    34/517: $3$mem2bits$\inputs$flight.v:579$1209[31:0]$1787
    35/517: $3$mem2bits$\inputs$flight.v:578$1208[31:0]$1786
    36/517: $3$mem2bits$\inputs$flight.v:577$1207[31:0]$1785
    37/517: $3$mem2bits$\inputs$flight.v:576$1206[31:0]$1784
    38/517: $3$mem2bits$\inputs$flight.v:574$1205[31:0]$1783
    39/517: $3$mem2bits$\inputs$flight.v:573$1204[31:0]$1782
    40/517: $3$mem2bits$\inputs$flight.v:572$1203[31:0]$1781
    41/517: $3$mem2bits$\motorThrottle$flight.v:543$1186[31:0]$1764
    42/517: $3$mem2bits$\motorThrottle$flight.v:564$1201[31:0]$1779
    43/517: $3$mem2bits$\motorThrottle$flight.v:563$1200[31:0]$1778
    44/517: $3$mem2bits$\motorThrottle$flight.v:562$1199[31:0]$1777
    45/517: $3$mem2bits$\motorThrottle$flight.v:561$1198[31:0]$1776
    46/517: $3$mem2bits$\motorThrottle$flight.v:558$1197[31:0]$1775
    47/517: $3$mem2bits$\motorThrottle$flight.v:557$1196[31:0]$1774
    48/517: $3$mem2bits$\motorThrottle$flight.v:556$1195[31:0]$1773
    49/517: $3$mem2bits$\motorThrottle$flight.v:555$1194[31:0]$1772
    50/517: $3$mem2bits$\motorThrottle$flight.v:552$1193[31:0]$1771
    51/517: $3$mem2bits$\motorThrottle$flight.v:551$1192[31:0]$1770
    52/517: $3$mem2bits$\motorThrottle$flight.v:550$1191[31:0]$1769
    53/517: $3$mem2bits$\motorThrottle$flight.v:549$1190[31:0]$1768
    54/517: $3$mem2bits$\motorThrottle$flight.v:546$1189[31:0]$1767
    55/517: $3$mem2bits$\motorThrottle$flight.v:545$1188[31:0]$1766
    56/517: $3$mem2bits$\motorThrottle$flight.v:544$1187[31:0]$1765
    57/517: $3$mem2bits$\controlInputs$flight.v:513$1176[10:0]$1754
    58/517: $3$mem2bits$\controlInputs$flight.v:530$1185[10:0]$1763
    59/517: $3$mem2bits$\controlInputs$flight.v:529$1184[10:0]$1762
    60/517: $3$mem2bits$\controlInputs$flight.v:526$1183[10:0]$1761
    61/517: $3$mem2bits$\controlInputs$flight.v:525$1182[10:0]$1760
    62/517: $3$mem2bits$\controlInputs$flight.v:522$1181[10:0]$1759
    63/517: $3$mem2bits$\controlInputs$flight.v:521$1180[10:0]$1758
    64/517: $3$mem2bits$\controlInputs$flight.v:518$1179[10:0]$1757
    65/517: $3$mem2bits$\controlInputs$flight.v:517$1178[10:0]$1756
    66/517: $3$mem2bits$\controlInputs$flight.v:514$1177[10:0]$1755
    67/517: $3$mem2bits$\gyro_rates_sampled$flight.v:489$1164[31:0]$1742
    68/517: $3$mem2bits$\gyro_rates_sampled$flight.v:504$1175[31:0]$1753
    69/517: $3$mem2bits$\gyro_rates_sampled$flight.v:503$1174[31:0]$1752
    70/517: $3$mem2bits$\gyro_rates_sampled$flight.v:502$1173[31:0]$1751
    71/517: $3$mem2bits$\gyro_rates_sampled$flight.v:501$1172[31:0]$1750
    72/517: $3$mem2bits$\gyro_rates_sampled$flight.v:498$1171[31:0]$1749
    73/517: $3$mem2bits$\gyro_rates_sampled$flight.v:497$1170[31:0]$1748
    74/517: $3$mem2bits$\gyro_rates_sampled$flight.v:496$1169[31:0]$1747
    75/517: $3$mem2bits$\gyro_rates_sampled$flight.v:495$1168[31:0]$1746
    76/517: $3$mem2bits$\gyro_rates_sampled$flight.v:492$1167[31:0]$1745
    77/517: $3$mem2bits$\gyro_rates_sampled$flight.v:491$1166[31:0]$1744
    78/517: $3$mem2bits$\gyro_rates_sampled$flight.v:490$1165[31:0]$1743
    79/517: $2$mem2bits$\setpoint$flight.v:624$1241[31:0]$1741
    80/517: $2$mem2bits$\setpoint$flight.v:623$1240[31:0]$1740
    81/517: $2$mem2bits$\setpoint$flight.v:622$1239[31:0]$1739
    82/517: $2$mem2bits$\setpoint$flight.v:621$1238[31:0]$1738
    83/517: $2$mem2bits$\setpoint$flight.v:619$1237[31:0]$1737
    84/517: $2$mem2bits$\setpoint$flight.v:618$1236[31:0]$1736
    85/517: $2$mem2bits$\setpoint$flight.v:617$1235[31:0]$1735
    86/517: $2$mem2bits$\setpoint$flight.v:616$1234[31:0]$1734
    87/517: $2$mem2bits$\setpoint$flight.v:614$1233[31:0]$1733
    88/517: $2$mem2bits$\setpoint$flight.v:613$1232[31:0]$1732
    89/517: $2$mem2bits$\setpoint$flight.v:612$1231[31:0]$1731
    90/517: $2$mem2bits$\setpoint$flight.v:611$1230[31:0]$1730
    91/517: $2$mem2bits$\setpoint$flight.v:609$1229[31:0]$1729
    92/517: $2$mem2bits$\setpoint$flight.v:608$1228[31:0]$1728
    93/517: $2$mem2bits$\setpoint$flight.v:607$1227[31:0]$1727
    94/517: $2$mem2bits$\setpoint$flight.v:606$1226[31:0]$1726
    95/517: $2$mem2bits$\setpoint$flight.v:604$1225[31:0]$1725
    96/517: $2$mem2bits$\setpoint$flight.v:603$1224[31:0]$1724
    97/517: $2$mem2bits$\setpoint$flight.v:602$1223[31:0]$1723
    98/517: $2$mem2bits$\setpoint$flight.v:601$1222[31:0]$1722
    99/517: $2$mem2bits$\inputs$flight.v:594$1221[31:0]$1721
   100/517: $2$mem2bits$\inputs$flight.v:593$1220[31:0]$1720
   101/517: $2$mem2bits$\inputs$flight.v:592$1219[31:0]$1719
   102/517: $2$mem2bits$\inputs$flight.v:591$1218[31:0]$1718
   103/517: $2$mem2bits$\inputs$flight.v:589$1217[31:0]$1717
   104/517: $2$mem2bits$\inputs$flight.v:588$1216[31:0]$1716
   105/517: $2$mem2bits$\inputs$flight.v:587$1215[31:0]$1715
   106/517: $2$mem2bits$\inputs$flight.v:586$1214[31:0]$1714
   107/517: $2$mem2bits$\inputs$flight.v:584$1213[31:0]$1713
   108/517: $2$mem2bits$\inputs$flight.v:583$1212[31:0]$1712
   109/517: $2$mem2bits$\inputs$flight.v:582$1211[31:0]$1711
   110/517: $2$mem2bits$\inputs$flight.v:581$1210[31:0]$1710
   111/517: $2$mem2bits$\inputs$flight.v:579$1209[31:0]$1709
   112/517: $2$mem2bits$\inputs$flight.v:578$1208[31:0]$1708
   113/517: $2$mem2bits$\inputs$flight.v:577$1207[31:0]$1707
   114/517: $2$mem2bits$\inputs$flight.v:576$1206[31:0]$1706
   115/517: $2$mem2bits$\inputs$flight.v:574$1205[31:0]$1705
   116/517: $2$mem2bits$\inputs$flight.v:573$1204[31:0]$1704
   117/517: $2$mem2bits$\inputs$flight.v:572$1203[31:0]$1703
   118/517: $2$mem2bits$\inputs$flight.v:571$1202[31:0]$1702
   119/517: $2$mem2bits$\motorThrottle$flight.v:564$1201[31:0]$1701
   120/517: $2$mem2bits$\motorThrottle$flight.v:563$1200[31:0]$1700
   121/517: $2$mem2bits$\motorThrottle$flight.v:562$1199[31:0]$1699
   122/517: $2$mem2bits$\motorThrottle$flight.v:561$1198[31:0]$1698
   123/517: $2$mem2bits$\motorThrottle$flight.v:558$1197[31:0]$1697
   124/517: $2$mem2bits$\motorThrottle$flight.v:557$1196[31:0]$1696
   125/517: $2$mem2bits$\motorThrottle$flight.v:556$1195[31:0]$1695
   126/517: $2$mem2bits$\motorThrottle$flight.v:555$1194[31:0]$1694
   127/517: $2$mem2bits$\motorThrottle$flight.v:552$1193[31:0]$1693
   128/517: $2$mem2bits$\motorThrottle$flight.v:551$1192[31:0]$1692
   129/517: $2$mem2bits$\motorThrottle$flight.v:550$1191[31:0]$1691
   130/517: $2$mem2bits$\motorThrottle$flight.v:549$1190[31:0]$1690
   131/517: $2$mem2bits$\motorThrottle$flight.v:546$1189[31:0]$1689
   132/517: $2$mem2bits$\motorThrottle$flight.v:545$1188[31:0]$1688
   133/517: $2$mem2bits$\motorThrottle$flight.v:544$1187[31:0]$1687
   134/517: $2$mem2bits$\motorThrottle$flight.v:543$1186[31:0]$1686
   135/517: $2$mem2bits$\controlInputs$flight.v:530$1185[10:0]$1685
   136/517: $2$mem2bits$\controlInputs$flight.v:529$1184[10:0]$1684
   137/517: $2$mem2bits$\controlInputs$flight.v:526$1183[10:0]$1683
   138/517: $2$mem2bits$\controlInputs$flight.v:525$1182[10:0]$1682
   139/517: $2$mem2bits$\controlInputs$flight.v:522$1181[10:0]$1681
   140/517: $2$mem2bits$\controlInputs$flight.v:521$1180[10:0]$1680
   141/517: $2$mem2bits$\controlInputs$flight.v:518$1179[10:0]$1679
   142/517: $2$mem2bits$\controlInputs$flight.v:517$1178[10:0]$1678
   143/517: $2$mem2bits$\controlInputs$flight.v:514$1177[10:0]$1677
   144/517: $2$mem2bits$\controlInputs$flight.v:513$1176[10:0]$1676
   145/517: $2$mem2bits$\gyro_rates_sampled$flight.v:504$1175[31:0]$1675
   146/517: $2$mem2bits$\gyro_rates_sampled$flight.v:503$1174[31:0]$1674
   147/517: $2$mem2bits$\gyro_rates_sampled$flight.v:502$1173[31:0]$1673
   148/517: $2$mem2bits$\gyro_rates_sampled$flight.v:501$1172[31:0]$1672
   149/517: $2$mem2bits$\gyro_rates_sampled$flight.v:498$1171[31:0]$1671
   150/517: $2$mem2bits$\gyro_rates_sampled$flight.v:497$1170[31:0]$1670
   151/517: $2$mem2bits$\gyro_rates_sampled$flight.v:496$1169[31:0]$1669
   152/517: $2$mem2bits$\gyro_rates_sampled$flight.v:495$1168[31:0]$1668
   153/517: $2$mem2bits$\gyro_rates_sampled$flight.v:492$1167[31:0]$1667
   154/517: $2$mem2bits$\gyro_rates_sampled$flight.v:491$1166[31:0]$1666
   155/517: $2$mem2bits$\gyro_rates_sampled$flight.v:490$1165[31:0]$1665
   156/517: $2$mem2bits$\gyro_rates_sampled$flight.v:489$1164[31:0]$1664
   157/517: $1$mem2bits$\setpoint$flight.v:624$1241[31:0]$1663
   158/517: $1$mem2bits$\setpoint$flight.v:623$1240[31:0]$1662
   159/517: $1$mem2bits$\setpoint$flight.v:622$1239[31:0]$1661
   160/517: $1$mem2bits$\setpoint$flight.v:621$1238[31:0]$1660
   161/517: $1$mem2bits$\setpoint$flight.v:619$1237[31:0]$1659
   162/517: $1$mem2bits$\setpoint$flight.v:618$1236[31:0]$1658
   163/517: $1$mem2bits$\setpoint$flight.v:617$1235[31:0]$1657
   164/517: $1$mem2bits$\setpoint$flight.v:616$1234[31:0]$1656
   165/517: $1$mem2bits$\setpoint$flight.v:614$1233[31:0]$1655
   166/517: $1$mem2bits$\setpoint$flight.v:613$1232[31:0]$1654
   167/517: $1$mem2bits$\setpoint$flight.v:612$1231[31:0]$1653
   168/517: $1$mem2bits$\setpoint$flight.v:611$1230[31:0]$1652
   169/517: $1$mem2bits$\setpoint$flight.v:609$1229[31:0]$1651
   170/517: $1$mem2bits$\setpoint$flight.v:608$1228[31:0]$1650
   171/517: $1$mem2bits$\setpoint$flight.v:607$1227[31:0]$1649
   172/517: $1$mem2bits$\setpoint$flight.v:606$1226[31:0]$1648
   173/517: $1$mem2bits$\setpoint$flight.v:604$1225[31:0]$1647
   174/517: $1$mem2bits$\setpoint$flight.v:603$1224[31:0]$1646
   175/517: $1$mem2bits$\setpoint$flight.v:602$1223[31:0]$1645
   176/517: $1$mem2bits$\setpoint$flight.v:601$1222[31:0]$1644
   177/517: $1$mem2bits$\inputs$flight.v:594$1221[31:0]$1643
   178/517: $1$mem2bits$\inputs$flight.v:593$1220[31:0]$1642
   179/517: $1$mem2bits$\inputs$flight.v:592$1219[31:0]$1641
   180/517: $1$mem2bits$\inputs$flight.v:591$1218[31:0]$1640
   181/517: $1$mem2bits$\inputs$flight.v:589$1217[31:0]$1639
   182/517: $1$mem2bits$\inputs$flight.v:588$1216[31:0]$1638
   183/517: $1$mem2bits$\inputs$flight.v:587$1215[31:0]$1637
   184/517: $1$mem2bits$\inputs$flight.v:586$1214[31:0]$1636
   185/517: $1$mem2bits$\inputs$flight.v:584$1213[31:0]$1635
   186/517: $1$mem2bits$\inputs$flight.v:583$1212[31:0]$1634
   187/517: $1$mem2bits$\inputs$flight.v:582$1211[31:0]$1633
   188/517: $1$mem2bits$\inputs$flight.v:581$1210[31:0]$1632
   189/517: $1$mem2bits$\inputs$flight.v:579$1209[31:0]$1631
   190/517: $1$mem2bits$\inputs$flight.v:578$1208[31:0]$1630
   191/517: $1$mem2bits$\inputs$flight.v:577$1207[31:0]$1629
   192/517: $1$mem2bits$\inputs$flight.v:576$1206[31:0]$1628
   193/517: $1$mem2bits$\inputs$flight.v:574$1205[31:0]$1627
   194/517: $1$mem2bits$\inputs$flight.v:573$1204[31:0]$1626
   195/517: $1$mem2bits$\inputs$flight.v:572$1203[31:0]$1625
   196/517: $1$mem2bits$\inputs$flight.v:571$1202[31:0]$1624
   197/517: $1$mem2bits$\motorThrottle$flight.v:564$1201[31:0]$1623
   198/517: $1$mem2bits$\motorThrottle$flight.v:563$1200[31:0]$1622
   199/517: $1$mem2bits$\motorThrottle$flight.v:562$1199[31:0]$1621
   200/517: $1$mem2bits$\motorThrottle$flight.v:561$1198[31:0]$1620
   201/517: $1$mem2bits$\motorThrottle$flight.v:558$1197[31:0]$1619
   202/517: $1$mem2bits$\motorThrottle$flight.v:557$1196[31:0]$1618
   203/517: $1$mem2bits$\motorThrottle$flight.v:556$1195[31:0]$1617
   204/517: $1$mem2bits$\motorThrottle$flight.v:555$1194[31:0]$1616
   205/517: $1$mem2bits$\motorThrottle$flight.v:552$1193[31:0]$1615
   206/517: $1$mem2bits$\motorThrottle$flight.v:551$1192[31:0]$1614
   207/517: $1$mem2bits$\motorThrottle$flight.v:550$1191[31:0]$1613
   208/517: $1$mem2bits$\motorThrottle$flight.v:549$1190[31:0]$1612
   209/517: $1$mem2bits$\motorThrottle$flight.v:546$1189[31:0]$1611
   210/517: $1$mem2bits$\motorThrottle$flight.v:545$1188[31:0]$1610
   211/517: $1$mem2bits$\motorThrottle$flight.v:544$1187[31:0]$1609
   212/517: $1$mem2bits$\motorThrottle$flight.v:543$1186[31:0]$1608
   213/517: $1$mem2bits$\controlInputs$flight.v:530$1185[10:0]$1607
   214/517: $1$mem2bits$\controlInputs$flight.v:529$1184[10:0]$1606
   215/517: $1$mem2bits$\controlInputs$flight.v:526$1183[10:0]$1605
   216/517: $1$mem2bits$\controlInputs$flight.v:525$1182[10:0]$1604
   217/517: $1$mem2bits$\controlInputs$flight.v:522$1181[10:0]$1603
   218/517: $1$mem2bits$\controlInputs$flight.v:521$1180[10:0]$1602
   219/517: $1$mem2bits$\controlInputs$flight.v:518$1179[10:0]$1601
   220/517: $1$mem2bits$\controlInputs$flight.v:517$1178[10:0]$1600
   221/517: $1$mem2bits$\controlInputs$flight.v:514$1177[10:0]$1599
   222/517: $1$mem2bits$\controlInputs$flight.v:513$1176[10:0]$1598
   223/517: $1$mem2bits$\gyro_rates_sampled$flight.v:504$1175[31:0]$1597
   224/517: $1$mem2bits$\gyro_rates_sampled$flight.v:503$1174[31:0]$1596
   225/517: $1$mem2bits$\gyro_rates_sampled$flight.v:502$1173[31:0]$1595
   226/517: $1$mem2bits$\gyro_rates_sampled$flight.v:501$1172[31:0]$1594
   227/517: $1$mem2bits$\gyro_rates_sampled$flight.v:498$1171[31:0]$1593
   228/517: $1$mem2bits$\gyro_rates_sampled$flight.v:497$1170[31:0]$1592
   229/517: $1$mem2bits$\gyro_rates_sampled$flight.v:496$1169[31:0]$1591
   230/517: $1$mem2bits$\gyro_rates_sampled$flight.v:495$1168[31:0]$1590
   231/517: $1$mem2bits$\gyro_rates_sampled$flight.v:492$1167[31:0]$1589
   232/517: $1$mem2bits$\gyro_rates_sampled$flight.v:491$1166[31:0]$1588
   233/517: $1$mem2bits$\gyro_rates_sampled$flight.v:490$1165[31:0]$1587
   234/517: $1$mem2bits$\gyro_rates_sampled$flight.v:489$1164[31:0]$1586
   235/517: $1$func$\RxRangeInput$flight.v:454$1163$\RxRangeInput[31:0]$1565
   236/517: $1$func$\RxRangeInput$flight.v:454$1163$\inputValue[10:0]$1566
   237/517: $1$func$\RxRangeInput$flight.v:453$1162$\RxRangeInput[31:0]$1563
   238/517: $1$func$\RxRangeInput$flight.v:453$1162$\inputValue[10:0]$1564
   239/517: $1$func$\RxRangeInput$flight.v:452$1161$\RxRangeInput[31:0]$1561
   240/517: $1$func$\RxRangeInput$flight.v:452$1161$\inputValue[10:0]$1562
   241/517: $1$func$\RxRangeInput$flight.v:451$1160$\RxRangeInput[31:0]$1559
   242/517: $1$func$\RxRangeInput$flight.v:451$1160$\inputValue[10:0]$1560
   243/517: $3$mem2reg_rd$\setpoint$flight.v:199$1260_DATA[31:0]$1526
   244/517: $3$mem2reg_rd$\attitude$flight.v:197$1259_DATA[31:0]$1525
   245/517: $7\attitude[0][31:0]
   246/517: $7\attitude[2][31:0]
   247/517: $7\attitude[1][31:0]
   248/517: $3$mem2reg_rd$\setpoint$flight.v:194$1257_DATA[31:0]$1516
   249/517: $3$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_DATA[31:0]$1515
   250/517: $2$func$\PID$flight.v:320$1151$\PID[31:0]$1501
   251/517: $2$mem2reg_rd$\attitude$flight.v:197$1259_DATA[31:0]$1511
   252/517: $2$mem2reg_rd$\attitude$flight.v:197$1259_ADDR[1:0]$1510
   253/517: $6\attitude[2][31:0]
   254/517: $6\attitude[1][31:0]
   255/517: $6\attitude[0][31:0]
   256/517: $2$mem2reg_wr$\attitude$flight.v:196$1258_ADDR[1:0]$1508
   257/517: $2$mem2reg_wr$\attitude$flight.v:196$1258_DATA[31:0]$1509
   258/517: $2$func$\PID$flight.v:320$1151$\mul[63:0]$1503
   259/517: $2$func$\PID$flight.v:320$1151$\error[31:0]$1502
   260/517: $2$mem2reg_rd$\setpoint$flight.v:194$1257_DATA[31:0]$1507
   261/517: $2$mem2reg_rd$\setpoint$flight.v:194$1257_ADDR[2:0]$1506
   262/517: $2$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_DATA[31:0]$1505
   263/517: $2$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_ADDR[1:0]$1504
   264/517: $2$mem2reg_rd$\setpoint$flight.v:199$1260_DATA[31:0]$1513
   265/517: $2$mem2reg_rd$\setpoint$flight.v:199$1260_ADDR[2:0]$1512
   266/517: $3$mem2reg_rd$\setpoint$flight.v:199$1255_DATA[31:0]$1500
   267/517: $3$mem2reg_rd$\attitude$flight.v:197$1254_DATA[31:0]$1499
   268/517: $5\attitude[0][31:0]
   269/517: $5\attitude[2][31:0]
   270/517: $5\attitude[1][31:0]
   271/517: $3$mem2reg_rd$\setpoint$flight.v:194$1252_DATA[31:0]$1490
   272/517: $3$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_DATA[31:0]$1489
   273/517: $2$func$\PID$flight.v:319$1150$\PID[31:0]$1477
   274/517: $2$mem2reg_rd$\attitude$flight.v:197$1254_DATA[31:0]$1485
   275/517: $2$mem2reg_rd$\attitude$flight.v:197$1254_ADDR[1:0]$1484
   276/517: $4\attitude[2][31:0]
   277/517: $4\attitude[1][31:0]
   278/517: $4\attitude[0][31:0]
   279/517: $2$mem2reg_wr$\attitude$flight.v:196$1253_ADDR[1:0]$1482
   280/517: $2$mem2reg_wr$\attitude$flight.v:196$1253_DATA[31:0]$1483
   281/517: $2$func$\PID$flight.v:319$1150$\mul[63:0]$1476
   282/517: $2$func$\PID$flight.v:319$1150$\error[31:0]$1475
   283/517: $2$mem2reg_rd$\setpoint$flight.v:194$1252_DATA[31:0]$1481
   284/517: $2$mem2reg_rd$\setpoint$flight.v:194$1252_ADDR[2:0]$1480
   285/517: $2$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_DATA[31:0]$1479
   286/517: $2$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_ADDR[1:0]$1478
   287/517: $2$mem2reg_rd$\setpoint$flight.v:199$1255_DATA[31:0]$1487
   288/517: $2$mem2reg_rd$\setpoint$flight.v:199$1255_ADDR[2:0]$1486
   289/517: $3$mem2reg_rd$\setpoint$flight.v:199$1250_DATA[31:0]$1474
   290/517: $3$mem2reg_rd$\attitude$flight.v:197$1249_DATA[31:0]$1473
   291/517: $3\attitude[0][31:0]
   292/517: $3\attitude[2][31:0]
   293/517: $3\attitude[1][31:0]
   294/517: $3$mem2reg_rd$\setpoint$flight.v:194$1247_DATA[31:0]$1464
   295/517: $3$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_DATA[31:0]$1463
   296/517: $2$func$\PID$flight.v:318$1149$\PID[31:0]$1449
   297/517: $2$mem2reg_rd$\attitude$flight.v:197$1249_DATA[31:0]$1459
   298/517: $2$mem2reg_rd$\attitude$flight.v:197$1249_ADDR[1:0]$1458
   299/517: $2\attitude[2][31:0]
   300/517: $2\attitude[1][31:0]
   301/517: $2\attitude[0][31:0]
   302/517: $2$mem2reg_wr$\attitude$flight.v:196$1248_ADDR[1:0]$1456
   303/517: $2$mem2reg_wr$\attitude$flight.v:196$1248_DATA[31:0]$1457
   304/517: $2$func$\PID$flight.v:318$1149$\mul[63:0]$1450
   305/517: $2$func$\PID$flight.v:318$1149$\error[31:0]$1451
   306/517: $2$mem2reg_rd$\setpoint$flight.v:194$1247_DATA[31:0]$1455
   307/517: $2$mem2reg_rd$\setpoint$flight.v:194$1247_ADDR[2:0]$1454
   308/517: $2$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_DATA[31:0]$1453
   309/517: $2$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_ADDR[1:0]$1452
   310/517: $2$mem2reg_rd$\setpoint$flight.v:199$1250_DATA[31:0]$1461
   311/517: $2$mem2reg_rd$\setpoint$flight.v:199$1250_ADDR[2:0]$1460
   312/517: $1$mem2reg_rd$\setpoint$flight.v:199$1260_DATA[31:0]$1447
   313/517: $1$mem2reg_rd$\setpoint$flight.v:199$1260_ADDR[2:0]$1446
   314/517: $1$mem2reg_rd$\attitude$flight.v:197$1259_DATA[31:0]$1445
   315/517: $1$mem2reg_rd$\attitude$flight.v:197$1259_ADDR[1:0]$1444
   316/517: $1$mem2reg_wr$\attitude$flight.v:196$1258_DATA[31:0]$1443
   317/517: $1$mem2reg_wr$\attitude$flight.v:196$1258_ADDR[1:0]$1442
   318/517: $1$mem2reg_rd$\setpoint$flight.v:194$1257_DATA[31:0]$1441
   319/517: $1$mem2reg_rd$\setpoint$flight.v:194$1257_ADDR[2:0]$1440
   320/517: $1$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_DATA[31:0]$1439
   321/517: $1$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_ADDR[1:0]$1438
   322/517: $1$mem2reg_rd$\setpoint$flight.v:199$1255_DATA[31:0]$1437
   323/517: $1$mem2reg_rd$\setpoint$flight.v:199$1255_ADDR[2:0]$1436
   324/517: $1$mem2reg_rd$\attitude$flight.v:197$1254_DATA[31:0]$1435
   325/517: $1$mem2reg_rd$\attitude$flight.v:197$1254_ADDR[1:0]$1434
   326/517: $1$mem2reg_wr$\attitude$flight.v:196$1253_DATA[31:0]$1433
   327/517: $1$mem2reg_wr$\attitude$flight.v:196$1253_ADDR[1:0]$1432
   328/517: $1$mem2reg_rd$\setpoint$flight.v:194$1252_DATA[31:0]$1431
   329/517: $1$mem2reg_rd$\setpoint$flight.v:194$1252_ADDR[2:0]$1430
   330/517: $1$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_DATA[31:0]$1429
   331/517: $1$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_ADDR[1:0]$1428
   332/517: $1$mem2reg_rd$\setpoint$flight.v:199$1250_DATA[31:0]$1427
   333/517: $1$mem2reg_rd$\setpoint$flight.v:199$1250_ADDR[2:0]$1426
   334/517: $1$mem2reg_rd$\attitude$flight.v:197$1249_DATA[31:0]$1425
   335/517: $1$mem2reg_rd$\attitude$flight.v:197$1249_ADDR[1:0]$1424
   336/517: $1$mem2reg_wr$\attitude$flight.v:196$1248_DATA[31:0]$1423
   337/517: $1$mem2reg_wr$\attitude$flight.v:196$1248_ADDR[1:0]$1422
   338/517: $1$mem2reg_rd$\setpoint$flight.v:194$1247_DATA[31:0]$1421
   339/517: $1$mem2reg_rd$\setpoint$flight.v:194$1247_ADDR[2:0]$1420
   340/517: $1$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_DATA[31:0]$1419
   341/517: $1$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_ADDR[1:0]$1418
   342/517: $1$func$\PID$flight.v:320$1151$\mul[63:0]$1417
   343/517: $1$func$\PID$flight.v:320$1151$\error[31:0]$1416
   344/517: $1$func$\PID$flight.v:320$1151$\index[3:0]$1415
   345/517: $1$func$\PID$flight.v:318$1149$\error[31:0]$1414
   346/517: $1$func$\PID$flight.v:318$1149$\index[3:0]$1413
   347/517: $1$func$\PID$flight.v:319$1150$\PID[31:0]$1412
   348/517: $1$func$\PID$flight.v:318$1149$\mul[63:0]$1411
   349/517: $1$func$\PID$flight.v:318$1149$\PID[31:0]$1410
   350/517: $1$func$\PID$flight.v:320$1151$\PID[31:0]$1409
   351/517: $1$func$\PID$flight.v:319$1150$\mul[63:0]$1408
   352/517: $1$func$\PID$flight.v:319$1150$\error[31:0]$1407
   353/517: $1$func$\PID$flight.v:319$1150$\index[3:0]$1406
   354/517: $1\attitude[2][31:0]
   355/517: $1\attitude[1][31:0]
   356/517: $1\attitude[0][31:0]
   357/517: $1\i[31:0]
   358/517: $0$mem2bits$\setpoint$flight.v:624$1241[31:0]$1375
   359/517: $0$mem2bits$\setpoint$flight.v:623$1240[31:0]$1374
   360/517: $0$mem2bits$\setpoint$flight.v:622$1239[31:0]$1373
   361/517: $0$mem2bits$\setpoint$flight.v:621$1238[31:0]$1372
   362/517: $0$mem2bits$\setpoint$flight.v:619$1237[31:0]$1371
   363/517: $0$mem2bits$\setpoint$flight.v:618$1236[31:0]$1370
   364/517: $0$mem2bits$\setpoint$flight.v:617$1235[31:0]$1369
   365/517: $0$mem2bits$\setpoint$flight.v:616$1234[31:0]$1368
   366/517: $0$mem2bits$\setpoint$flight.v:614$1233[31:0]$1367
   367/517: $0$mem2bits$\setpoint$flight.v:613$1232[31:0]$1366
   368/517: $0$mem2bits$\setpoint$flight.v:612$1231[31:0]$1365
   369/517: $0$mem2bits$\setpoint$flight.v:611$1230[31:0]$1364
   370/517: $0$mem2bits$\setpoint$flight.v:609$1229[31:0]$1363
   371/517: $0$mem2bits$\setpoint$flight.v:608$1228[31:0]$1362
   372/517: $0$mem2bits$\setpoint$flight.v:607$1227[31:0]$1361
   373/517: $0$mem2bits$\setpoint$flight.v:606$1226[31:0]$1360
   374/517: $0$mem2bits$\setpoint$flight.v:604$1225[31:0]$1359
   375/517: $0$mem2bits$\setpoint$flight.v:603$1224[31:0]$1358
   376/517: $0$mem2bits$\setpoint$flight.v:602$1223[31:0]$1357
   377/517: $0$mem2bits$\setpoint$flight.v:601$1222[31:0]$1356
   378/517: $0$mem2bits$\inputs$flight.v:594$1221[31:0]$1355
   379/517: $0$mem2bits$\inputs$flight.v:593$1220[31:0]$1354
   380/517: $0$mem2bits$\inputs$flight.v:592$1219[31:0]$1353
   381/517: $0$mem2bits$\inputs$flight.v:591$1218[31:0]$1352
   382/517: $0$mem2bits$\inputs$flight.v:589$1217[31:0]$1351
   383/517: $0$mem2bits$\inputs$flight.v:588$1216[31:0]$1350
   384/517: $0$mem2bits$\inputs$flight.v:587$1215[31:0]$1349
   385/517: $0$mem2bits$\inputs$flight.v:586$1214[31:0]$1348
   386/517: $0$mem2bits$\inputs$flight.v:584$1213[31:0]$1347
   387/517: $0$mem2bits$\inputs$flight.v:583$1212[31:0]$1346
   388/517: $0$mem2bits$\inputs$flight.v:582$1211[31:0]$1345
   389/517: $0$mem2bits$\inputs$flight.v:581$1210[31:0]$1344
   390/517: $0$mem2bits$\inputs$flight.v:579$1209[31:0]$1343
   391/517: $0$mem2bits$\inputs$flight.v:578$1208[31:0]$1342
   392/517: $0$mem2bits$\inputs$flight.v:577$1207[31:0]$1341
   393/517: $0$mem2bits$\inputs$flight.v:576$1206[31:0]$1340
   394/517: $0$mem2bits$\inputs$flight.v:574$1205[31:0]$1339
   395/517: $0$mem2bits$\inputs$flight.v:573$1204[31:0]$1338
   396/517: $0$mem2bits$\inputs$flight.v:572$1203[31:0]$1337
   397/517: $0$mem2bits$\inputs$flight.v:571$1202[31:0]$1336
   398/517: $0$mem2bits$\motorThrottle$flight.v:564$1201[31:0]$1335
   399/517: $0$mem2bits$\motorThrottle$flight.v:563$1200[31:0]$1334
   400/517: $0$mem2bits$\motorThrottle$flight.v:562$1199[31:0]$1333
   401/517: $0$mem2bits$\motorThrottle$flight.v:561$1198[31:0]$1332
   402/517: $0$mem2bits$\motorThrottle$flight.v:558$1197[31:0]$1331
   403/517: $0$mem2bits$\motorThrottle$flight.v:557$1196[31:0]$1330
   404/517: $0$mem2bits$\motorThrottle$flight.v:556$1195[31:0]$1329
   405/517: $0$mem2bits$\motorThrottle$flight.v:555$1194[31:0]$1328
   406/517: $0$mem2bits$\motorThrottle$flight.v:552$1193[31:0]$1327
   407/517: $0$mem2bits$\motorThrottle$flight.v:551$1192[31:0]$1326
   408/517: $0$mem2bits$\motorThrottle$flight.v:550$1191[31:0]$1325
   409/517: $0$mem2bits$\motorThrottle$flight.v:549$1190[31:0]$1324
   410/517: $0$mem2bits$\motorThrottle$flight.v:546$1189[31:0]$1323
   411/517: $0$mem2bits$\motorThrottle$flight.v:545$1188[31:0]$1322
   412/517: $0$mem2bits$\motorThrottle$flight.v:544$1187[31:0]$1321
   413/517: $0$mem2bits$\motorThrottle$flight.v:543$1186[31:0]$1320
   414/517: $0$mem2bits$\controlInputs$flight.v:530$1185[10:0]$1319
   415/517: $0$mem2bits$\controlInputs$flight.v:529$1184[10:0]$1318
   416/517: $0$mem2bits$\controlInputs$flight.v:526$1183[10:0]$1317
   417/517: $0$mem2bits$\controlInputs$flight.v:525$1182[10:0]$1316
   418/517: $0$mem2bits$\controlInputs$flight.v:522$1181[10:0]$1315
   419/517: $0$mem2bits$\controlInputs$flight.v:521$1180[10:0]$1314
   420/517: $0$mem2bits$\controlInputs$flight.v:518$1179[10:0]$1313
   421/517: $0$mem2bits$\controlInputs$flight.v:517$1178[10:0]$1312
   422/517: $0$mem2bits$\controlInputs$flight.v:514$1177[10:0]$1311
   423/517: $0$mem2bits$\controlInputs$flight.v:513$1176[10:0]$1310
   424/517: $0$mem2bits$\gyro_rates_sampled$flight.v:504$1175[31:0]$1309
   425/517: $0$mem2bits$\gyro_rates_sampled$flight.v:503$1174[31:0]$1308
   426/517: $0$mem2bits$\gyro_rates_sampled$flight.v:502$1173[31:0]$1307
   427/517: $0$mem2bits$\gyro_rates_sampled$flight.v:501$1172[31:0]$1306
   428/517: $0$mem2bits$\gyro_rates_sampled$flight.v:498$1171[31:0]$1305
   429/517: $0$mem2bits$\gyro_rates_sampled$flight.v:497$1170[31:0]$1304
   430/517: $0$mem2bits$\gyro_rates_sampled$flight.v:496$1169[31:0]$1303
   431/517: $0$mem2bits$\gyro_rates_sampled$flight.v:495$1168[31:0]$1302
   432/517: $0$mem2bits$\gyro_rates_sampled$flight.v:492$1167[31:0]$1301
   433/517: $0$mem2bits$\gyro_rates_sampled$flight.v:491$1166[31:0]$1300
   434/517: $0$mem2bits$\gyro_rates_sampled$flight.v:490$1165[31:0]$1299
   435/517: $0$mem2bits$\gyro_rates_sampled$flight.v:489$1164[31:0]$1298
   436/517: $0$func$\RxRangeInput$flight.v:454$1163$\inputValue[10:0]$1297
   437/517: $0$func$\RxRangeInput$flight.v:454$1163$\RxRangeInput[31:0]$1296
   438/517: $0$func$\RxRangeInput$flight.v:453$1162$\inputValue[10:0]$1295
   439/517: $0$func$\RxRangeInput$flight.v:453$1162$\RxRangeInput[31:0]$1294
   440/517: $0$func$\RxRangeInput$flight.v:452$1161$\inputValue[10:0]$1293
   441/517: $0$func$\RxRangeInput$flight.v:452$1161$\RxRangeInput[31:0]$1292
   442/517: $0$func$\RxRangeInput$flight.v:451$1160$\inputValue[10:0]$1291
   443/517: $0$func$\RxRangeInput$flight.v:451$1160$\RxRangeInput[31:0]$1290
   444/517: $0$mem2reg_rd$\setpoint$flight.v:199$1260_DATA[31:0]$1405
   445/517: $0$mem2reg_rd$\setpoint$flight.v:199$1260_ADDR[2:0]$1404
   446/517: $0$mem2reg_rd$\attitude$flight.v:197$1259_DATA[31:0]$1403
   447/517: $0$mem2reg_rd$\attitude$flight.v:197$1259_ADDR[1:0]$1402
   448/517: $0$mem2reg_wr$\attitude$flight.v:196$1258_DATA[31:0]$1401
   449/517: $0$mem2reg_wr$\attitude$flight.v:196$1258_ADDR[1:0]$1400
   450/517: $0$mem2reg_rd$\setpoint$flight.v:194$1257_DATA[31:0]$1399
   451/517: $0$mem2reg_rd$\setpoint$flight.v:194$1257_ADDR[2:0]$1398
   452/517: $0$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_DATA[31:0]$1397
   453/517: $0$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_ADDR[1:0]$1396
   454/517: $0$mem2reg_rd$\setpoint$flight.v:199$1255_DATA[31:0]$1395
   455/517: $0$mem2reg_rd$\setpoint$flight.v:199$1255_ADDR[2:0]$1394
   456/517: $0$mem2reg_rd$\attitude$flight.v:197$1254_DATA[31:0]$1393
   457/517: $0$mem2reg_rd$\attitude$flight.v:197$1254_ADDR[1:0]$1392
   458/517: $0$mem2reg_wr$\attitude$flight.v:196$1253_DATA[31:0]$1391
   459/517: $0$mem2reg_wr$\attitude$flight.v:196$1253_ADDR[1:0]$1390
   460/517: $0$mem2reg_rd$\setpoint$flight.v:194$1252_DATA[31:0]$1389
   461/517: $0$mem2reg_rd$\setpoint$flight.v:194$1252_ADDR[2:0]$1388
   462/517: $0$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_DATA[31:0]$1387
   463/517: $0$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_ADDR[1:0]$1386
   464/517: $0$mem2reg_rd$\setpoint$flight.v:199$1250_DATA[31:0]$1385
   465/517: $0$mem2reg_rd$\setpoint$flight.v:199$1250_ADDR[2:0]$1384
   466/517: $0$mem2reg_rd$\attitude$flight.v:197$1249_DATA[31:0]$1383
   467/517: $0$mem2reg_rd$\attitude$flight.v:197$1249_ADDR[1:0]$1382
   468/517: $0$mem2reg_wr$\attitude$flight.v:196$1248_DATA[31:0]$1381
   469/517: $0$mem2reg_wr$\attitude$flight.v:196$1248_ADDR[1:0]$1380
   470/517: $0$mem2reg_rd$\setpoint$flight.v:194$1247_DATA[31:0]$1379
   471/517: $0$mem2reg_rd$\setpoint$flight.v:194$1247_ADDR[2:0]$1378
   472/517: $0$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_DATA[31:0]$1377
   473/517: $0$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_ADDR[1:0]$1376
   474/517: $0$func$\PID$flight.v:320$1151$\mul[63:0]$1289
   475/517: $0$func$\PID$flight.v:320$1151$\error[31:0]$1288
   476/517: $0$func$\PID$flight.v:320$1151$\index[3:0]$1287
   477/517: $0$func$\PID$flight.v:318$1149$\error[31:0]$1286
   478/517: $0$func$\PID$flight.v:318$1149$\index[3:0]$1285
   479/517: $0$func$\PID$flight.v:319$1150$\PID[31:0]$1284
   480/517: $0$func$\PID$flight.v:318$1149$\mul[63:0]$1283
   481/517: $0$func$\PID$flight.v:318$1149$\PID[31:0]$1282
   482/517: $0$func$\PID$flight.v:320$1151$\PID[31:0]$1281
   483/517: $0$func$\PID$flight.v:319$1150$\mul[63:0]$1280
   484/517: $0$func$\PID$flight.v:319$1150$\error[31:0]$1279
   485/517: $0$func$\PID$flight.v:319$1150$\index[3:0]$1278
   486/517: $0\attitude[2][31:0]
   487/517: $0\attitude[1][31:0]
   488/517: $0\attitude[0][31:0]
   489/517: $0\i[31:0]
   490/517: $0\motorThrottle[3][31:0]
   491/517: $0\motorThrottle[2][31:0]
   492/517: $0\motorThrottle[1][31:0]
   493/517: $0\motorThrottle[0][31:0]
   494/517: $0\inputs[3][31:0]
   495/517: $0\inputs[2][31:0]
   496/517: $0\inputs[1][31:0]
   497/517: $0\inputs[0][31:0]
   498/517: $0\setpoint[3][31:0]
   499/517: $0\setpoint[2][31:0]
   500/517: $0\setpoint[1][31:0]
   501/517: $0\setpoint[0][31:0]
   502/517: $0\gyro_rates_sampled[2][31:0]
   503/517: $0\gyro_rates_sampled[1][31:0]
   504/517: $0\gyro_rates_sampled[0][31:0]
   505/517: $0\waitCount[15:0]
   506/517: $0\change_update_state[0:0]
   507/517: $0\update_attitude[0:0]
   508/517: $0\fc_state[7:0]
   509/517: $0\debugUpdateCount[31:0]
   510/517: $0\debugSendState[4:0]
   511/517: $0\debugState[4:0]
   512/517: $0\attitudeUpdateCounter[7:0]
   513/517: $0\debug_msg_data[7:0]
   514/517: $0\debug_msg_length[7:0]
   515/517: $0\debug_msg_type[7:0]
   516/517: $0\debug_msg_send[0:0]
   517/517: $0\motor_send[0:0]
Creating decoders for process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
     1/29: $1\sample_write[5:0]
     2/29: $1\sample_read[5:0]
     3/29: $2\counter1[31:0]
     4/29: $0\imu_calibration_state[7:0]
     5/29: $1\imu_sample_state[7:0]
     6/29: $4\imu_cfg_state[7:0]
     7/29: $1\imu_state[7:0]
     8/29: $0$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:121$1101_DATA[15:0]$1148
     9/29: $0$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:121$1101_ADDR[31:0]$1147
    10/29: $0$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:120$1100_DATA[15:0]$1146
    11/29: $0$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:120$1100_ADDR[31:0]$1145
    12/29: $0$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:119$1099_DATA[15:0]$1144
    13/29: $0$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:119$1099_ADDR[31:0]$1143
    14/29: $1\rates_raw_yaw[31:0]
    15/29: $1\rates_raw_pitch[31:0]
    16/29: $1\rates_raw_roll[31:0]
    17/29: $0\gyroConfigCmdCount[15:0]
    18/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:112$1098_DATA[15:0]$1142
    19/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:112$1098_ADDR[31:0]$1141
    20/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:111$1097_DATA[15:0]$1140
    21/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:111$1097_ADDR[31:0]$1136
    22/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:110$1096_DATA[15:0]$1135
    23/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:110$1096_ADDR[31:0]$1134
    24/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:109$1095_DATA[15:0]$1133
    25/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:109$1095_ADDR[31:0]$1131
    26/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:108$1094_DATA[15:0]$1139
    27/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:108$1094_ADDR[31:0]$1132
    28/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:107$1093_DATA[15:0]$1138
    29/29: $0$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:107$1093_ADDR[31:0]$1137
Creating decoders for process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
     1/24: $2\spiTxData[55:0]
     2/24: $1\spiTxData[55:0]
     3/24: $1\counter1[31:0]
     4/24: $3\imu_cfg_state[7:0]
     5/24: $2\imu_cfg_state[7:0]
     6/24: $1\imu_cfg_state[7:0]
     7/24: $0\spiTxData[55:0]
     8/24: $0\counter1[31:0]
     9/24: $0\imu_cfg_state[7:0]
    10/24: $0\spi_out_fast[0:0]
    11/24: $0\imu_sample_state[7:0]
    12/24: $0\imu_state[7:0]
    13/24: $0\gyroConfigCmdSentCount[15:0]
    14/24: $0\sample_read[5:0]
    15/24: $0\sample_write[5:0]
    16/24: $0\spiRegTx[0:0]
    17/24: $0\spiRegTxData[15:0]
    18/24: $0\spiTx[0:0]
    19/24: $0\gyro_update[0:0]
    20/24: $0\rates_raw_yaw[31:0]
    21/24: $0\rates_raw_pitch[31:0]
    22/24: $0\rates_raw_roll[31:0]
    23/24: $0\sampleReady[0:0]
    24/24: $0\gyroUpdateCounter[15:0]
Creating decoders for process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:26$1092'.
     1/3: $1\rxData[7:0]
     2/3: $1\rxDataReady[0:0]
     3/3: $1\state[3:0]
Creating decoders for process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
     1/13: $0\rxData[7:0] [7]
     2/13: $0\rxData[7:0] [6]
     3/13: $0\rxData[7:0] [5]
     4/13: $0\rxData[7:0] [4]
     5/13: $0\rxData[7:0] [3]
     6/13: $0\rxData[7:0] [2]
     7/13: $0\rxData[7:0] [1]
     8/13: $0\rxData[7:0] [0]
     9/13: $0\state[3:0]
    10/13: $0\bitCount[4:0]
    11/13: $0\timerCount[7:0]
    12/13: $0\rxDataReady[0:0]
    13/13: $0\data[7:0]
Creating decoders for process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:151$1076'.
     1/17: $3\packet_data_read[7:0]
     2/17: $0\fifo_write[0:0]
     3/17: $1\fifo_read[0:0]
     4/17: $1\waitDelay[3:0]
     5/17: $1\timeout_counter[31:0]
     6/17: $1\unmask[0:0]
     7/17: $1\failsafe[0:0]
     8/17: $1\rxFrameLoss[0:0]
     9/17: $1\rssi[7:0]
    10/17: $1\controls4[10:0]
    11/17: $1\controls3[10:0]
    12/17: $1\controls2[10:0]
    13/17: $1\controls1[10:0]
    14/17: $1\controls0[10:0]
    15/17: $1\frameRecv[0:0]
    16/17: $1\controlFrameReady[0:0]
    17/17: $1\state[3:0]
Creating decoders for process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
     1/26: $0\controls4[10:0] [10:4]
     2/26: $0\controls4[10:0] [3:0]
     3/26: $0\controls3[10:0] [6:0]
     4/26: $0\controls2[10:0] [9:2]
     5/26: $0\controls2[10:0] [1:0]
     6/26: $0\controls1[10:0] [4:0]
     7/26: $0\controls0[10:0] [7:0]
     8/26: $1\packet_data_read[7:0]
     9/26: $0\packet_data_read[7:0]
    10/26: $0\fifo_read[0:0]
    11/26: $0\waitDelay[3:0]
    12/26: $0\timeout_counter[31:0]
    13/26: $0\packet_crc[7:0]
    14/26: $0\packet_type[7:0]
    15/26: $0\packet_len[7:0]
    16/26: $0\rxFrameLoss[0:0]
    17/26: $0\rssi[7:0]
    18/26: $0\controls2[10:0] [10]
    19/26: $0\controls1[10:0] [10:5]
    20/26: $0\controls0[10:0] [10:8]
    21/26: $2\packet_data_read[7:0]
    22/26: $0\frameRecv[0:0]
    23/26: $0\controlFrameReady[0:0]
    24/26: $0\controls3[10:0] [10:7]
    25/26: $0\state[3:0]
    26/26: $0\failsafe[0:0]
Creating decoders for process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:173$1045'.
     1/1: $0\unmask[0:0]
Creating decoders for process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
     1/6: $0\bitsCount[4:0]
     2/6: $0\alarm[15:0]
     3/6: $0\outputBit[0:0]
     4/6: $0\state[0:0]
     5/6: $0\timerCount[7:0]
     6/6: $0\data[15:0]

16.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.\useGyro' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.\setpoint[4]' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.\inputs[4]' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:213$1261_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:213$1261_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:214$1262_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:214$1262_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:215$1263_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:215$1263_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:216$1264_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:216$1264_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:218$1265_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:218$1265_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:219$1266_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:219$1266_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:220$1267_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:220$1267_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:221$1268_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:221$1268_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:223$1269_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:223$1269_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:224$1270_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:224$1270_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:225$1271_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:225$1271_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:226$1272_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:226$1272_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:229$1273_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:229$1273_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:230$1274_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:230$1274_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:231$1275_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:231$1275_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:232$1276_ADDR' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$memwr$\pid_gains$flight.v:232$1276_DATA' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:865$1245' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:865$1827'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:852$1244' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:852$1825'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:839$1243' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:839$1823'.
No latch inferred for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:826$1242' from process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:826$1821'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\gyroConfigCmdCount' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\imu_calibration_state' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:109$1095_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:108$1094_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:109$1095_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:110$1096_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:110$1096_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:111$1097_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:107$1093_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:107$1093_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:108$1094_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:111$1097_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:112$1098_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:112$1098_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:119$1099_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:119$1099_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:120$1100_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:120$1100_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:121$1101_ADDR' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$memwr$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:121$1101_DATA' from process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
No latch inferred for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\fifo_write' from process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:151$1076'.

16.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.\read_address' using process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:63$1006'.
  created $dff cell `$procdff$9839' with positive edge clock.
Creating register for signal `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.\write_address' using process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:57$1004'.
  created $dff cell `$procdff$9840' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\data' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9841' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\timerCount' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9842' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\bitCount' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9843' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\state' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9844' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\buffer' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9845' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\outputBit' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9846' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\sendingComplete' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9847' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\bufferFull' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9848' with positive edge clock.
Creating register for signal `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\sending' using process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
  created $dff cell `$procdff$9849' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\data' using process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
  created $dff cell `$procdff$9850' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\rxData' using process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
  created $dff cell `$procdff$9851' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\timerCount' using process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
  created $dff cell `$procdff$9852' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\bitCount' using process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
  created $dff cell `$procdff$9853' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\state' using process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
  created $dff cell `$procdff$9854' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.\rxDataReady' using process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
  created $dff cell `$procdff$9855' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\data' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9856' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\outCLK' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9857' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\outMOSI' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9858' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\outCS' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9859' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\complete' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9860' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\rxData' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9861' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\timerCount' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9862' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\bitCount' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9863' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.\state' using process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
  created $dff cell `$procdff$9864' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\data' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9865' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\outCLK' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9866' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\outMOSI' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9867' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\outCS' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9868' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\complete' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9869' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\rxData' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9870' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\timerCount' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9871' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\bitCount' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9872' with positive edge clock.
Creating register for signal `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.\state' using process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
  created $dff cell `$procdff$9873' with positive edge clock.
Creating register for signal `\debug_protocol.\state' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9874' with positive edge clock.
Creating register for signal `\debug_protocol.\nextState' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9875' with positive edge clock.
Creating register for signal `\debug_protocol.\sentDataCount' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9876' with positive edge clock.
Creating register for signal `\debug_protocol.\msgComplete' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9877' with positive edge clock.
Creating register for signal `\debug_protocol.\msgDataLoad' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9878' with positive edge clock.
Creating register for signal `\debug_protocol.\uart_send' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9879' with positive edge clock.
Creating register for signal `\debug_protocol.\msgDataIndex' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9880' with positive edge clock.
Creating register for signal `\debug_protocol.\uart_data_in' using process `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
  created $dff cell `$procdff$9881' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.\p2_read_value' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:43$1885'.
  created $dff cell `$procdff$9882' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_DATA' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:43$1885'.
  created $dff cell `$procdff$9883' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:43$1885'.
  created $dff cell `$procdff$9884' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_ADDR' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:43$1885'.
  created $dff cell `$procdff$9885' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.\p1_read_value' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:31$1880'.
  created $dff cell `$procdff$9886' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1878_ADDR' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:31$1880'.
  created $dff cell `$procdff$9887' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1878_DATA' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:31$1880'.
  created $dff cell `$procdff$9888' with positive edge clock.
Creating register for signal `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1878_EN' using process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:31$1880'.
  created $dff cell `$procdff$9889' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\i' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9890' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\motor_send' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9891' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\debug_msg_send' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9892' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\debug_msg_type' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9893' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\debug_msg_length' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9894' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\debug_msg_data' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9895' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\attitudeUpdateCounter' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9896' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\debugState' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9897' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\debugSendState' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9898' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\debugUpdateCount' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9899' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\fc_state' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9900' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\update_attitude' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9901' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\change_update_state' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9902' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\waitCount' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9903' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\gyro_rates_sampled[0]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9904' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\gyro_rates_sampled[1]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9905' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\gyro_rates_sampled[2]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9906' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\setpoint[0]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9907' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\setpoint[1]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9908' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\setpoint[2]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9909' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\setpoint[3]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9910' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\inputs[0]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9911' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\inputs[1]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9912' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\inputs[2]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9913' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\inputs[3]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9914' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\motorThrottle[0]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9915' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\motorThrottle[1]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9916' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\motorThrottle[2]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9917' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\motorThrottle[3]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9918' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\attitude[0]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9919' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\attitude[1]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9920' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.\attitude[2]' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9921' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:319$1150$\index' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9922' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:319$1150$\error' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9923' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:319$1150$\mul' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9924' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:320$1151$\PID' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9925' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:318$1149$\PID' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9926' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:318$1149$\mul' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9927' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:319$1150$\PID' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9928' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:318$1149$\index' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9929' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:318$1149$\error' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9930' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:320$1151$\index' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9931' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:320$1151$\error' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9932' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\PID$flight.v:320$1151$\mul' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9933' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:451$1160$\RxRangeInput' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9934' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:451$1160$\inputValue' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9935' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:452$1161$\RxRangeInput' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9936' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:452$1161$\inputValue' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9937' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:453$1162$\RxRangeInput' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9938' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:453$1162$\inputValue' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9939' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:454$1163$\RxRangeInput' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9940' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$func$\RxRangeInput$flight.v:454$1163$\inputValue' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9941' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:489$1164' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9942' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:490$1165' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9943' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:491$1166' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9944' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:492$1167' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9945' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:495$1168' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9946' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:496$1169' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9947' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:497$1170' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9948' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:498$1171' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9949' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:501$1172' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9950' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:502$1173' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9951' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:503$1174' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9952' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\gyro_rates_sampled$flight.v:504$1175' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9953' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:513$1176' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9954' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:514$1177' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9955' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:517$1178' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9956' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:518$1179' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9957' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:521$1180' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9958' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:522$1181' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9959' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:525$1182' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9960' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:526$1183' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9961' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:529$1184' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9962' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\controlInputs$flight.v:530$1185' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9963' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:543$1186' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9964' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:544$1187' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9965' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:545$1188' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9966' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:546$1189' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9967' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:549$1190' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9968' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:550$1191' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9969' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:551$1192' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9970' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:552$1193' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9971' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:555$1194' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9972' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:556$1195' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9973' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:557$1196' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9974' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:558$1197' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9975' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:561$1198' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9976' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:562$1199' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9977' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:563$1200' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9978' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\motorThrottle$flight.v:564$1201' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9979' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:571$1202' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9980' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:572$1203' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9981' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:573$1204' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9982' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:574$1205' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9983' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:576$1206' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9984' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:577$1207' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9985' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:578$1208' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9986' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:579$1209' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9987' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:581$1210' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9988' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:582$1211' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9989' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:583$1212' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9990' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:584$1213' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9991' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:586$1214' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9992' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:587$1215' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9993' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:588$1216' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9994' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:589$1217' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9995' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:591$1218' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9996' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:592$1219' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9997' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:593$1220' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9998' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\inputs$flight.v:594$1221' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$9999' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:601$1222' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10000' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:602$1223' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10001' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:603$1224' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10002' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:604$1225' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10003' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:606$1226' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10004' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:607$1227' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10005' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:608$1228' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10006' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:609$1229' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10007' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:611$1230' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10008' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:612$1231' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10009' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:613$1232' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10010' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:614$1233' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10011' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:616$1234' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10012' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:617$1235' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10013' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:618$1236' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10014' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:619$1237' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10015' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:621$1238' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10016' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:622$1239' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10017' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:623$1240' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10018' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2bits$\setpoint$flight.v:624$1241' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10019' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10020' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1246_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10021' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:194$1247_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10022' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:194$1247_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10023' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_wr$\attitude$flight.v:196$1248_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10024' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_wr$\attitude$flight.v:196$1248_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10025' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\attitude$flight.v:197$1249_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10026' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\attitude$flight.v:197$1249_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10027' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:199$1250_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10028' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:199$1250_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10029' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10030' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1251_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10031' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:194$1252_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10032' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:194$1252_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10033' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_wr$\attitude$flight.v:196$1253_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10034' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_wr$\attitude$flight.v:196$1253_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10035' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\attitude$flight.v:197$1254_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10036' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\attitude$flight.v:197$1254_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10037' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:199$1255_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10038' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:199$1255_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10039' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10040' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\gyro_rates_sampled$flight.v:194$1256_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10041' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:194$1257_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10042' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:194$1257_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10043' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_wr$\attitude$flight.v:196$1258_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10044' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_wr$\attitude$flight.v:196$1258_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10045' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\attitude$flight.v:197$1259_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10046' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\attitude$flight.v:197$1259_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10047' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:199$1260_ADDR' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10048' with positive edge clock.
Creating register for signal `$paramod\flight\BASE_FREQ=16000000.$mem2reg_rd$\setpoint$flight.v:199$1260_DATA' using process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
  created $dff cell `$procdff$10049' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\gyroUpdateCounter' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10050' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\sampleReady' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10051' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\rates_raw_roll' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10052' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\rates_raw_pitch' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10053' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\rates_raw_yaw' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10054' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\gyro_update' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10055' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\counter1' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10056' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\spiTxData' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10057' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\spiTx' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10058' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\spiRegTxData' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10059' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\spiRegTx' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10060' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\sample_write' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10061' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\sample_read' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10062' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\gyroConfigCmdSentCount' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10063' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\imu_state' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10064' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\imu_cfg_state' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10065' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\imu_sample_state' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10066' with positive edge clock.
Creating register for signal `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.\spi_out_fast' using process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
  created $dff cell `$procdff$10067' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=138.\data' using process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
  created $dff cell `$procdff$10068' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=138.\rxData' using process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
  created $dff cell `$procdff$10069' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=138.\timerCount' using process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
  created $dff cell `$procdff$10070' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=138.\bitCount' using process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
  created $dff cell `$procdff$10071' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=138.\state' using process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
  created $dff cell `$procdff$10072' with positive edge clock.
Creating register for signal `$paramod\uart_rx\CLKS_PER_BIT=138.\rxDataReady' using process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
  created $dff cell `$procdff$10073' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\failsafe' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10074' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\state' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10075' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\controls4' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10076' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\controlFrameReady' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10077' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\frameRecv' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10078' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\controls0' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10079' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\controls1' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10080' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\controls2' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10081' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\controls3' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10082' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\rssi' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10083' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\rxFrameLoss' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10084' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\packet_len' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10085' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\packet_type' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10086' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\packet_crc' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10087' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\timeout_counter' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10088' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\waitDelay' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10089' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\packet_data_read' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10090' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\fifo_read' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
  created $dff cell `$procdff$10091' with positive edge clock.
Creating register for signal `$paramod\fport_rx_decoder\BASE_FREQ=16000000.\unmask' using process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:173$1045'.
  created $dff cell `$procdff$10092' with positive edge clock.
Creating register for signal `$paramod\DShotTx\CLKS_PER_BIT=26.\data' using process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
  created $dff cell `$procdff$10093' with positive edge clock.
Creating register for signal `$paramod\DShotTx\CLKS_PER_BIT=26.\timerCount' using process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
  created $dff cell `$procdff$10094' with positive edge clock.
Creating register for signal `$paramod\DShotTx\CLKS_PER_BIT=26.\state' using process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
  created $dff cell `$procdff$10095' with positive edge clock.
Creating register for signal `$paramod\DShotTx\CLKS_PER_BIT=26.\outputBit' using process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
  created $dff cell `$procdff$10096' with positive edge clock.
Creating register for signal `$paramod\DShotTx\CLKS_PER_BIT=26.\alarm' using process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
  created $dff cell `$procdff$10097' with positive edge clock.
Creating register for signal `$paramod\DShotTx\CLKS_PER_BIT=26.\bitsCount' using process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
  created $dff cell `$procdff$10098' with positive edge clock.

16.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:51$1008'.
Found and cleaned up 1 empty switch in `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:63$1006'.
Removing empty process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:63$1006'.
Found and cleaned up 1 empty switch in `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:57$1004'.
Removing empty process `$paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/FIFODualPort.v:57$1004'.
Found and cleaned up 8 empty switches in `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
Removing empty process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:49$1939'.
Removing empty process `$paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_tx.v:36$1951'.
Removing empty process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:26$1937'.
Found and cleaned up 9 empty switches in `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
Removing empty process `$paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.$proc$ip/peripherals/uart/uart_rx.v:32$1922'.
Removing empty process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:34$972'.
Found and cleaned up 10 empty switches in `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
Removing empty process `$paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.$proc$ip/peripherals/spi/spi_master.v:42$957'.
Removing empty process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:34$1921'.
Found and cleaned up 10 empty switches in `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
Removing empty process `$paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.$proc$ip/peripherals/spi/spi_master.v:42$1906'.
Removing empty process `debug_protocol.$proc$ip/debug/debug_protocol.v:75$189'.
Found and cleaned up 5 empty switches in `\debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
Removing empty process `debug_protocol.$proc$ip/debug/debug_protocol.v:79$184'.
Found and cleaned up 2 empty switches in `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:43$1885'.
Removing empty process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:43$1885'.
Found and cleaned up 2 empty switches in `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:31$1880'.
Removing empty process `$paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.$proc$ip/memory/BlockMemoryDualPort.v:31$1880'.
Removing empty process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:210$1845'.
Removing empty process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:865$1827'.
Removing empty process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:852$1825'.
Removing empty process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:839$1823'.
Removing empty process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:826$1821'.
Found and cleaned up 33 empty switches in `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
Removing empty process `$paramod\flight\BASE_FREQ=16000000.$proc$flight.v:288$1277'.
Removing empty process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:106$1130'.
Found and cleaned up 14 empty switches in `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
Removing empty process `$paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.$proc$ip/peripherals/imu/imu_mpu9250.v:198$1104'.
Removing empty process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:26$1092'.
Found and cleaned up 9 empty switches in `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
Removing empty process `$paramod\uart_rx\CLKS_PER_BIT=138.$proc$ip/peripherals/uart/uart_rx.v:32$1077'.
Removing empty process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:151$1076'.
Found and cleaned up 16 empty switches in `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
Removing empty process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:185$1053'.
Found and cleaned up 1 empty switch in `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:173$1045'.
Removing empty process `$paramod\fport_rx_decoder\BASE_FREQ=16000000.$proc$ip/peripherals/rc/fport_rx_decode.v:173$1045'.
Found and cleaned up 4 empty switches in `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
Removing empty process `$paramod\DShotTx\CLKS_PER_BIT=26.$proc$ip/peripherals/rc/dshottx.v:44$1009'.
Cleaned up 125 empty switches.

16.4. Executing FLATTEN pass (flatten design).
Using template $paramod\flight\BASE_FREQ=16000000 for cells of type $paramod\flight\BASE_FREQ=16000000.
Using template $paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000 for cells of type $paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000.
Using template $paramod\uart_rx\CLKS_PER_BIT=138 for cells of type $paramod\uart_rx\CLKS_PER_BIT=138.
Using template $paramod\fport_rx_decoder\BASE_FREQ=16000000 for cells of type $paramod\fport_rx_decoder\BASE_FREQ=16000000.
Using template $paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer for cells of type $paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer.
Using template $paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer for cells of type $paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer.
Using template $paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer for cells of type $paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer.
Using template $paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer for cells of type $paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer.
Using template $paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250 for cells of type $paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.
Using template $paramod\uart\CLKS_PER_BIT=8 for cells of type $paramod\uart\CLKS_PER_BIT=8.
Using template debug_protocol for cells of type debug_protocol.
Using template DShotPacketEncoder for cells of type DShotPacketEncoder.
Using template $paramod\DShotTx\CLKS_PER_BIT=26 for cells of type $paramod\DShotTx\CLKS_PER_BIT=26.
Using template $paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456 for cells of type $paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456.
Using template $paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8 for cells of type $paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.
Using template $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=32'11110000000000000000000000000000 for cells of type $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=32'11110000000000000000000000000000.
Using template $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=268435456 for cells of type $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=268435456.
Using template $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=32'11110000000000000000000000000000 for cells of type $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=32'11110000000000000000000000000000.
Using template $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=268435456 for cells of type $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=268435456.
Using template $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=32'11110000000000000000000000000000 for cells of type $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=32'11110000000000000000000000000000.
Using template $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=268435456 for cells of type $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=268435456.
Using template $paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56 for cells of type $paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.
Using template $paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16 for cells of type $paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.
Using template $paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1 for cells of type $paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.
Using template $paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1 for cells of type $paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.
Using template $paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8 for cells of type $paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.
<suppressed ~44 debug messages>
No more expansions possible.
Deleting now unused module $paramod\FIFODualPort\DEPTH=64\DATA_WIDTH=8.
Deleting now unused module $paramod\uart_tx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.
Deleting now unused module $paramod\uart_rx\CLKS_PER_BIT=8\WORDBITS=8\STOPBITS=1.
Deleting now unused module $paramod\spi_master\CLKS_PER_BIT=16\WORDBITS=16.
Deleting now unused module $paramod\spi_master\CLKS_PER_BIT=4\WORDBITS=56.
Deleting now unused module $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=268435456.
Deleting now unused module $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=32'11110000000000000000000000000000.
Deleting now unused module $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=268435456.
Deleting now unused module $paramod\axis_scalar\AXIS_INDEX=1\MIX_SCALAR=32'11110000000000000000000000000000.
Deleting now unused module $paramod\axis_scalar\AXIS_INDEX=2\MIX_SCALAR=268435456.
Deleting now unused module $paramod\axis_scalar\AXIS_INDEX=3\MIX_SCALAR=32'11110000000000000000000000000000.
Deleting now unused module debug_protocol.
Deleting now unused module $paramod\axis_scalar\AXIS_INDEX=0\MIX_SCALAR=268435456.
Deleting now unused module $paramod\BlockMemoryDualPort\DEPTH=64\DATA_WIDTH=8.
Deleting now unused module $paramod\flight\BASE_FREQ=16000000.
Deleting now unused module DShotPacketEncoder.
Deleting now unused module $paramod\uart\CLKS_PER_BIT=8.
Deleting now unused module $paramod$5e7a8e4d8b92d16c7bfbf194d511e3c7caa909f8\imu_mpu_9250.
Deleting now unused module $paramod\uart_rx\CLKS_PER_BIT=138.
Deleting now unused module $paramod\fport_rx_decoder\BASE_FREQ=16000000.
Deleting now unused module $paramod$89e4afc71ada61f6c9fafd8cfc5c3a7435f9a6c0\motor_mixer.
Deleting now unused module $paramod$245d13a115f2aef4218403767a78b87a7faa4db3\motor_mixer.
Deleting now unused module $paramod$f0933cf2a83d5d4b0f2636944ad9ce5831bf2d8b\motor_mixer.
Deleting now unused module $paramod$7b052fb8c54bbde9f40a86172c3553426cc5a815\motor_mixer.
Deleting now unused module $paramod\motor_control\BASE_FREQ=16000000\DSHOT_FREQ=600000.
Deleting now unused module $paramod\DShotTx\CLKS_PER_BIT=26.

16.5. Executing TRIBUF pass.

16.6. Executing DEMINOUT pass (demote inout ports to input or output).

16.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~365 debug messages>

16.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1341 unused cells and 3362 unused wires.
<suppressed ~1371 debug messages>

16.9. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.\USBPU is used but has no driver.
Warning: Wire top.\PIN_11 is used but has no driver.
Warning: Wire top.\LED is used but has no driver.
found and reported 3 problems.

16.10. Executing OPT pass (performing simple optimizations).

16.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1179 debug messages>
Removed a total of 393 cells.

16.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\flight_core.fport_decode.$procmux$9464: \flight_core.fport_decode.fifo_read -> 1'0
      Replacing known input bits on port A of cell $techmap\flight_core.motor1.dshot_tx.$procmux$9815: \flight_core.motor1.dshot_tx.state -> 1'0
      Replacing known input bits on port A of cell $techmap\flight_core.motor2.dshot_tx.$procmux$9815: \flight_core.motor2.dshot_tx.state -> 1'0
      Replacing known input bits on port A of cell $techmap\flight_core.motor3.dshot_tx.$procmux$9815: \flight_core.motor3.dshot_tx.state -> 1'0
      Replacing known input bits on port A of cell $techmap\flight_core.motor4.dshot_tx.$procmux$9815: \flight_core.motor4.dshot_tx.state -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\flight_core.$procmux$7527.
    dead port 2/2 on $mux $techmap\flight_core.$procmux$7620.
    dead port 2/2 on $mux $techmap\flight_core.$procmux$7780.
    dead port 2/2 on $mux $techmap\flight_core.$procmux$7873.
    dead port 2/2 on $mux $techmap\flight_core.$procmux$8033.
    dead port 2/2 on $mux $techmap\flight_core.$procmux$8126.
    dead port 2/2 on $mux $techmap\flight_core.imu.$procmux$8899.
    dead port 2/2 on $mux $techmap\flight_core.imu.$procmux$8920.
    dead port 2/2 on $mux $techmap\flight_core.imu.$procmux$8922.
    dead port 2/2 on $mux $techmap\flight_core.imu.$procmux$8941.
Removed 10 multiplexer ports.
<suppressed ~219 debug messages>

16.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $techmap\flight_core.debug.tx.$procmux$1974: { $techmap\flight_core.debug.tx.$procmux$1978_CMP $techmap\flight_core.debug.tx.$procmux$1977_CMP $auto$opt_reduce.cc:132:opt_mux$10100 }
    New ctrl vector for $pmux cell $techmap\flight_core.$procmux$8758: { $techmap\flight_core.$procmux$8778_CMP $techmap\flight_core.$procmux$8777_CMP $techmap\flight_core.$procmux$8776_CMP $techmap\flight_core.$procmux$8775_CMP $techmap\flight_core.$procmux$8774_CMP $techmap\flight_core.$procmux$8773_CMP $techmap\flight_core.$procmux$8772_CMP $techmap\flight_core.$procmux$8771_CMP $techmap\flight_core.$procmux$8770_CMP $techmap\flight_core.$procmux$8769_CMP $techmap\flight_core.$procmux$8768_CMP $techmap\flight_core.$procmux$8767_CMP $techmap\flight_core.$procmux$8766_CMP $techmap\flight_core.$procmux$8765_CMP $techmap\flight_core.$procmux$8764_CMP $techmap\flight_core.$procmux$8763_CMP $auto$opt_reduce.cc:132:opt_mux$10102 $techmap\flight_core.$procmux$8759_CMP }
    New ctrl vector for $pmux cell $techmap\flight_core.debug_proto.$procmux$5124: { $techmap\flight_core.debug_proto.$procmux$5129_CMP $auto$opt_reduce.cc:132:opt_mux$10104 }
    New ctrl vector for $pmux cell $techmap\flight_core.debug_proto.$procmux$5132: { $auto$opt_reduce.cc:132:opt_mux$10108 $auto$opt_reduce.cc:132:opt_mux$10106 }
    New ctrl vector for $pmux cell $techmap\flight_core.debug_proto.$procmux$5139: { $techmap\flight_core.debug_proto.$procmux$5129_CMP $techmap\flight_core.debug_proto.$procmux$5142_CMP $auto$opt_reduce.cc:132:opt_mux$10110 }
    New ctrl vector for $pmux cell $techmap\flight_core.$procmux$8782: { $techmap\flight_core.$procmux$8778_CMP $techmap\flight_core.$procmux$8777_CMP $techmap\flight_core.$procmux$8776_CMP $techmap\flight_core.$procmux$8775_CMP $techmap\flight_core.$procmux$8774_CMP $techmap\flight_core.$procmux$8773_CMP $techmap\flight_core.$procmux$8772_CMP $techmap\flight_core.$procmux$8771_CMP $techmap\flight_core.$procmux$8770_CMP $techmap\flight_core.$procmux$8769_CMP $techmap\flight_core.$procmux$8768_CMP $techmap\flight_core.$procmux$8767_CMP $techmap\flight_core.$procmux$8766_CMP $techmap\flight_core.$procmux$8765_CMP $techmap\flight_core.$procmux$8764_CMP $techmap\flight_core.$procmux$8763_CMP $auto$opt_reduce.cc:132:opt_mux$10112 }
    New ctrl vector for $pmux cell $techmap\flight_core.debug_proto.$procmux$5157: { $techmap\flight_core.debug_proto.$procmux$5123_CMP $techmap\flight_core.debug_proto.$procmux$5122_CMP $techmap\flight_core.debug_proto.$procmux$5121_CMP $auto$opt_reduce.cc:132:opt_mux$10114 }
    New ctrl vector for $pmux cell $techmap\flight_core.debug_proto.$procmux$5163: { $techmap\flight_core.debug_proto.$procmux$5123_CMP $techmap\flight_core.debug_proto.$procmux$5182_CMP $techmap\flight_core.debug_proto.$procmux$5138_CMP $techmap\flight_core.debug_proto.$procmux$5137_CMP $techmap\flight_core.debug_proto.$procmux$5129_CMP $techmap\flight_core.debug_proto.$procmux$5142_CMP $auto$opt_reduce.cc:132:opt_mux$10116 $techmap\flight_core.debug_proto.$procmux$5125_CMP }
    New ctrl vector for $mux cell $techmap\flight_core.fport_decode.$procmux$9464: { }
    Consolidated identical input bits for $mux cell $techmap\flight_core.fport_decode.inputFIFO.memory.$procmux$5184:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887
      New ports: A=1'0, B=1'1, Y=$techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0]
      New connections: $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [7:1] = { $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0] $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0] $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0] $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0] $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0] $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0] $techmap\flight_core.fport_decode.inputFIFO.memory.$0$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1879_EN[7:0]$1887 [0] }
    New ctrl vector for $pmux cell $techmap\flight_core.$procmux$8862: { $auto$opt_reduce.cc:132:opt_mux$10120 $techmap\flight_core.$procmux$8727_CMP $techmap\flight_core.$procmux$8730_CMP $auto$opt_reduce.cc:132:opt_mux$10118 }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.$procmux$9001: { $techmap\flight_core.imu.$procmux$9009_CMP $techmap\flight_core.imu.$procmux$8923_CMP }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.$procmux$9042: { $techmap\flight_core.imu.$procmux$8935_CMP $auto$opt_reduce.cc:132:opt_mux$10122 }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.$procmux$9094: { $techmap\flight_core.imu.$procmux$8900_CMP $auto$opt_reduce.cc:132:opt_mux$10124 }
    New ctrl vector for $pmux cell $techmap\flight_core.$procmux$8886: { $auto$opt_reduce.cc:132:opt_mux$10126 $techmap\flight_core.$procmux$8695_CMP }
    New ctrl vector for $pmux cell $techmap\flight_core.$procmux$8694: { $techmap\flight_core.$procmux$8687_CMP $techmap\flight_core.$procmux$7528_CMP $techmap\flight_core.$procmux$8698_CMP $techmap\flight_core.$procmux$8602_CMP $techmap\flight_core.$procmux$8601_CMP $auto$opt_reduce.cc:132:opt_mux$10128 }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.spi_fast.$procmux$5092: { $techmap\flight_core.imu.spi_fast.$procmux$2707_CMP $auto$opt_reduce.cc:132:opt_mux$10130 }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.spi_fast.$procmux$5099: { $techmap\flight_core.imu.spi_fast.$procmux$2707_CMP $auto$opt_reduce.cc:132:opt_mux$10132 }
    New ctrl vector for $pmux cell $techmap\flight_core.$procmux$8724: $auto$opt_reduce.cc:132:opt_mux$10134
    New ctrl vector for $pmux cell $techmap\flight_core.imu.spi_registers.$procmux$2669: { $techmap\flight_core.imu.spi_registers.$procmux$2607_CMP $auto$opt_reduce.cc:132:opt_mux$10136 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10099: { $techmap\flight_core.debug.tx.$procmux$1976_CMP $techmap\flight_core.debug.tx.$procmux$1972_CMP $techmap\flight_core.debug.tx.$procmux$1970_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10103: { $techmap\flight_core.debug_proto.$procmux$5125_CMP $techmap\flight_core.debug_proto.$procmux$5123_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10109: { $techmap\flight_core.debug_proto.$procmux$5125_CMP $techmap\flight_core.debug_proto.$procmux$5123_CMP $techmap\flight_core.debug_proto.$procmux$5119_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10125: { $techmap\flight_core.$procmux$8687_CMP $techmap\flight_core.$procmux$8603_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10127: { $techmap\flight_core.$procmux$8695_CMP $techmap\flight_core.$procmux$8603_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10129: { $techmap\flight_core.imu.spi_fast.$procmux$5053_CMP $techmap\flight_core.imu.spi_fast.$procmux$5048_CMP $techmap\flight_core.imu.spi_fast.$procmux$5037_CMP $techmap\flight_core.imu.spi_fast.$procmux$5031_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10131: { $techmap\flight_core.imu.spi_fast.$procmux$5037_CMP $techmap\flight_core.imu.spi_fast.$procmux$5031_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10135: { $techmap\flight_core.imu.spi_registers.$procmux$2630_CMP $techmap\flight_core.imu.spi_registers.$procmux$2625_CMP $techmap\flight_core.imu.spi_registers.$procmux$2614_CMP $techmap\flight_core.imu.spi_registers.$procmux$2608_CMP }
  Optimizing cells in module \top.
Performed a total of 28 changes.

16.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

16.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\flight_core.fport_decode.inputFIFO.memory.$procdff$9887 ($dff) from module top.
Removing $techmap\flight_core.fport_decode.inputFIFO.memory.$procdff$9888 ($dff) from module top.
Removing $techmap\flight_core.fport_decode.inputFIFO.memory.$procdff$9889 ($dff) from module top.
Promoting init spec \flight_core.waitCount = 16'0000000000000000 to constant driver in module top.
Promoting init spec \flight_core.fport_decode.frameRecv = 1'0 to constant driver in module top.
Promoting init spec \flight_core.imu.sample_read = 6'000000 to constant driver in module top.
Promoting init spec \flight_core.imu.sample_write = 6'000000 to constant driver in module top.
Promoting init spec \flight_core.debug.rx.state = 4'0000 to constant driver in module top.
Promoting init spec \flight_core.debug.rx.rxData = 8'00000000 to constant driver in module top.
Promoting init spec \flight_core.debug.rx.rxDataReady = 1'0 to constant driver in module top.
Promoting init spec \flight_core.debug.tx.sending = 1'0 to constant driver in module top.
Promoted 8 init specs to constant drivers.
Replaced 3 DFF cells.

16.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 428 unused wires.
<suppressed ~3 debug messages>

16.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.10.9. Rerunning OPT passes. (Maybe there is more to do..)

16.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~223 debug messages>

16.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $techmap\flight_core.control_rx.$procmux$9290: { $techmap\flight_core.control_rx.$procmux$9270_CMP $auto$opt_reduce.cc:132:opt_mux$10138 }
    New ctrl vector for $pmux cell $techmap\flight_core.debug.tx.$procmux$2019: { $techmap\flight_core.debug.tx.$procmux$1970_CMP $auto$opt_reduce.cc:132:opt_mux$10140 }
    New ctrl vector for $pmux cell $techmap\flight_core.fport_decode.$procmux$9471: { $techmap\flight_core.fport_decode.$procmux$9490_CMP $techmap\flight_core.fport_decode.$eq$ip/peripherals/rc/fport_rx_decode.v:175$1046_Y $auto$opt_reduce.cc:132:opt_mux$10142 }
    New ctrl vector for $pmux cell $techmap\flight_core.fport_decode.$procmux$9508: { $techmap\flight_core.fport_decode.$eq$ip/peripherals/rc/fport_rx_decode.v:175$1046_Y $auto$opt_reduce.cc:132:opt_mux$10144 $techmap\flight_core.fport_decode.$procmux$9509_CMP }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.$procmux$8975: { $techmap\flight_core.imu.$procmux$8983_CMP $auto$opt_reduce.cc:132:opt_mux$10146 }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.spi_fast.$procmux$5036: { $techmap\flight_core.imu.spi_fast.$procmux$5031_CMP $techmap\flight_core.imu.spi_fast.$procmux$2707_CMP $auto$opt_reduce.cc:132:opt_mux$10148 }
    New ctrl vector for $pmux cell $techmap\flight_core.imu.spi_registers.$procmux$2613: { $techmap\flight_core.imu.spi_registers.$procmux$2608_CMP $techmap\flight_core.imu.spi_registers.$procmux$2607_CMP $auto$opt_reduce.cc:132:opt_mux$10150 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$10137: { $techmap\flight_core.control_rx.$procmux$9254_CMP $techmap\flight_core.control_rx.$procmux$9115_CMP $techmap\flight_core.control_rx.$procmux$9111_CMP }
  Optimizing cells in module \top.
Performed a total of 8 changes.

16.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

16.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.10.16. Rerunning OPT passes. (Maybe there is more to do..)

16.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~223 debug messages>

16.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

16.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.10.23. Finished OPT passes. (There is nothing left to do.)

16.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:213$1829 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:214$1830 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:215$1831 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:216$1832 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:218$1833 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:219$1834 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:220$1835 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:221$1836 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:223$1837 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:224$1838 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:225$1839 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:226$1840 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:229$1841 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:230$1842 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:231$1843 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.$meminit$\pid_gains$flight.v:232$1844 (flight_core.pid_gains).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:107$1121 (flight_core.imu.gyroConfigCmds).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:108$1122 (flight_core.imu.gyroConfigCmds).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:109$1123 (flight_core.imu.gyroConfigCmds).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:110$1124 (flight_core.imu.gyroConfigCmds).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:111$1125 (flight_core.imu.gyroConfigCmds).
Removed top 28 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:112$1126 (flight_core.imu.gyroConfigCmds).
Removed top 30 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:119$1127 (flight_core.imu.gyroOffsets).
Removed top 30 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:120$1128 (flight_core.imu.gyroOffsets).
Removed top 30 address bits (of 32) from memory init port top.$techmap\flight_core.imu.$meminit$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:121$1129 (flight_core.imu.gyroOffsets).
Removed top 12 address bits (of 16) from memory read port top.$techmap\flight_core.imu.$memrd$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:246$1111 (flight_core.imu.gyroConfigCmds).
Removed top 7 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8777_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8776_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8775_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8774_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8773_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8772_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8771_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8770_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8769_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8768_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8767_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8766_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8765_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8764_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8763_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8762_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8761_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8760_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8759_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8744_CMP0 ($eq).
Removed top 3 bits (of 5) from mux cell top.$techmap\flight_core.$procmux$8742 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8740_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8730_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8729_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8728_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8727_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8726_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8725_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\flight_core.$procmux$8720_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8698_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8695_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8687_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8602_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$8601_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.$procmux$7528_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.$sub$flight.v:467$1585 ($sub).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.$sub$flight.v:467$1585 ($sub).
Removed top 3 bits (of 32) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1581 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$techmap\flight_core.$sub$flight.v:183$1581 ($sub).
Removed top 19 bits (of 32) from port Y of cell top.$techmap\flight_core.$sub$flight.v:183$1581 ($sub).
Removed top 16 bits (of 29) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1581 ($sub).
Removed top 29 bits (of 32) from port A of cell top.$techmap\flight_core.$mul$flight.v:183$1579 ($mul).
Removed top 18 bits (of 32) from port Y of cell top.$techmap\flight_core.$mul$flight.v:183$1579 ($mul).
Removed top 3 bits (of 32) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1577 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$techmap\flight_core.$sub$flight.v:183$1577 ($sub).
Removed top 19 bits (of 32) from port Y of cell top.$techmap\flight_core.$sub$flight.v:183$1577 ($sub).
Removed top 16 bits (of 29) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1577 ($sub).
Removed top 29 bits (of 32) from port A of cell top.$techmap\flight_core.$mul$flight.v:183$1575 ($mul).
Removed top 18 bits (of 32) from port Y of cell top.$techmap\flight_core.$mul$flight.v:183$1575 ($mul).
Removed top 3 bits (of 32) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1573 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$techmap\flight_core.$sub$flight.v:183$1573 ($sub).
Removed top 19 bits (of 32) from port Y of cell top.$techmap\flight_core.$sub$flight.v:183$1573 ($sub).
Removed top 16 bits (of 29) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1573 ($sub).
Removed top 29 bits (of 32) from port A of cell top.$techmap\flight_core.$mul$flight.v:183$1571 ($mul).
Removed top 18 bits (of 32) from port Y of cell top.$techmap\flight_core.$mul$flight.v:183$1571 ($mul).
Removed top 3 bits (of 32) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1569 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$techmap\flight_core.$sub$flight.v:183$1569 ($sub).
Removed top 19 bits (of 32) from port Y of cell top.$techmap\flight_core.$sub$flight.v:183$1569 ($sub).
Removed top 16 bits (of 29) from port A of cell top.$techmap\flight_core.$sub$flight.v:183$1569 ($sub).
Removed top 29 bits (of 32) from port A of cell top.$techmap\flight_core.$mul$flight.v:183$1567 ($mul).
Removed top 18 bits (of 32) from port Y of cell top.$techmap\flight_core.$mul$flight.v:183$1567 ($mul).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.$sub$flight.v:386$1557 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\flight_core.$sub$flight.v:386$1557 ($sub).
Removed top 4 bits (of 5) from port B of cell top.$techmap\flight_core.$eq$flight.v:358$1553 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.$sub$flight.v:356$1551 ($sub).
Removed top 20 bits (of 32) from port B of cell top.$techmap\flight_core.$gt$flight.v:345$1548 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.$lt$flight.v:344$1547 ($lt).
Removed top 20 bits (of 32) from port B of cell top.$techmap\flight_core.$gt$flight.v:345$1544 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.$lt$flight.v:344$1543 ($lt).
Removed top 20 bits (of 32) from port B of cell top.$techmap\flight_core.$gt$flight.v:345$1540 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.$lt$flight.v:344$1539 ($lt).
Removed top 20 bits (of 32) from port B of cell top.$techmap\flight_core.$gt$flight.v:345$1536 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.$lt$flight.v:344$1535 ($lt).
Removed top 2 bits (of 32) from port B of cell top.$techmap\flight_core.$add$flight.v:334$1533 ($add).
Removed top 2 bits (of 32) from port B of cell top.$techmap\flight_core.$add$flight.v:334$1531 ($add).
Removed top 2 bits (of 32) from port B of cell top.$techmap\flight_core.$add$flight.v:334$1529 ($add).
Removed top 2 bits (of 32) from port B of cell top.$techmap\flight_core.$add$flight.v:334$1527 ($add).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9254_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9250_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9216_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9195_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9175_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9156_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9138_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9121_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9115_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9111_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$procmux$9105_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:82$1089 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:82$1089 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$gt$ip/peripherals/uart/uart_rx.v:79$1088 ($gt).
Removed top 29 bits (of 32) from port A of cell top.$techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:73$1087 ($sub).
Removed top 1 bits (of 8) from port B of cell top.$techmap\flight_core.control_rx.$eq$ip/peripherals/uart/uart_rx.v:54$1082 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$add$ip/peripherals/uart/uart_rx.v:53$1080 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.control_rx.$add$ip/peripherals/uart/uart_rx.v:53$1080 ($add).
Removed top 24 bits (of 32) from port B of cell top.$techmap\flight_core.control_rx.$lt$ip/peripherals/uart/uart_rx.v:51$1079 ($lt).
Removed top 1 bits (of 4) from mux cell top.$techmap\flight_core.fport_decode.$procmux$9747 ($mux).
Removed top 3 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9593_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9574_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9500_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9493_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9490_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9484_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9481_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9426_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9403_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9381_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9360_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9340_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$procmux$9321_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:377$1074 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:377$1074 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.fport_decode.$add$ip/peripherals/rc/fport_rx_decode.v:282$1071 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.fport_decode.$add$ip/peripherals/rc/fport_rx_decode.v:282$1071 ($add).
Removed top 1 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$eq$ip/peripherals/rc/fport_rx_decode.v:214$1059 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:199$1055 ($sub).
Removed top 1 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$eq$ip/peripherals/rc/fport_rx_decode.v:175$1050 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$eq$ip/peripherals/rc/fport_rx_decode.v:175$1049 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.fport_decode.$eq$ip/peripherals/rc/fport_rx_decode.v:175$1047 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.fport_decode.$eq$ip/peripherals/rc/fport_rx_decode.v:175$1046 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$techmap\flight_core.fport_decode.$xor$ip/peripherals/rc/fport_rx_decode.v:149$1043 ($xor).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$9005_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8992_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8982_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8976_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8940_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8939_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8932_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8923_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8921_CMP0 ($eq).
Removed top 7 bits (of 8) from mux cell top.$techmap\flight_core.imu.$procmux$8918 ($mux).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8910_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8909_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$techmap\flight_core.imu.$procmux$8900_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:412$1120 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.$add$ip/peripherals/imu/imu_mpu9250.v:255$1114 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\flight_core.imu.$add$ip/peripherals/imu/imu_mpu9250.v:255$1114 ($add).
Removed top 29 bits (of 32) from port B of cell top.$techmap\flight_core.imu.$ge$ip/peripherals/imu/imu_mpu9250.v:252$1113 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.$gt$ip/peripherals/imu/imu_mpu9250.v:233$1109 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:203$1106 ($sub).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:203$1106 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.$gt$ip/peripherals/imu/imu_mpu9250.v:201$1105 ($gt).
Removed top 7 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5182_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\flight_core.debug_proto.$procmux$5168 ($mux).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5142_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5138_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5137_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5129_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5125_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5122_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5121_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5120_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\flight_core.debug_proto.$procmux$5119_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:163$188 ($sub).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:163$188 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.debug_proto.$le$ip/debug/debug_protocol.v:145$186 ($le).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 27 bits (of 32) from mux cell top.$techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 27 bits (of 32) from mux cell top.$techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 27 bits (of 32) from mux cell top.$techmap\flight_core.motor2.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
Removed top 27 bits (of 32) from mux cell top.$techmap\flight_core.motor1.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:65$1007 ($add).
Removed top 26 bits (of 32) from port Y of cell top.$techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:65$1007 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:59$1005 ($add).
Removed top 26 bits (of 32) from port Y of cell top.$techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:59$1005 ($add).
Removed top 3 bits (of 32) from port A of cell top.$techmap\flight_core.motorMixer3.rollScalar.$mul$motor_mixer.v:96$1898 ($mul).
Removed top 4 bits (of 64) from port Y of cell top.$techmap\flight_core.motorMixer3.rollScalar.$mul$motor_mixer.v:96$1898 ($mul).
Removed top 3 bits (of 32) from port A of cell top.$techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894 ($mul).
Removed top 4 bits (of 64) from port Y of cell top.$techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894 ($mul).
Removed top 3 bits (of 32) from port A of cell top.$techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902 ($mul).
Removed top 4 bits (of 64) from port Y of cell top.$techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902 ($mul).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$5053_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$5048_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$5037_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4939_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4871_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4804_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4738_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4673_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4609_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4546_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4484_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4423_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4363_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4304_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4246_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4189_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4133_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4078_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$4024_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3971_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3919_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3868_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3818_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3769_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3721_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3674_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3628_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3583_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3539_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3496_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3454_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3413_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3373_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$3334_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_fast.$procmux$2707_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_fast.$add$ip/peripherals/spi/spi_master.v:120$1919 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\flight_core.imu.spi_fast.$add$ip/peripherals/spi/spi_master.v:120$1919 ($add).
Removed top 30 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_fast.$lt$ip/peripherals/spi/spi_master.v:119$1918 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_fast.$sub$ip/peripherals/spi/spi_master.v:102$1917 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$techmap\flight_core.imu.spi_fast.$sub$ip/peripherals/spi/spi_master.v:102$1917 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_fast.$gt$ip/peripherals/spi/spi_master.v:100$1916 ($gt).
Removed top 14 bits (of 16) from port B of cell top.$techmap\flight_core.imu.spi_fast.$eq$ip/peripherals/spi/spi_master.v:94$1914 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_fast.$lt$ip/peripherals/spi/spi_master.v:87$1911 ($lt).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_registers.$procmux$2630_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_registers.$procmux$2625_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_registers.$procmux$2614_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.imu.spi_registers.$procmux$2607_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_registers.$add$ip/peripherals/spi/spi_master.v:120$970 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\flight_core.imu.spi_registers.$add$ip/peripherals/spi/spi_master.v:120$970 ($add).
Removed top 28 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_registers.$lt$ip/peripherals/spi/spi_master.v:119$969 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_registers.$sub$ip/peripherals/spi/spi_master.v:102$968 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\flight_core.imu.spi_registers.$sub$ip/peripherals/spi/spi_master.v:102$968 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_registers.$gt$ip/peripherals/spi/spi_master.v:100$967 ($gt).
Removed top 28 bits (of 32) from port B of cell top.$techmap\flight_core.imu.spi_registers.$lt$ip/peripherals/spi/spi_master.v:87$962 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$techmap\flight_core.debug.tx.$procmux$1978_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.debug.tx.$procmux$1977_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\flight_core.debug.tx.$procmux$1976_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\flight_core.debug.tx.$procmux$1972_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.debug.tx.$add$ip/peripherals/uart/uart_tx.v:120$1949 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\flight_core.debug.tx.$add$ip/peripherals/uart/uart_tx.v:120$1949 ($add).
Removed top 29 bits (of 32) from port B of cell top.$techmap\flight_core.debug.tx.$lt$ip/peripherals/uart/uart_tx.v:119$1948 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:105$1947 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:105$1947 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\flight_core.debug.tx.$gt$ip/peripherals/uart/uart_tx.v:103$1946 ($gt).
Removed top 29 bits (of 32) from port A of cell top.$techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:96$1942 ($sub).
Removed top 7 bits (of 8) from FF cell top.$techmap\flight_core.fport_decode.inputFIFO.memory.$procdff$9884 ($dff).
Removed cell top.$techmap\flight_core.fport_decode.inputFIFO.memory.$procmux$5188 ($mux).
Removed cell top.$techmap\flight_core.fport_decode.inputFIFO.memory.$procmux$5186 ($mux).
Removed top 18 bits (of 32) from wire top.$techmap\flight_core.$mul$flight.v:183$1567_Y.
Removed top 3 bits (of 5) from wire top.$techmap\flight_core.$procmux$8742_Y.
Removed top 27 bits (of 32) from wire top.$techmap\flight_core.$sub$flight.v:386$1557_Y.
Removed top 24 bits (of 32) from wire top.$techmap\flight_core.control_rx.$add$ip/peripherals/uart/uart_rx.v:53$1080_Y.
Removed top 29 bits (of 32) from wire top.$techmap\flight_core.debug.tx.$add$ip/peripherals/uart/uart_tx.v:120$1949_Y.
Removed top 27 bits (of 32) from wire top.$techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:105$1947_Y.
Removed top 1 bits (of 8) from wire top.$techmap\flight_core.debug_proto.$procmux$5168_Y.
Removed top 24 bits (of 32) from wire top.$techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:163$188_Y.
Removed top 24 bits (of 32) from wire top.$techmap\flight_core.fport_decode.$add$ip/peripherals/rc/fport_rx_decode.v:282$1071_Y.
Removed top 26 bits (of 32) from wire top.$techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:59$1005_Y.
Removed top 26 bits (of 32) from wire top.$techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:65$1007_Y.
Removed top 7 bits (of 8) from wire top.$techmap\flight_core.imu.$3\imu_cfg_state[7:0].
Removed top 16 bits (of 32) from wire top.$techmap\flight_core.imu.$add$ip/peripherals/imu/imu_mpu9250.v:255$1114_Y.
Removed top 16 bits (of 32) from wire top.$techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:203$1106_Y.
Removed top 16 bits (of 32) from wire top.$techmap\flight_core.imu.spi_fast.$add$ip/peripherals/spi/spi_master.v:120$1919_Y.
Removed top 26 bits (of 32) from wire top.$techmap\flight_core.imu.spi_fast.$sub$ip/peripherals/spi/spi_master.v:102$1917_Y.
Removed top 4 bits (of 5) from wire top.$techmap\flight_core.motor1.dshot_tx.$0\bitsCount[4:0].
Removed top 24 bits (of 32) from wire top.$techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016_Y.
Removed top 27 bits (of 32) from wire top.$techmap\flight_core.motor1.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y.
Removed top 24 bits (of 32) from wire top.$techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016_Y.
Removed top 27 bits (of 32) from wire top.$techmap\flight_core.motor2.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y.
Removed top 16 bits (of 32) from wire top.flight_core.gyro_rates_raw[2].
Removed top 34 bits (of 56) from wire top.flight_core.imu.spiRxData.
Removed top 34 bits (of 56) from wire top.flight_core.imu.spi_fast.rxData.
Removed top 4 bits (of 64) from wire top.flight_core.motorMixer1.pitchScalar.temp.
Removed top 20 bits (of 32) from wire top.flight_core.motorMixer1.yawScalar.mixedValue.
Removed top 24 bits (of 64) from wire top.flight_core.motorMixer1.yawScalar.temp.
Removed top 4 bits (of 32) from wire top.flight_core.motorMixer3.mixed[1].
Removed top 19 bits (of 32) from wire top.flight_core.motorMixer3.rollScalar.mixedValue.
Removed top 23 bits (of 64) from wire top.flight_core.motorMixer3.rollScalar.temp.

16.12. Executing PEEPOPT pass (run peephole optimizers).

16.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 35 unused wires.
<suppressed ~1 debug messages>

16.14. Executing SHARE pass (SAT-based resource sharing).
Found 9 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\flight_core.motorMixer3.rollScalar.$mul$motor_mixer.v:96$1898 ($mul):
    Found 1 activation_patterns using ctrl signal { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP }.
    Found 2 candidates: $techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894 $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902
    Analyzing resource sharing with $techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894 ($mul):
      Found 1 activation_patterns using ctrl signal { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP }.
      Activation pattern for cell $techmap\flight_core.motorMixer3.rollScalar.$mul$motor_mixer.v:96$1898: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
      Activation pattern for cell $techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
      Size of SAT problem: 1 cells, 37 variables, 85 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
    Analyzing resource sharing with $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902 ($mul):
      Found 1 activation_patterns using ctrl signal { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP }.
      Activation pattern for cell $techmap\flight_core.motorMixer3.rollScalar.$mul$motor_mixer.v:96$1898: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
      Activation pattern for cell $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
      Size of SAT problem: 1 cells, 37 variables, 85 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
  Analyzing resource sharing options for $techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894 ($mul):
    Found 1 activation_patterns using ctrl signal { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP }.
    Found 1 candidates: $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902
    Analyzing resource sharing with $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902 ($mul):
      Found 1 activation_patterns using ctrl signal { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP }.
      Activation pattern for cell $techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
      Activation pattern for cell $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
      Size of SAT problem: 1 cells, 37 variables, 85 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP } = 2'01
  Analyzing resource sharing options for $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902 ($mul):
    Found 1 activation_patterns using ctrl signal { \flight_core.fport_decode.failsafe $techmap\flight_core.$procmux$8602_CMP }.
    No candidates found.
  Analyzing resource sharing options for $techmap\flight_core.imu.$memrd$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:246$1111 ($memrd):
    Found 1 activation_patterns using ctrl signal { $techmap\flight_core.imu.$procmux$8923_CMP $techmap\flight_core.imu.$procmux$8932_CMP }.
    No candidates found.
  Analyzing resource sharing options for $techmap\flight_core.fport_decode.inputFIFO.memory.$memrd$\mem$ip/memory/BlockMemoryDualPort.v:36$1884 ($memrd):
    Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.fifo_read.
    No candidates found.
  Analyzing resource sharing options for $techmap\flight_core.$mul$flight.v:183$1579 ($mul):
    Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
    Found 3 candidates: $techmap\flight_core.$mul$flight.v:183$1575 $techmap\flight_core.$mul$flight.v:183$1571 $techmap\flight_core.$mul$flight.v:183$1567
    Analyzing resource sharing with $techmap\flight_core.$mul$flight.v:183$1575 ($mul):
      Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1579: \flight_core.fport_decode.controlFrameReady = 1'1
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1575: \flight_core.fport_decode.controlFrameReady = 1'1
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \flight_core.fport_decode.controlFrameReady = 1'1
    Analyzing resource sharing with $techmap\flight_core.$mul$flight.v:183$1571 ($mul):
      Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1579: \flight_core.fport_decode.controlFrameReady = 1'1
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1571: \flight_core.fport_decode.controlFrameReady = 1'1
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \flight_core.fport_decode.controlFrameReady = 1'1
    Analyzing resource sharing with $techmap\flight_core.$mul$flight.v:183$1567 ($mul):
      Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1579: \flight_core.fport_decode.controlFrameReady = 1'1
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1567: \flight_core.fport_decode.controlFrameReady = 1'1
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \flight_core.fport_decode.controlFrameReady = 1'1
  Analyzing resource sharing options for $techmap\flight_core.$mul$flight.v:183$1575 ($mul):
    Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
    Found 2 candidates: $techmap\flight_core.$mul$flight.v:183$1571 $techmap\flight_core.$mul$flight.v:183$1567
    Analyzing resource sharing with $techmap\flight_core.$mul$flight.v:183$1571 ($mul):
      Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1575: \flight_core.fport_decode.controlFrameReady = 1'1
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1571: \flight_core.fport_decode.controlFrameReady = 1'1
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \flight_core.fport_decode.controlFrameReady = 1'1
    Analyzing resource sharing with $techmap\flight_core.$mul$flight.v:183$1567 ($mul):
      Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1575: \flight_core.fport_decode.controlFrameReady = 1'1
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1567: \flight_core.fport_decode.controlFrameReady = 1'1
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \flight_core.fport_decode.controlFrameReady = 1'1
  Analyzing resource sharing options for $techmap\flight_core.$mul$flight.v:183$1571 ($mul):
    Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
    Found 1 candidates: $techmap\flight_core.$mul$flight.v:183$1567
    Analyzing resource sharing with $techmap\flight_core.$mul$flight.v:183$1567 ($mul):
      Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1571: \flight_core.fport_decode.controlFrameReady = 1'1
      Activation pattern for cell $techmap\flight_core.$mul$flight.v:183$1567: \flight_core.fport_decode.controlFrameReady = 1'1
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \flight_core.fport_decode.controlFrameReady = 1'1
  Analyzing resource sharing options for $techmap\flight_core.$mul$flight.v:183$1567 ($mul):
    Found 1 activation_patterns using ctrl signal \flight_core.fport_decode.controlFrameReady.
    No candidates found.

16.15. Executing TECHMAP pass (map to technology primitives).

16.15.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

16.15.2. Continuing TECHMAP pass.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$64fdb727b8fb55a4fe9731fe5b6468d06ea5e6e3\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$efc71e781fe178e08e0b73b60d007d65bb528021\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d544eb687a002b556032f6fb24d754f43a4207cb\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$690ddad12f1252acd48fb06712ff33cbd769c3f8\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~2008 debug messages>

16.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

16.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $techmap\flight_core.$add$flight.v:334$1527 ($add).
  creating $macc model for $techmap\flight_core.$add$flight.v:334$1529 ($add).
  creating $macc model for $techmap\flight_core.$add$flight.v:334$1531 ($add).
  creating $macc model for $techmap\flight_core.$add$flight.v:334$1533 ($add).
  creating $macc model for $techmap\flight_core.$mul$flight.v:183$1567 ($mul).
  creating $macc model for $techmap\flight_core.$mul$flight.v:183$1571 ($mul).
  creating $macc model for $techmap\flight_core.$mul$flight.v:183$1575 ($mul).
  creating $macc model for $techmap\flight_core.$mul$flight.v:183$1579 ($mul).
  creating $macc model for $techmap\flight_core.$sub$flight.v:183$1569 ($sub).
  creating $macc model for $techmap\flight_core.$sub$flight.v:183$1573 ($sub).
  creating $macc model for $techmap\flight_core.$sub$flight.v:183$1577 ($sub).
  creating $macc model for $techmap\flight_core.$sub$flight.v:183$1581 ($sub).
  creating $macc model for $techmap\flight_core.$sub$flight.v:356$1551 ($sub).
  creating $macc model for $techmap\flight_core.$sub$flight.v:386$1557 ($sub).
  creating $macc model for $techmap\flight_core.$sub$flight.v:467$1585 ($sub).
  creating $macc model for $techmap\flight_core.control_rx.$add$ip/peripherals/uart/uart_rx.v:53$1080 ($add).
  creating $macc model for $techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:73$1087 ($sub).
  creating $macc model for $techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:82$1089 ($sub).
  creating $macc model for $techmap\flight_core.debug.tx.$add$ip/peripherals/uart/uart_tx.v:120$1949 ($add).
  creating $macc model for $techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:105$1947 ($sub).
  creating $macc model for $techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:96$1942 ($sub).
  creating $macc model for $techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:150$187 ($sub).
  creating $macc model for $techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:163$188 ($sub).
  creating $macc model for $techmap\flight_core.fport_decode.$add$ip/peripherals/rc/fport_rx_decode.v:282$1071 ($add).
  creating $macc model for $techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:199$1055 ($sub).
  creating $macc model for $techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:377$1074 ($sub).
  creating $macc model for $techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:59$1005 ($add).
  creating $macc model for $techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:65$1007 ($add).
  creating $macc model for $techmap\flight_core.imu.$add$ip/peripherals/imu/imu_mpu9250.v:255$1114 ($add).
  creating $macc model for $techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:203$1106 ($sub).
  creating $macc model for $techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:412$1120 ($sub).
  creating $macc model for $techmap\flight_core.imu.spi_fast.$add$ip/peripherals/spi/spi_master.v:120$1919 ($add).
  creating $macc model for $techmap\flight_core.imu.spi_fast.$sub$ip/peripherals/spi/spi_master.v:102$1917 ($sub).
  creating $macc model for $techmap\flight_core.imu.spi_registers.$add$ip/peripherals/spi/spi_master.v:120$970 ($add).
  creating $macc model for $techmap\flight_core.imu.spi_registers.$sub$ip/peripherals/spi/spi_master.v:102$968 ($sub).
  creating $macc model for $techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
  creating $macc model for $techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
  creating $macc model for $techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
  creating $macc model for $techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
  creating $macc model for $techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
  creating $macc model for $techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
  creating $macc model for $techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012 ($sub).
  creating $macc model for $techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016 ($sub).
  creating $macc model for $techmap\flight_core.motorMixer1.$add$motor_mixer.v:76$1037 ($add).
  creating $macc model for $techmap\flight_core.motorMixer1.$add$motor_mixer.v:77$1038 ($add).
  creating $macc model for $techmap\flight_core.motorMixer1.$add$motor_mixer.v:77$1039 ($add).
  creating $macc model for $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902 ($mul).
  creating $macc model for $techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894 ($mul).
  creating $macc model for $techmap\flight_core.motorMixer2.$add$motor_mixer.v:76$1031 ($add).
  creating $macc model for $techmap\flight_core.motorMixer2.$add$motor_mixer.v:77$1032 ($add).
  creating $macc model for $techmap\flight_core.motorMixer2.$add$motor_mixer.v:77$1033 ($add).
  creating $macc model for $techmap\flight_core.motorMixer3.$add$motor_mixer.v:76$1025 ($add).
  creating $macc model for $techmap\flight_core.motorMixer3.$add$motor_mixer.v:77$1026 ($add).
  creating $macc model for $techmap\flight_core.motorMixer3.$add$motor_mixer.v:77$1027 ($add).
  creating $macc model for $techmap\flight_core.motorMixer3.rollScalar.$mul$motor_mixer.v:96$1898 ($mul).
  creating $macc model for $techmap\flight_core.motorMixer4.$add$motor_mixer.v:76$1019 ($add).
  creating $macc model for $techmap\flight_core.motorMixer4.$add$motor_mixer.v:77$1020 ($add).
  creating $macc model for $techmap\flight_core.motorMixer4.$add$motor_mixer.v:77$1021 ($add).
  merging $macc model for $techmap\flight_core.motorMixer4.$add$motor_mixer.v:77$1020 into $techmap\flight_core.motorMixer4.$add$motor_mixer.v:77$1021.
  merging $macc model for $techmap\flight_core.motorMixer4.$add$motor_mixer.v:76$1019 into $techmap\flight_core.motorMixer4.$add$motor_mixer.v:77$1021.
  merging $macc model for $techmap\flight_core.motorMixer3.$add$motor_mixer.v:77$1026 into $techmap\flight_core.motorMixer3.$add$motor_mixer.v:77$1027.
  merging $macc model for $techmap\flight_core.motorMixer3.$add$motor_mixer.v:76$1025 into $techmap\flight_core.motorMixer3.$add$motor_mixer.v:77$1027.
  merging $macc model for $techmap\flight_core.motorMixer2.$add$motor_mixer.v:77$1032 into $techmap\flight_core.motorMixer2.$add$motor_mixer.v:77$1033.
  merging $macc model for $techmap\flight_core.motorMixer2.$add$motor_mixer.v:76$1031 into $techmap\flight_core.motorMixer2.$add$motor_mixer.v:77$1033.
  merging $macc model for $techmap\flight_core.motorMixer1.$add$motor_mixer.v:77$1038 into $techmap\flight_core.motorMixer1.$add$motor_mixer.v:77$1039.
  merging $macc model for $techmap\flight_core.motorMixer1.$add$motor_mixer.v:76$1037 into $techmap\flight_core.motorMixer1.$add$motor_mixer.v:77$1039.
  creating $alu model for $macc $techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016.
  creating $alu model for $macc $techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012.
  creating $alu model for $macc $techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016.
  creating $alu model for $macc $techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012.
  creating $alu model for $macc $techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016.
  creating $alu model for $macc $techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012.
  creating $alu model for $macc $techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016.
  creating $alu model for $macc $techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012.
  creating $alu model for $macc $techmap\flight_core.imu.spi_registers.$sub$ip/peripherals/spi/spi_master.v:102$968.
  creating $alu model for $macc $techmap\flight_core.imu.spi_registers.$add$ip/peripherals/spi/spi_master.v:120$970.
  creating $alu model for $macc $techmap\flight_core.imu.spi_fast.$sub$ip/peripherals/spi/spi_master.v:102$1917.
  creating $alu model for $macc $techmap\flight_core.imu.spi_fast.$add$ip/peripherals/spi/spi_master.v:120$1919.
  creating $alu model for $macc $techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:412$1120.
  creating $alu model for $macc $techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:203$1106.
  creating $alu model for $macc $techmap\flight_core.imu.$add$ip/peripherals/imu/imu_mpu9250.v:255$1114.
  creating $alu model for $macc $techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:65$1007.
  creating $alu model for $macc $techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:59$1005.
  creating $alu model for $macc $techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:377$1074.
  creating $alu model for $macc $techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:199$1055.
  creating $alu model for $macc $techmap\flight_core.fport_decode.$add$ip/peripherals/rc/fport_rx_decode.v:282$1071.
  creating $alu model for $macc $techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:163$188.
  creating $alu model for $macc $techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:150$187.
  creating $alu model for $macc $techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:96$1942.
  creating $alu model for $macc $techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:105$1947.
  creating $alu model for $macc $techmap\flight_core.debug.tx.$add$ip/peripherals/uart/uart_tx.v:120$1949.
  creating $alu model for $macc $techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:82$1089.
  creating $alu model for $macc $techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:73$1087.
  creating $alu model for $macc $techmap\flight_core.control_rx.$add$ip/peripherals/uart/uart_rx.v:53$1080.
  creating $alu model for $macc $techmap\flight_core.$sub$flight.v:467$1585.
  creating $alu model for $macc $techmap\flight_core.$sub$flight.v:386$1557.
  creating $alu model for $macc $techmap\flight_core.$sub$flight.v:356$1551.
  creating $alu model for $macc $techmap\flight_core.$sub$flight.v:183$1581.
  creating $alu model for $macc $techmap\flight_core.$sub$flight.v:183$1577.
  creating $alu model for $macc $techmap\flight_core.$sub$flight.v:183$1573.
  creating $alu model for $macc $techmap\flight_core.$sub$flight.v:183$1569.
  creating $alu model for $macc $techmap\flight_core.$add$flight.v:334$1533.
  creating $alu model for $macc $techmap\flight_core.$add$flight.v:334$1531.
  creating $alu model for $macc $techmap\flight_core.$add$flight.v:334$1529.
  creating $alu model for $macc $techmap\flight_core.$add$flight.v:334$1527.
  creating $macc cell for $techmap\flight_core.motorMixer4.$add$motor_mixer.v:77$1021: $auto$alumacc.cc:354:replace_macc$10215
  creating $macc cell for $techmap\flight_core.motorMixer2.$add$motor_mixer.v:77$1033: $auto$alumacc.cc:354:replace_macc$10216
  creating $macc cell for $techmap\flight_core.motorMixer1.$add$motor_mixer.v:77$1039: $auto$alumacc.cc:354:replace_macc$10217
  creating $macc cell for $techmap\flight_core.$mul$flight.v:183$1579: $auto$alumacc.cc:354:replace_macc$10218
  creating $macc cell for $techmap\flight_core.$mul$flight.v:183$1575: $auto$alumacc.cc:354:replace_macc$10219
  creating $macc cell for $techmap\flight_core.$mul$flight.v:183$1571: $auto$alumacc.cc:354:replace_macc$10220
  creating $macc cell for $techmap\flight_core.$mul$flight.v:183$1567: $auto$alumacc.cc:354:replace_macc$10221
  creating $macc cell for $techmap\flight_core.motorMixer1.pitchScalar.$mul$motor_mixer.v:96$1902: $auto$alumacc.cc:354:replace_macc$10222
  creating $macc cell for $techmap\flight_core.motorMixer1.yawScalar.$mul$motor_mixer.v:96$1894: $auto$alumacc.cc:354:replace_macc$10223
  creating $macc cell for $techmap\flight_core.motorMixer3.$add$motor_mixer.v:77$1027: $auto$alumacc.cc:354:replace_macc$10224
  creating $macc cell for $techmap\flight_core.motorMixer3.rollScalar.$mul$motor_mixer.v:96$1898: $auto$alumacc.cc:354:replace_macc$10225
  creating $alu model for $techmap\flight_core.$gt$flight.v:345$1536 ($gt): new $alu
  creating $alu model for $techmap\flight_core.$gt$flight.v:345$1540 ($gt): new $alu
  creating $alu model for $techmap\flight_core.$gt$flight.v:345$1544 ($gt): new $alu
  creating $alu model for $techmap\flight_core.$gt$flight.v:345$1548 ($gt): new $alu
  creating $alu model for $techmap\flight_core.$lt$flight.v:344$1535 ($lt): new $alu
  creating $alu model for $techmap\flight_core.$lt$flight.v:344$1539 ($lt): new $alu
  creating $alu model for $techmap\flight_core.$lt$flight.v:344$1543 ($lt): new $alu
  creating $alu model for $techmap\flight_core.$lt$flight.v:344$1547 ($lt): new $alu
  creating $alu model for $techmap\flight_core.control_rx.$gt$ip/peripherals/uart/uart_rx.v:79$1088 ($gt): new $alu
  creating $alu model for $techmap\flight_core.control_rx.$lt$ip/peripherals/uart/uart_rx.v:51$1079 ($lt): new $alu
  creating $alu model for $techmap\flight_core.debug.tx.$gt$ip/peripherals/uart/uart_tx.v:103$1946 ($gt): new $alu
  creating $alu model for $techmap\flight_core.debug_proto.$le$ip/debug/debug_protocol.v:145$186 ($le): new $alu
  creating $alu model for $techmap\flight_core.fport_decode.$gt$ip/peripherals/rc/fport_rx_decode.v:276$1068 ($gt): new $alu
  creating $alu model for $techmap\flight_core.imu.$ge$ip/peripherals/imu/imu_mpu9250.v:252$1113 ($ge): new $alu
  creating $alu model for $techmap\flight_core.imu.$gt$ip/peripherals/imu/imu_mpu9250.v:201$1105 ($gt): new $alu
  creating $alu model for $techmap\flight_core.imu.$gt$ip/peripherals/imu/imu_mpu9250.v:233$1109 ($gt): new $alu
  creating $alu model for $techmap\flight_core.imu.spi_fast.$gt$ip/peripherals/spi/spi_master.v:100$1916 ($gt): new $alu
  creating $alu model for $techmap\flight_core.imu.spi_fast.$lt$ip/peripherals/spi/spi_master.v:119$1918 ($lt): new $alu
  creating $alu model for $techmap\flight_core.imu.spi_fast.$lt$ip/peripherals/spi/spi_master.v:87$1911 ($lt): new $alu
  creating $alu model for $techmap\flight_core.imu.spi_registers.$lt$ip/peripherals/spi/spi_master.v:119$969 ($lt): new $alu
  creating $alu model for $techmap\flight_core.imu.spi_registers.$lt$ip/peripherals/spi/spi_master.v:87$962 ($lt): new $alu
  creating $alu model for $techmap\flight_core.motor1.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017 ($gt): new $alu
  creating $alu model for $techmap\flight_core.motor2.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017 ($gt): new $alu
  creating $alu model for $techmap\flight_core.motor3.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017 ($gt): new $alu
  creating $alu model for $techmap\flight_core.motor4.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017 ($gt): new $alu
  creating $alu model for $techmap\flight_core.imu.spi_fast.$eq$ip/peripherals/spi/spi_master.v:94$1914 ($eq): merged with $techmap\flight_core.imu.spi_fast.$lt$ip/peripherals/spi/spi_master.v:87$1911.
  creating $alu cell for $techmap\flight_core.motor4.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017: $auto$alumacc.cc:474:replace_alu$10251
  creating $alu cell for $techmap\flight_core.motor3.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017: $auto$alumacc.cc:474:replace_alu$10262
  creating $alu cell for $techmap\flight_core.motor2.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017: $auto$alumacc.cc:474:replace_alu$10273
  creating $alu cell for $techmap\flight_core.motor1.dshot_tx.$gt$ip/peripherals/rc/dshottx.v:73$1017: $auto$alumacc.cc:474:replace_alu$10284
  creating $alu cell for $techmap\flight_core.imu.spi_registers.$lt$ip/peripherals/spi/spi_master.v:87$962: $auto$alumacc.cc:474:replace_alu$10295
  creating $alu cell for $techmap\flight_core.imu.spi_registers.$lt$ip/peripherals/spi/spi_master.v:119$969: $auto$alumacc.cc:474:replace_alu$10306
  creating $alu cell for $techmap\flight_core.imu.spi_fast.$lt$ip/peripherals/spi/spi_master.v:87$1911, $techmap\flight_core.imu.spi_fast.$eq$ip/peripherals/spi/spi_master.v:94$1914: $auto$alumacc.cc:474:replace_alu$10317
  creating $alu cell for $techmap\flight_core.imu.spi_fast.$lt$ip/peripherals/spi/spi_master.v:119$1918: $auto$alumacc.cc:474:replace_alu$10328
  creating $alu cell for $techmap\flight_core.imu.spi_fast.$gt$ip/peripherals/spi/spi_master.v:100$1916: $auto$alumacc.cc:474:replace_alu$10339
  creating $alu cell for $techmap\flight_core.imu.$gt$ip/peripherals/imu/imu_mpu9250.v:233$1109: $auto$alumacc.cc:474:replace_alu$10344
  creating $alu cell for $techmap\flight_core.imu.$gt$ip/peripherals/imu/imu_mpu9250.v:201$1105: $auto$alumacc.cc:474:replace_alu$10349
  creating $alu cell for $techmap\flight_core.imu.$ge$ip/peripherals/imu/imu_mpu9250.v:252$1113: $auto$alumacc.cc:474:replace_alu$10354
  creating $alu cell for $techmap\flight_core.fport_decode.$gt$ip/peripherals/rc/fport_rx_decode.v:276$1068: $auto$alumacc.cc:474:replace_alu$10363
  creating $alu cell for $techmap\flight_core.debug_proto.$le$ip/debug/debug_protocol.v:145$186: $auto$alumacc.cc:474:replace_alu$10374
  creating $alu cell for $techmap\flight_core.debug.tx.$gt$ip/peripherals/uart/uart_tx.v:103$1946: $auto$alumacc.cc:474:replace_alu$10387
  creating $alu cell for $techmap\flight_core.control_rx.$lt$ip/peripherals/uart/uart_rx.v:51$1079: $auto$alumacc.cc:474:replace_alu$10392
  creating $alu cell for $techmap\flight_core.control_rx.$gt$ip/peripherals/uart/uart_rx.v:79$1088: $auto$alumacc.cc:474:replace_alu$10397
  creating $alu cell for $techmap\flight_core.$lt$flight.v:344$1547: $auto$alumacc.cc:474:replace_alu$10402
  creating $alu cell for $techmap\flight_core.$lt$flight.v:344$1543: $auto$alumacc.cc:474:replace_alu$10415
  creating $alu cell for $techmap\flight_core.$lt$flight.v:344$1539: $auto$alumacc.cc:474:replace_alu$10428
  creating $alu cell for $techmap\flight_core.$lt$flight.v:344$1535: $auto$alumacc.cc:474:replace_alu$10441
  creating $alu cell for $techmap\flight_core.$gt$flight.v:345$1548: $auto$alumacc.cc:474:replace_alu$10454
  creating $alu cell for $techmap\flight_core.$gt$flight.v:345$1544: $auto$alumacc.cc:474:replace_alu$10461
  creating $alu cell for $techmap\flight_core.$gt$flight.v:345$1540: $auto$alumacc.cc:474:replace_alu$10468
  creating $alu cell for $techmap\flight_core.$gt$flight.v:345$1536: $auto$alumacc.cc:474:replace_alu$10475
  creating $alu cell for $techmap\flight_core.$add$flight.v:334$1527: $auto$alumacc.cc:474:replace_alu$10482
  creating $alu cell for $techmap\flight_core.$add$flight.v:334$1529: $auto$alumacc.cc:474:replace_alu$10485
  creating $alu cell for $techmap\flight_core.$add$flight.v:334$1531: $auto$alumacc.cc:474:replace_alu$10488
  creating $alu cell for $techmap\flight_core.$add$flight.v:334$1533: $auto$alumacc.cc:474:replace_alu$10491
  creating $alu cell for $techmap\flight_core.$sub$flight.v:183$1569: $auto$alumacc.cc:474:replace_alu$10494
  creating $alu cell for $techmap\flight_core.$sub$flight.v:183$1573: $auto$alumacc.cc:474:replace_alu$10497
  creating $alu cell for $techmap\flight_core.$sub$flight.v:183$1577: $auto$alumacc.cc:474:replace_alu$10500
  creating $alu cell for $techmap\flight_core.$sub$flight.v:183$1581: $auto$alumacc.cc:474:replace_alu$10503
  creating $alu cell for $techmap\flight_core.$sub$flight.v:356$1551: $auto$alumacc.cc:474:replace_alu$10506
  creating $alu cell for $techmap\flight_core.$sub$flight.v:386$1557: $auto$alumacc.cc:474:replace_alu$10509
  creating $alu cell for $techmap\flight_core.$sub$flight.v:467$1585: $auto$alumacc.cc:474:replace_alu$10512
  creating $alu cell for $techmap\flight_core.control_rx.$add$ip/peripherals/uart/uart_rx.v:53$1080: $auto$alumacc.cc:474:replace_alu$10515
  creating $alu cell for $techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:73$1087: $auto$alumacc.cc:474:replace_alu$10518
  creating $alu cell for $techmap\flight_core.control_rx.$sub$ip/peripherals/uart/uart_rx.v:82$1089: $auto$alumacc.cc:474:replace_alu$10521
  creating $alu cell for $techmap\flight_core.debug.tx.$add$ip/peripherals/uart/uart_tx.v:120$1949: $auto$alumacc.cc:474:replace_alu$10524
  creating $alu cell for $techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:105$1947: $auto$alumacc.cc:474:replace_alu$10527
  creating $alu cell for $techmap\flight_core.debug.tx.$sub$ip/peripherals/uart/uart_tx.v:96$1942: $auto$alumacc.cc:474:replace_alu$10530
  creating $alu cell for $techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:150$187: $auto$alumacc.cc:474:replace_alu$10533
  creating $alu cell for $techmap\flight_core.debug_proto.$sub$ip/debug/debug_protocol.v:163$188: $auto$alumacc.cc:474:replace_alu$10536
  creating $alu cell for $techmap\flight_core.fport_decode.$add$ip/peripherals/rc/fport_rx_decode.v:282$1071: $auto$alumacc.cc:474:replace_alu$10539
  creating $alu cell for $techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:199$1055: $auto$alumacc.cc:474:replace_alu$10542
  creating $alu cell for $techmap\flight_core.fport_decode.$sub$ip/peripherals/rc/fport_rx_decode.v:377$1074: $auto$alumacc.cc:474:replace_alu$10545
  creating $alu cell for $techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:59$1005: $auto$alumacc.cc:474:replace_alu$10548
  creating $alu cell for $techmap\flight_core.fport_decode.inputFIFO.$add$ip/memory/FIFODualPort.v:65$1007: $auto$alumacc.cc:474:replace_alu$10551
  creating $alu cell for $techmap\flight_core.imu.$add$ip/peripherals/imu/imu_mpu9250.v:255$1114: $auto$alumacc.cc:474:replace_alu$10554
  creating $alu cell for $techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:203$1106: $auto$alumacc.cc:474:replace_alu$10557
  creating $alu cell for $techmap\flight_core.imu.$sub$ip/peripherals/imu/imu_mpu9250.v:412$1120: $auto$alumacc.cc:474:replace_alu$10560
  creating $alu cell for $techmap\flight_core.imu.spi_fast.$add$ip/peripherals/spi/spi_master.v:120$1919: $auto$alumacc.cc:474:replace_alu$10563
  creating $alu cell for $techmap\flight_core.imu.spi_fast.$sub$ip/peripherals/spi/spi_master.v:102$1917: $auto$alumacc.cc:474:replace_alu$10566
  creating $alu cell for $techmap\flight_core.imu.spi_registers.$add$ip/peripherals/spi/spi_master.v:120$970: $auto$alumacc.cc:474:replace_alu$10569
  creating $alu cell for $techmap\flight_core.imu.spi_registers.$sub$ip/peripherals/spi/spi_master.v:102$968: $auto$alumacc.cc:474:replace_alu$10572
  creating $alu cell for $techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012: $auto$alumacc.cc:474:replace_alu$10575
  creating $alu cell for $techmap\flight_core.motor1.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016: $auto$alumacc.cc:474:replace_alu$10578
  creating $alu cell for $techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012: $auto$alumacc.cc:474:replace_alu$10581
  creating $alu cell for $techmap\flight_core.motor2.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016: $auto$alumacc.cc:474:replace_alu$10584
  creating $alu cell for $techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012: $auto$alumacc.cc:474:replace_alu$10587
  creating $alu cell for $techmap\flight_core.motor3.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016: $auto$alumacc.cc:474:replace_alu$10590
  creating $alu cell for $techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:62$1012: $auto$alumacc.cc:474:replace_alu$10593
  creating $alu cell for $techmap\flight_core.motor4.dshot_tx.$sub$ip/peripherals/rc/dshottx.v:69$1016: $auto$alumacc.cc:474:replace_alu$10596
  created 64 $alu and 11 $macc cells.

16.19. Executing OPT pass (performing simple optimizations).

16.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~188 debug messages>

16.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~222 debug messages>

16.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10254: { $auto$alumacc.cc:490:replace_alu$10252 [0] $auto$alumacc.cc:490:replace_alu$10252 [1] $auto$alumacc.cc:490:replace_alu$10252 [2] $auto$alumacc.cc:490:replace_alu$10252 [3] $auto$alumacc.cc:490:replace_alu$10252 [4] $auto$alumacc.cc:490:replace_alu$10252 [5] $auto$alumacc.cc:490:replace_alu$10252 [6] $auto$alumacc.cc:490:replace_alu$10252 [7] $auto$alumacc.cc:490:replace_alu$10252 [8] $auto$alumacc.cc:490:replace_alu$10252 [9] $auto$alumacc.cc:490:replace_alu$10252 [10] $auto$alumacc.cc:490:replace_alu$10252 [11] $auto$alumacc.cc:490:replace_alu$10252 [12] $auto$alumacc.cc:490:replace_alu$10252 [13] $auto$alumacc.cc:490:replace_alu$10252 [14] $auto$alumacc.cc:490:replace_alu$10252 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10265: { $auto$alumacc.cc:490:replace_alu$10263 [0] $auto$alumacc.cc:490:replace_alu$10263 [1] $auto$alumacc.cc:490:replace_alu$10263 [2] $auto$alumacc.cc:490:replace_alu$10263 [3] $auto$alumacc.cc:490:replace_alu$10263 [4] $auto$alumacc.cc:490:replace_alu$10263 [5] $auto$alumacc.cc:490:replace_alu$10263 [6] $auto$alumacc.cc:490:replace_alu$10263 [7] $auto$alumacc.cc:490:replace_alu$10263 [8] $auto$alumacc.cc:490:replace_alu$10263 [9] $auto$alumacc.cc:490:replace_alu$10263 [10] $auto$alumacc.cc:490:replace_alu$10263 [11] $auto$alumacc.cc:490:replace_alu$10263 [12] $auto$alumacc.cc:490:replace_alu$10263 [13] $auto$alumacc.cc:490:replace_alu$10263 [14] $auto$alumacc.cc:490:replace_alu$10263 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10276: { $auto$alumacc.cc:490:replace_alu$10274 [0] $auto$alumacc.cc:490:replace_alu$10274 [1] $auto$alumacc.cc:490:replace_alu$10274 [2] $auto$alumacc.cc:490:replace_alu$10274 [3] $auto$alumacc.cc:490:replace_alu$10274 [4] $auto$alumacc.cc:490:replace_alu$10274 [5] $auto$alumacc.cc:490:replace_alu$10274 [6] $auto$alumacc.cc:490:replace_alu$10274 [7] $auto$alumacc.cc:490:replace_alu$10274 [8] $auto$alumacc.cc:490:replace_alu$10274 [9] $auto$alumacc.cc:490:replace_alu$10274 [10] $auto$alumacc.cc:490:replace_alu$10274 [11] $auto$alumacc.cc:490:replace_alu$10274 [12] $auto$alumacc.cc:490:replace_alu$10274 [13] $auto$alumacc.cc:490:replace_alu$10274 [14] $auto$alumacc.cc:490:replace_alu$10274 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10287: { $auto$alumacc.cc:490:replace_alu$10285 [0] $auto$alumacc.cc:490:replace_alu$10285 [1] $auto$alumacc.cc:490:replace_alu$10285 [2] $auto$alumacc.cc:490:replace_alu$10285 [3] $auto$alumacc.cc:490:replace_alu$10285 [4] $auto$alumacc.cc:490:replace_alu$10285 [5] $auto$alumacc.cc:490:replace_alu$10285 [6] $auto$alumacc.cc:490:replace_alu$10285 [7] $auto$alumacc.cc:490:replace_alu$10285 [8] $auto$alumacc.cc:490:replace_alu$10285 [9] $auto$alumacc.cc:490:replace_alu$10285 [10] $auto$alumacc.cc:490:replace_alu$10285 [11] $auto$alumacc.cc:490:replace_alu$10285 [12] $auto$alumacc.cc:490:replace_alu$10285 [13] $auto$alumacc.cc:490:replace_alu$10285 [14] $auto$alumacc.cc:490:replace_alu$10285 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10298: { $auto$alumacc.cc:490:replace_alu$10296 [0] $auto$alumacc.cc:490:replace_alu$10296 [1] $auto$alumacc.cc:490:replace_alu$10296 [2] $auto$alumacc.cc:490:replace_alu$10296 [3] $auto$alumacc.cc:490:replace_alu$10296 [4] $auto$alumacc.cc:490:replace_alu$10296 [5] $auto$alumacc.cc:490:replace_alu$10296 [6] $auto$alumacc.cc:490:replace_alu$10296 [7] $auto$alumacc.cc:490:replace_alu$10296 [8] $auto$alumacc.cc:490:replace_alu$10296 [9] $auto$alumacc.cc:490:replace_alu$10296 [10] $auto$alumacc.cc:490:replace_alu$10296 [11] $auto$alumacc.cc:490:replace_alu$10296 [12] $auto$alumacc.cc:490:replace_alu$10296 [13] $auto$alumacc.cc:490:replace_alu$10296 [14] $auto$alumacc.cc:490:replace_alu$10296 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10309: { $auto$alumacc.cc:490:replace_alu$10307 [0] $auto$alumacc.cc:490:replace_alu$10307 [1] $auto$alumacc.cc:490:replace_alu$10307 [2] $auto$alumacc.cc:490:replace_alu$10307 [3] $auto$alumacc.cc:490:replace_alu$10307 [4] $auto$alumacc.cc:490:replace_alu$10307 [5] $auto$alumacc.cc:490:replace_alu$10307 [6] $auto$alumacc.cc:490:replace_alu$10307 [7] $auto$alumacc.cc:490:replace_alu$10307 [8] $auto$alumacc.cc:490:replace_alu$10307 [9] $auto$alumacc.cc:490:replace_alu$10307 [10] $auto$alumacc.cc:490:replace_alu$10307 [11] $auto$alumacc.cc:490:replace_alu$10307 [12] $auto$alumacc.cc:490:replace_alu$10307 [13] $auto$alumacc.cc:490:replace_alu$10307 [14] $auto$alumacc.cc:490:replace_alu$10307 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10320: { $auto$alumacc.cc:490:replace_alu$10318 [0] $auto$alumacc.cc:490:replace_alu$10318 [1] $auto$alumacc.cc:490:replace_alu$10318 [2] $auto$alumacc.cc:490:replace_alu$10318 [3] $auto$alumacc.cc:490:replace_alu$10318 [4] $auto$alumacc.cc:490:replace_alu$10318 [5] $auto$alumacc.cc:490:replace_alu$10318 [6] $auto$alumacc.cc:490:replace_alu$10318 [7] $auto$alumacc.cc:490:replace_alu$10318 [8] $auto$alumacc.cc:490:replace_alu$10318 [9] $auto$alumacc.cc:490:replace_alu$10318 [10] $auto$alumacc.cc:490:replace_alu$10318 [11] $auto$alumacc.cc:490:replace_alu$10318 [12] $auto$alumacc.cc:490:replace_alu$10318 [13] $auto$alumacc.cc:490:replace_alu$10318 [14] $auto$alumacc.cc:490:replace_alu$10318 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10331: { $auto$alumacc.cc:490:replace_alu$10329 [0] $auto$alumacc.cc:490:replace_alu$10329 [1] $auto$alumacc.cc:490:replace_alu$10329 [2] $auto$alumacc.cc:490:replace_alu$10329 [3] $auto$alumacc.cc:490:replace_alu$10329 [4] $auto$alumacc.cc:490:replace_alu$10329 [5] $auto$alumacc.cc:490:replace_alu$10329 [6] $auto$alumacc.cc:490:replace_alu$10329 [7] $auto$alumacc.cc:490:replace_alu$10329 [8] $auto$alumacc.cc:490:replace_alu$10329 [9] $auto$alumacc.cc:490:replace_alu$10329 [10] $auto$alumacc.cc:490:replace_alu$10329 [11] $auto$alumacc.cc:490:replace_alu$10329 [12] $auto$alumacc.cc:490:replace_alu$10329 [13] $auto$alumacc.cc:490:replace_alu$10329 [14] $auto$alumacc.cc:490:replace_alu$10329 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10359: { $auto$alumacc.cc:490:replace_alu$10355 [0] $auto$alumacc.cc:490:replace_alu$10355 [1] $auto$alumacc.cc:490:replace_alu$10355 [2] $auto$alumacc.cc:490:replace_alu$10355 [3] $auto$alumacc.cc:490:replace_alu$10355 [4] $auto$alumacc.cc:490:replace_alu$10355 [5] $auto$alumacc.cc:490:replace_alu$10355 [6] $auto$alumacc.cc:490:replace_alu$10355 [7] $auto$alumacc.cc:490:replace_alu$10355 [8] $auto$alumacc.cc:490:replace_alu$10355 [9] $auto$alumacc.cc:490:replace_alu$10355 [10] $auto$alumacc.cc:490:replace_alu$10355 [11] $auto$alumacc.cc:490:replace_alu$10355 [12] $auto$alumacc.cc:490:replace_alu$10355 [13] $auto$alumacc.cc:490:replace_alu$10355 [14] $auto$alumacc.cc:490:replace_alu$10355 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10366: { $auto$alumacc.cc:490:replace_alu$10364 [0] $auto$alumacc.cc:490:replace_alu$10364 [1] $auto$alumacc.cc:490:replace_alu$10364 [2] $auto$alumacc.cc:490:replace_alu$10364 [3] $auto$alumacc.cc:490:replace_alu$10364 [4] $auto$alumacc.cc:490:replace_alu$10364 [5] $auto$alumacc.cc:490:replace_alu$10364 [6] $auto$alumacc.cc:490:replace_alu$10364 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10377: { $auto$alumacc.cc:490:replace_alu$10375 [0] $auto$alumacc.cc:490:replace_alu$10375 [1] $auto$alumacc.cc:490:replace_alu$10375 [2] $auto$alumacc.cc:490:replace_alu$10375 [3] $auto$alumacc.cc:490:replace_alu$10375 [4] $auto$alumacc.cc:490:replace_alu$10375 [5] $auto$alumacc.cc:490:replace_alu$10375 [6] $auto$alumacc.cc:490:replace_alu$10375 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10405: { $auto$alumacc.cc:490:replace_alu$10403 [0] $auto$alumacc.cc:490:replace_alu$10403 [1] $auto$alumacc.cc:490:replace_alu$10403 [2] $auto$alumacc.cc:490:replace_alu$10403 [3] $auto$alumacc.cc:490:replace_alu$10403 [4] $auto$alumacc.cc:490:replace_alu$10403 [5] $auto$alumacc.cc:490:replace_alu$10403 [6] $auto$alumacc.cc:490:replace_alu$10403 [7] $auto$alumacc.cc:490:replace_alu$10403 [8] $auto$alumacc.cc:490:replace_alu$10403 [9] $auto$alumacc.cc:490:replace_alu$10403 [10] $auto$alumacc.cc:490:replace_alu$10403 [11] $auto$alumacc.cc:490:replace_alu$10403 [12] $auto$alumacc.cc:490:replace_alu$10403 [13] $auto$alumacc.cc:490:replace_alu$10403 [14] $auto$alumacc.cc:490:replace_alu$10403 [15] $auto$alumacc.cc:490:replace_alu$10403 [16] $auto$alumacc.cc:490:replace_alu$10403 [17] $auto$alumacc.cc:490:replace_alu$10403 [18] $auto$alumacc.cc:490:replace_alu$10403 [19] $auto$alumacc.cc:490:replace_alu$10403 [20] $auto$alumacc.cc:490:replace_alu$10403 [21] $auto$alumacc.cc:490:replace_alu$10403 [22] $auto$alumacc.cc:490:replace_alu$10403 [23] $auto$alumacc.cc:490:replace_alu$10403 [24] $auto$alumacc.cc:490:replace_alu$10403 [25] $auto$alumacc.cc:490:replace_alu$10403 [26] $auto$alumacc.cc:490:replace_alu$10403 [27] $auto$alumacc.cc:490:replace_alu$10403 [28] $auto$alumacc.cc:490:replace_alu$10403 [29] $auto$alumacc.cc:490:replace_alu$10403 [30] $auto$alumacc.cc:490:replace_alu$10403 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10418: { $auto$alumacc.cc:490:replace_alu$10416 [0] $auto$alumacc.cc:490:replace_alu$10416 [1] $auto$alumacc.cc:490:replace_alu$10416 [2] $auto$alumacc.cc:490:replace_alu$10416 [3] $auto$alumacc.cc:490:replace_alu$10416 [4] $auto$alumacc.cc:490:replace_alu$10416 [5] $auto$alumacc.cc:490:replace_alu$10416 [6] $auto$alumacc.cc:490:replace_alu$10416 [7] $auto$alumacc.cc:490:replace_alu$10416 [8] $auto$alumacc.cc:490:replace_alu$10416 [9] $auto$alumacc.cc:490:replace_alu$10416 [10] $auto$alumacc.cc:490:replace_alu$10416 [11] $auto$alumacc.cc:490:replace_alu$10416 [12] $auto$alumacc.cc:490:replace_alu$10416 [13] $auto$alumacc.cc:490:replace_alu$10416 [14] $auto$alumacc.cc:490:replace_alu$10416 [15] $auto$alumacc.cc:490:replace_alu$10416 [16] $auto$alumacc.cc:490:replace_alu$10416 [17] $auto$alumacc.cc:490:replace_alu$10416 [18] $auto$alumacc.cc:490:replace_alu$10416 [19] $auto$alumacc.cc:490:replace_alu$10416 [20] $auto$alumacc.cc:490:replace_alu$10416 [21] $auto$alumacc.cc:490:replace_alu$10416 [22] $auto$alumacc.cc:490:replace_alu$10416 [23] $auto$alumacc.cc:490:replace_alu$10416 [24] $auto$alumacc.cc:490:replace_alu$10416 [25] $auto$alumacc.cc:490:replace_alu$10416 [26] $auto$alumacc.cc:490:replace_alu$10416 [27] $auto$alumacc.cc:490:replace_alu$10416 [28] $auto$alumacc.cc:490:replace_alu$10416 [29] $auto$alumacc.cc:490:replace_alu$10416 [30] $auto$alumacc.cc:490:replace_alu$10416 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10431: { $auto$alumacc.cc:490:replace_alu$10429 [0] $auto$alumacc.cc:490:replace_alu$10429 [1] $auto$alumacc.cc:490:replace_alu$10429 [2] $auto$alumacc.cc:490:replace_alu$10429 [3] $auto$alumacc.cc:490:replace_alu$10429 [4] $auto$alumacc.cc:490:replace_alu$10429 [5] $auto$alumacc.cc:490:replace_alu$10429 [6] $auto$alumacc.cc:490:replace_alu$10429 [7] $auto$alumacc.cc:490:replace_alu$10429 [8] $auto$alumacc.cc:490:replace_alu$10429 [9] $auto$alumacc.cc:490:replace_alu$10429 [10] $auto$alumacc.cc:490:replace_alu$10429 [11] $auto$alumacc.cc:490:replace_alu$10429 [12] $auto$alumacc.cc:490:replace_alu$10429 [13] $auto$alumacc.cc:490:replace_alu$10429 [14] $auto$alumacc.cc:490:replace_alu$10429 [15] $auto$alumacc.cc:490:replace_alu$10429 [16] $auto$alumacc.cc:490:replace_alu$10429 [17] $auto$alumacc.cc:490:replace_alu$10429 [18] $auto$alumacc.cc:490:replace_alu$10429 [19] $auto$alumacc.cc:490:replace_alu$10429 [20] $auto$alumacc.cc:490:replace_alu$10429 [21] $auto$alumacc.cc:490:replace_alu$10429 [22] $auto$alumacc.cc:490:replace_alu$10429 [23] $auto$alumacc.cc:490:replace_alu$10429 [24] $auto$alumacc.cc:490:replace_alu$10429 [25] $auto$alumacc.cc:490:replace_alu$10429 [26] $auto$alumacc.cc:490:replace_alu$10429 [27] $auto$alumacc.cc:490:replace_alu$10429 [28] $auto$alumacc.cc:490:replace_alu$10429 [29] $auto$alumacc.cc:490:replace_alu$10429 [30] $auto$alumacc.cc:490:replace_alu$10429 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$10444: { $auto$alumacc.cc:490:replace_alu$10442 [0] $auto$alumacc.cc:490:replace_alu$10442 [1] $auto$alumacc.cc:490:replace_alu$10442 [2] $auto$alumacc.cc:490:replace_alu$10442 [3] $auto$alumacc.cc:490:replace_alu$10442 [4] $auto$alumacc.cc:490:replace_alu$10442 [5] $auto$alumacc.cc:490:replace_alu$10442 [6] $auto$alumacc.cc:490:replace_alu$10442 [7] $auto$alumacc.cc:490:replace_alu$10442 [8] $auto$alumacc.cc:490:replace_alu$10442 [9] $auto$alumacc.cc:490:replace_alu$10442 [10] $auto$alumacc.cc:490:replace_alu$10442 [11] $auto$alumacc.cc:490:replace_alu$10442 [12] $auto$alumacc.cc:490:replace_alu$10442 [13] $auto$alumacc.cc:490:replace_alu$10442 [14] $auto$alumacc.cc:490:replace_alu$10442 [15] $auto$alumacc.cc:490:replace_alu$10442 [16] $auto$alumacc.cc:490:replace_alu$10442 [17] $auto$alumacc.cc:490:replace_alu$10442 [18] $auto$alumacc.cc:490:replace_alu$10442 [19] $auto$alumacc.cc:490:replace_alu$10442 [20] $auto$alumacc.cc:490:replace_alu$10442 [21] $auto$alumacc.cc:490:replace_alu$10442 [22] $auto$alumacc.cc:490:replace_alu$10442 [23] $auto$alumacc.cc:490:replace_alu$10442 [24] $auto$alumacc.cc:490:replace_alu$10442 [25] $auto$alumacc.cc:490:replace_alu$10442 [26] $auto$alumacc.cc:490:replace_alu$10442 [27] $auto$alumacc.cc:490:replace_alu$10442 [28] $auto$alumacc.cc:490:replace_alu$10442 [29] $auto$alumacc.cc:490:replace_alu$10442 [30] $auto$alumacc.cc:490:replace_alu$10442 [31] }
  Optimizing cells in module \top.
Performed a total of 15 changes.

16.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

16.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 23 unused cells and 49 unused wires.
<suppressed ~24 debug messages>

16.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.19.9. Rerunning OPT passes. (Maybe there is more to do..)

16.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~222 debug messages>

16.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

16.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.19.16. Finished OPT passes. (There is nothing left to do.)

16.20. Executing FSM pass (extract and optimize FSM).

16.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.flight_core.control_rx.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.flight_core.debug.tx.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.flight_core.debugState as FSM state register:
    Register has an initialization value.
Not marking top.flight_core.debug_msg_length as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.flight_core.debug_msg_type as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.flight_core.debug_proto.nextState as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.flight_core.fc_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.flight_core.fport_decode.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.flight_core.imu.imu_cfg_state as FSM state register:
    Register has an initialization value.
Not marking top.flight_core.imu.imu_sample_state as FSM state register:
    Register has an initialization value.
Not marking top.flight_core.imu.imu_state as FSM state register:
    Register has an initialization value.
Not marking top.flight_core.imu.spiTxData as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.flight_core.imu.spi_fast.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.flight_core.imu.spi_registers.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.flight_core.motor1.dshot_tx.alarm as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.flight_core.motor2.dshot_tx.alarm as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.flight_core.motor3.dshot_tx.alarm as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.flight_core.motor4.dshot_tx.alarm as FSM state register:
    Users of register don't seem to benefit from recoding.

16.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

16.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

16.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

16.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

16.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

16.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

16.21. Executing OPT pass (performing simple optimizations).

16.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

16.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.21.5. Finished fast OPT passes.

16.22. Executing MEMORY pass.

16.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1890' in module `\top': no (compatible) $dff found.
Checking cell `$techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1891' in module `\top': merged $dff to cell.
Checking cell `$techmap\flight_core.fport_decode.inputFIFO.memory.$memrd$\mem$ip/memory/BlockMemoryDualPort.v:36$1884' in module `\top': merged data $dff with rd enable to cell.
Checking cell `$techmap\flight_core.imu.$memrd$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:246$1111' in module `\top': merged address $dff to cell.

16.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 6 unused wires.
<suppressed ~6 debug messages>

16.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.flight_core.fport_decode.inputFIFO.memory.mem by address:
    Port 0 ($techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1890) has addr 6'xxxxxx.
      Active bits: 00000000
  New clock domain: posedge \flight_core.control_rx.rxDataReady
    Port 1 ($techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1891) has addr \flight_core.fport_decode.inputFIFO.write_address.
      Active bits: 11111111
Consolidating write ports of memory top.flight_core.fport_decode.inputFIFO.memory.mem using sat-based resource sharing:
  Port 0 ($techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1890) unclocked: not considered
  Port 1 ($techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1891) on posedge \flight_core.control_rx.rxDataReady: considered
  No two subsequent ports in same clock domain considered -> nothing to consolidate.

16.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\flight_core.fport_decode.inputFIFO.memory.mem' in module `\top':
  $techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:33$1890 ($memwr)
  $techmap\flight_core.fport_decode.inputFIFO.memory.$memwr$\mem$ip/memory/BlockMemoryDualPort.v:45$1891 ($memwr)
  $techmap\flight_core.fport_decode.inputFIFO.memory.$memrd$\mem$ip/memory/BlockMemoryDualPort.v:36$1884 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\flight_core.imu.gyroConfigCmds' in module `\top':
  $techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:107$1121 ($meminit)
  $techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:108$1122 ($meminit)
  $techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:109$1123 ($meminit)
  $techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:110$1124 ($meminit)
  $techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:111$1125 ($meminit)
  $techmap\flight_core.imu.$meminit$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:112$1126 ($meminit)
  $techmap\flight_core.imu.$memrd$\gyroConfigCmds$ip/peripherals/imu/imu_mpu9250.v:246$1111 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\flight_core.imu.gyroOffsets' in module `\top':
  $techmap\flight_core.imu.$meminit$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:119$1127 ($meminit)
  $techmap\flight_core.imu.$meminit$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:120$1128 ($meminit)
  $techmap\flight_core.imu.$meminit$\gyroOffsets$ip/peripherals/imu/imu_mpu9250.v:121$1129 ($meminit)
Collecting $memrd, $memwr and $meminit for memory `\flight_core.pid_gains' in module `\top':
  $techmap\flight_core.$meminit$\pid_gains$flight.v:213$1829 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:214$1830 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:215$1831 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:216$1832 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:218$1833 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:219$1834 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:220$1835 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:221$1836 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:223$1837 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:224$1838 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:225$1839 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:226$1840 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:229$1841 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:230$1842 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:231$1843 ($meminit)
  $techmap\flight_core.$meminit$\pid_gains$flight.v:232$1844 ($meminit)

16.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.
<suppressed ~2 debug messages>

16.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.flight_core.fport_decode.inputFIFO.memory.mem:
  Properties: ports=2 bits=512 rports=1 wports=1 dbits=8 abits=6 words=64
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=192 dwaste=8 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \flight_core.control_rx.rxDataReady.
        Mapped to bram port B1.
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \flight_core.control_rx.rxDataReady.
        Mapped to bram port B1.
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=960 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \flight_core.control_rx.rxDataReady.
        Mapped to bram port B1.
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1984 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \flight_core.control_rx.rxDataReady.
        Mapped to bram port B1.
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=3, cells=4, acells=1
    Efficiency for rule 2.2: efficiency=6, cells=2, acells=1
    Efficiency for rule 2.1: efficiency=12, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=1, acells=1
    Selected rule 2.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \flight_core.control_rx.rxDataReady.
        Mapped to bram port B1.
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: flight_core.fport_decode.inputFIFO.memory.mem.0.0.0
Processing top.flight_core.imu.gyroConfigCmds:
  Properties: ports=1 bits=144 rports=1 wports=0 dbits=16 abits=4 words=9
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=247 dwaste=0 bwaste=3952 waste=3952 efficiency=3
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3952 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=503 dwaste=0 bwaste=4024 waste=4024 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1015 dwaste=0 bwaste=4060 waste=4060 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2039 dwaste=0 bwaste=4078 waste=4078 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 1 rules:
    Efficiency for rule 1.1: efficiency=3, cells=1, acells=1
    Selected rule 1.1 with efficiency 3.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain \CLK.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: flight_core.imu.gyroConfigCmds.0.0.0

16.25. Executing TECHMAP pass (map to technology primitives).

16.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

16.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=9\CFG_DBITS=8\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a6c567a6b5b5f39cbc657e0b36350d4ebc90f38c\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$66c3fa288a62dc560ce3ddd26d81551ab195105f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$4c6c19911a12f297b16f8c3ce43cf7ec074ffad1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~86 debug messages>

16.26. Executing ICE40_BRAMINIT pass.

16.27. Executing OPT pass (performing simple optimizations).

16.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~68 debug messages>

16.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

16.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 64 unused wires.
<suppressed ~5 debug messages>

16.27.5. Finished fast OPT passes.

16.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

16.29. Executing OPT pass (performing simple optimizations).

16.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

16.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\flight_core.$procmux$8742:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:455:run$10152 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$10152 [0]
      New connections: $auto$wreduce.cc:455:run$10152 [1] = $auto$wreduce.cc:455:run$10152 [0]
    Consolidated identical input bits for $mux cell $techmap\flight_core.debug_proto.$procmux$5168:
      Old ports: A=7'0001000, B=7'1100100, Y=$auto$wreduce.cc:455:run$10157 [6:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$10157 [3:2]
      New connections: { $auto$wreduce.cc:455:run$10157 [6:4] $auto$wreduce.cc:455:run$10157 [1:0] } = { $auto$wreduce.cc:455:run$10157 [2] $auto$wreduce.cc:455:run$10157 [2] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\flight_core.fport_decode.$procmux$9747:
      Old ports: A=3'110, B=3'000, Y=$techmap\flight_core.fport_decode.$procmux$9747_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$techmap\flight_core.fport_decode.$procmux$9747_Y [1]
      New connections: { $techmap\flight_core.fport_decode.$procmux$9747_Y [2] $techmap\flight_core.fport_decode.$procmux$9747_Y [0] } = { $techmap\flight_core.fport_decode.$procmux$9747_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\flight_core.motor1.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014:
      Old ports: A=5'10001, B=5'01000, Y=$auto$wreduce.cc:455:run$10169 [4:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$10169 [3] $auto$wreduce.cc:455:run$10169 [0] }
      New connections: { $auto$wreduce.cc:455:run$10169 [4] $auto$wreduce.cc:455:run$10169 [2:1] } = { $auto$wreduce.cc:455:run$10169 [0] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\flight_core.motor2.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014:
      Old ports: A=5'10001, B=5'01000, Y=$auto$wreduce.cc:455:run$10171 [4:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$10171 [3] $auto$wreduce.cc:455:run$10171 [0] }
      New connections: { $auto$wreduce.cc:455:run$10171 [4] $auto$wreduce.cc:455:run$10171 [2:1] } = { $auto$wreduce.cc:455:run$10171 [0] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014:
      Old ports: A=5'10001, B=5'01000, Y=$techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [4:0]
      New ports: A=2'01, B=2'10, Y={ $techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [3] $techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [0] }
      New connections: { $techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [4] $techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [2:1] } = { $techmap\flight_core.motor3.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [0] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014:
      Old ports: A=5'10001, B=5'01000, Y=$techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [4:0]
      New ports: A=2'01, B=2'10, Y={ $techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [3] $techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [0] }
      New connections: { $techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [4] $techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [2:1] } = { $techmap\flight_core.motor4.dshot_tx.$ternary$ip/peripherals/rc/dshottx.v:62$1014_Y [0] 2'00 }
  Optimizing cells in module \top.
Performed a total of 7 changes.

16.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

16.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.29.9. Rerunning OPT passes. (Maybe there is more to do..)

16.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

16.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

16.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.29.16. Finished OPT passes. (There is nothing left to do.)

16.30. Executing TECHMAP pass (map to technology primitives).

16.30.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

16.30.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

16.30.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=16 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=17 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=18 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=30\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \flight_core.inputs[1] (32 bits, signed)
  add \flight_core.inputs[0] (32 bits, signed)
  add \flight_core.motorMixer1.mixed[3] (32 bits, signed)
  add \flight_core.motorMixer1.pitchScalar.temp [59:28] (32 bits, signed)
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=12\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
  add { \flight_core.motorMixer4.mixed[1] [31:28] \flight_core.motorMixer3.mixed[1] } (32 bits, signed)
  add \flight_core.inputs[0] (32 bits, signed)
  add \flight_core.motorMixer1.mixed[3] (32 bits, signed)
  add \flight_core.inputs[2] (32 bits, signed)
  add \flight_core.inputs[1] (32 bits, signed)
  add \flight_core.inputs[0] (32 bits, signed)
  add \flight_core.inputs[3] (32 bits, signed)
  add \flight_core.inputs[2] (32 bits, signed)
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=5\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=10\Y_WIDTH=13 for cells of type $alu.
  add \flight_core.fport_decode.controls2 * 3'101 (11x3 bits, unsigned)
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
  add \flight_core.fport_decode.controls3 * 3'101 (11x3 bits, unsigned)
  add \flight_core.inputs[3] * 29'10000000000000000000000000000 (32x29 bits, signed)
  add \flight_core.fport_decode.controls1 * 3'101 (11x3 bits, unsigned)
  add \flight_core.inputs[2] * 29'10000000000000000000000000000 (32x29 bits, signed)
  add { \flight_core.motorMixer4.mixed[1] [31:28] \flight_core.motorMixer3.mixed[1] } (32 bits, signed)
  add \flight_core.inputs[0] (32 bits, signed)
  add \flight_core.inputs[3] (32 bits, signed)
  add \flight_core.motorMixer1.pitchScalar.temp [59:28] (32 bits, signed)
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=32 for cells of type $alu.
Using template $paramod$constmap:b23e69f9359ccab1581cffa68b8a9cdf073114c2$paramod$10d1151e4552a7d0381d225130519444ddeec000\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=1\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod$constmap:4c241a530117434118f0a7bc70f9302dbe83e683$paramod$56e95de5d065b2999cba663b1bf6bc41f162348c\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:446553370afc6c2aa6cc0b8f657b7f64b237ff7c$paramod$55f49a009a975a30a28fdd971adb6110903d4740\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
  add \flight_core.inputs[1] * 29'10000000000000000000000000000 (32x29 bits, signed)
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:4b5649afbfb8c4c87464bb2a8089455e481b1596$paramod$c93dff91361b8229cab066c0b64da176df19eeef\_90_shift_shiftx for cells of type $shiftx.
  add \flight_core.fport_decode.controls0 * 3'101 (11x3 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_fa\WIDTH=14 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=60 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=60\B_WIDTH=60\Y_WIDTH=60 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
No more expansions possible.
<suppressed ~4462 debug messages>

16.31. Executing ICE40_OPT pass (performing simple optimizations).

16.31.1. Running ICE40 specific optimizations.

16.31.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~37810 debug messages>

16.31.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5040 debug messages>
Removed a total of 1680 cells.

16.31.4. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2514 unused cells and 5464 unused wires.
<suppressed ~2515 debug messages>

16.31.6. Rerunning OPT passes. (Removed registers in this run.)

16.31.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10295.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10295.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10306.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10317.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10317.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10328.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10339.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10339.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10344.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10344.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10349.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10349.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10354.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10374.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10374.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10387.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10387.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10392.slice[0].carry: CO=\flight_core.control_rx.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10397.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10397.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10402.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10402.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10415.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10415.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10428.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10428.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10441.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$10441.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10494.C [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10497.C [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10500.C [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10503.C [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10506.slice[0].carry: CO=\flight_core.debugUpdateCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10509.slice[0].carry: CO=\flight_core.debugSendState [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10512.slice[0].carry: CO=\flight_core.attitudeUpdateCounter [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10515.slice[0].carry: CO=\flight_core.control_rx.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[10].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [10]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[12].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [12]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[13].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [13]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[14].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [14]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[15].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [15]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[16].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [16]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[17].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [17]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[18].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [18]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[19].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [19]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[20].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [20]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[21].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [21]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[22].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [22]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[23].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [23]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[24].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [24]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[25].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [25]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[26].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [26]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[27].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [27]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[28].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [28]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[29].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [29]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[30].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [30]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[5].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [5]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[6].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [6]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[7].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [7]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[8].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [8]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[9].carry: CO=$auto$alumacc.cc:474:replace_alu$10518.C [9]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10521.slice[0].carry: CO=\flight_core.control_rx.bitCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10524.slice[0].carry: CO=\flight_core.debug.tx.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10527.slice[0].carry: CO=\flight_core.debug.tx.bitCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10530.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10536.slice[0].carry: CO=\flight_core.debug_proto.sentDataCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10539.slice[0].carry: CO=\flight_core.fport_decode.packet_data_read [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10542.slice[0].carry: CO=\flight_core.fport_decode.timeout_counter [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10545.slice[0].carry: CO=\flight_core.fport_decode.waitDelay [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10548.slice[0].carry: CO=\flight_core.fport_decode.inputFIFO.write_address [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10551.slice[0].carry: CO=\flight_core.fport_decode.inputFIFO.read_address [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10554.slice[0].carry: CO=\flight_core.imu.gyroConfigCmdSentCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10557.slice[0].carry: CO=\flight_core.imu.gyroUpdateCounter [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10560.slice[0].carry: CO=\flight_core.imu.counter1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10563.slice[0].carry: CO=\flight_core.imu.spi_fast.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10566.slice[0].carry: CO=\flight_core.imu.spi_fast.bitCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10569.slice[0].carry: CO=\flight_core.imu.spi_registers.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10572.slice[0].carry: CO=\flight_core.imu.spi_registers.bitCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10575.slice[0].carry: CO=\flight_core.motor1.dshot_tx.bitsCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10578.slice[0].carry: CO=\flight_core.motor1.dshot_tx.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10581.slice[0].carry: CO=\flight_core.motor2.dshot_tx.bitsCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10584.slice[0].carry: CO=\flight_core.motor2.dshot_tx.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10587.slice[0].carry: CO=\flight_core.motor3.dshot_tx.bitsCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10590.slice[0].carry: CO=\flight_core.motor3.dshot_tx.timerCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10593.slice[0].carry: CO=\flight_core.motor4.dshot_tx.bitsCount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10596.slice[0].carry: CO=\flight_core.motor4.dshot_tx.timerCount [0]
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$13204.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$14431.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$14441.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$15598.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16784.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[10].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[11].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[12].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[13].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[14].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[15].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[16].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[17].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[18].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[19].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[20].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[21].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[22].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[23].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[24].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[25].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[26].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[27].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[9].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16945.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[10].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[11].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[12].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[13].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[14].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[15].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[16].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[17].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[18].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[19].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[20].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[21].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[22].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[23].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[24].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[25].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[26].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[27].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[9].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17215.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[10].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[11].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[12].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[13].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[14].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[15].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[16].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[17].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[18].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[19].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[20].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[21].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[22].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[23].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[24].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[25].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[26].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[27].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[9].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$21329.slice[0].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[12].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[12].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[12].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[12].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10506.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10509.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10512.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10515.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[10].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[11].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[12].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[13].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[14].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[15].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[16].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[17].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[18].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[19].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[20].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[21].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[22].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[23].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[24].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[25].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[26].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[27].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[28].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[29].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[30].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[31].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[7].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[8].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[9].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10521.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10524.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10527.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10530.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10536.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10539.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10542.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10545.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10548.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10551.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10554.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10557.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10560.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10563.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10566.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10569.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10572.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10575.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10578.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10581.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10584.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10587.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10590.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10593.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10596.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$13204.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$14431.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$14441.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[28].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[28].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17215.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$20880.slice[28].adder back to logic.

16.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1017 debug messages>

16.31.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~258 debug messages>
Removed a total of 86 cells.

16.31.10. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 23 unused cells and 230 unused wires.
<suppressed ~24 debug messages>

16.31.12. Rerunning OPT passes. (Removed registers in this run.)

16.31.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10306.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10328.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10354.slice[1].carry: CO=$auto$alumacc.cc:474:replace_alu$10354.BB [1]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10530.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$15598.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16784.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[28].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16945.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[28].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[28].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$21329.slice[1].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10530.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[29].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[29].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$20880.slice[29].adder back to logic.

16.31.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~139 debug messages>

16.31.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

16.31.16. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 15 unused cells and 40 unused wires.
<suppressed ~16 debug messages>

16.31.18. Rerunning OPT passes. (Removed registers in this run.)

16.31.19. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10306.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10328.slice[2].carry: CO=$auto$alumacc.cc:474:replace_alu$10317.BB [2]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[2].carry: CO=$auto$alumacc.cc:474:replace_alu$10494.AA [2]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[2].carry: CO=$auto$alumacc.cc:474:replace_alu$10497.AA [2]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[2].carry: CO=$auto$alumacc.cc:474:replace_alu$10500.AA [2]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[2].carry: CO=$auto$alumacc.cc:474:replace_alu$10503.AA [2]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$15598.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16784.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[29].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16945.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[29].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[29].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$21329.slice[2].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10494.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10497.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10500.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10503.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$15598.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16784.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[30].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16945.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[30].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$20880.slice[30].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$21329.slice[3].adder back to logic.

16.31.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~155 debug messages>

16.31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

16.31.22. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 19 unused cells and 39 unused wires.
<suppressed ~20 debug messages>

16.31.24. Rerunning OPT passes. (Removed registers in this run.)

16.31.25. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10306.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[3].carry: CO=$auto$alumacc.cc:474:replace_alu$10397.BB [3]
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[30].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[30].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$20880.slice[30].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10518.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[31].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[31].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$20880.slice[31].adder back to logic.

16.31.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~65 debug messages>

16.31.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

16.31.28. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 11 unused cells and 18 unused wires.
<suppressed ~12 debug messages>

16.31.30. Rerunning OPT passes. (Removed registers in this run.)

16.31.31. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10306.slice[4].carry: CO=$auto$alumacc.cc:474:replace_alu$10295.BB [4]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[4].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[4].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[4].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[4].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[31].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[31].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[32].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[32].adder back to logic.

16.31.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~34 debug messages>

16.31.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

16.31.34. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 10 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

16.31.36. Rerunning OPT passes. (Removed registers in this run.)

16.31.37. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[5].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[5].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[5].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[5].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[32].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[32].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[33].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[33].adder back to logic.

16.31.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~34 debug messages>

16.31.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

16.31.40. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 10 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

16.31.42. Rerunning OPT passes. (Removed registers in this run.)

16.31.43. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[6].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[6].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[6].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[6].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[33].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[33].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[34].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[34].adder back to logic.

16.31.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~34 debug messages>

16.31.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

16.31.46. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 10 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

16.31.48. Rerunning OPT passes. (Removed registers in this run.)

16.31.49. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[7].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[7].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[7].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[7].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[34].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[34].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[35].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[35].adder back to logic.

16.31.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~34 debug messages>

16.31.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

16.31.52. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 10 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

16.31.54. Rerunning OPT passes. (Removed registers in this run.)

16.31.55. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[8].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[8].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[8].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[8].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$16932.slice[35].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$maccmap.cc:240:synth$17093.slice[35].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$16932.slice[36].adder back to logic.
Mapping SB_LUT4 cell top.$auto$maccmap.cc:240:synth$17093.slice[36].adder back to logic.

16.31.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~38 debug messages>

16.31.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

16.31.58. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 10 unused cells and 8 unused wires.
<suppressed ~11 debug messages>

16.31.60. Rerunning OPT passes. (Removed registers in this run.)

16.31.61. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[9].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[9].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[9].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[9].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[9].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[9].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[9].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[9].carry: CO=1'0

16.31.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.64. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.66. Rerunning OPT passes. (Removed registers in this run.)

16.31.67. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[10].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[10].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[10].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[10].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[10].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[10].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[10].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[10].carry: CO=1'0

16.31.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.70. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.72. Rerunning OPT passes. (Removed registers in this run.)

16.31.73. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10454.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10402.BB [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10461.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10415.BB [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10468.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10428.BB [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10475.slice[11].carry: CO=$auto$alumacc.cc:474:replace_alu$10441.BB [11]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[11].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[11].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[11].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[11].carry: CO=1'0

16.31.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.76. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.78. Rerunning OPT passes. (Removed registers in this run.)

16.31.79. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[12].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[12].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[12].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[12].carry: CO=1'0

16.31.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.81. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.82. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.84. Rerunning OPT passes. (Removed registers in this run.)

16.31.85. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[13].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[13].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[13].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[13].carry: CO=1'0

16.31.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.88. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.90. Rerunning OPT passes. (Removed registers in this run.)

16.31.91. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[14].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[14].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[14].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[14].carry: CO=1'0

16.31.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.94. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.96. Rerunning OPT passes. (Removed registers in this run.)

16.31.97. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[15].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[15].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[15].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[15].carry: CO=1'0

16.31.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.100. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.102. Rerunning OPT passes. (Removed registers in this run.)

16.31.103. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[16].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[16].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[16].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[16].carry: CO=1'0

16.31.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

16.31.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.106. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 0 unused wires.
<suppressed ~8 debug messages>

16.31.108. Rerunning OPT passes. (Removed registers in this run.)

16.31.109. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[17].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[17].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[17].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[17].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[18].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[18].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[18].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[18].adder back to logic.

16.31.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~64 debug messages>

16.31.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.112. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 12 unused cells and 16 unused wires.
<suppressed ~13 debug messages>

16.31.114. Rerunning OPT passes. (Removed registers in this run.)

16.31.115. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[18].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[18].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[18].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[18].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[19].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[19].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[19].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[19].adder back to logic.

16.31.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~64 debug messages>

16.31.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.118. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.120. Rerunning OPT passes. (Removed registers in this run.)

16.31.121. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[19].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[19].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[19].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[19].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[20].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[20].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[20].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[20].adder back to logic.

16.31.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.124. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.126. Rerunning OPT passes. (Removed registers in this run.)

16.31.127. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[20].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[20].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[20].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[20].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[21].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[21].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[21].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[21].adder back to logic.

16.31.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.130. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.132. Rerunning OPT passes. (Removed registers in this run.)

16.31.133. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[21].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[21].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[21].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[21].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[22].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[22].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[22].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[22].adder back to logic.

16.31.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.135. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.136. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.137. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.138. Rerunning OPT passes. (Removed registers in this run.)

16.31.139. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[22].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[22].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[22].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[22].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[23].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[23].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[23].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[23].adder back to logic.

16.31.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.142. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.143. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.144. Rerunning OPT passes. (Removed registers in this run.)

16.31.145. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[23].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[23].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[23].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[23].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[24].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[24].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[24].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[24].adder back to logic.

16.31.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.148. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.149. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.150. Rerunning OPT passes. (Removed registers in this run.)

16.31.151. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[24].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[24].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[24].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[24].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[25].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[25].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[25].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[25].adder back to logic.

16.31.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.154. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.155. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.156. Rerunning OPT passes. (Removed registers in this run.)

16.31.157. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[25].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[25].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[25].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[25].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[26].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[26].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[26].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[26].adder back to logic.

16.31.158. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.159. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.160. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.162. Rerunning OPT passes. (Removed registers in this run.)

16.31.163. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[26].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[26].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[26].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[26].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[27].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[27].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[27].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[27].adder back to logic.

16.31.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.166. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

16.31.168. Rerunning OPT passes. (Removed registers in this run.)

16.31.169. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[27].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[27].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[27].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[27].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[28].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[28].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[28].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[28].adder back to logic.

16.31.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

16.31.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.172. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.173. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

16.31.174. Rerunning OPT passes. (Removed registers in this run.)

16.31.175. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[28].carry: CO=\flight_core.mixedThrottle[0] [28]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[28].carry: CO=\flight_core.mixedThrottle[1] [28]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[28].carry: CO=\flight_core.mixedThrottle[2] [28]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[28].carry: CO=\flight_core.mixedThrottle[3] [28]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10482.slice[29].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10485.slice[29].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10488.slice[29].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$10491.slice[29].adder back to logic.

16.31.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~52 debug messages>

16.31.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.178. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.179. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

16.31.180. Rerunning OPT passes. (Removed registers in this run.)

16.31.181. Running ICE40 specific optimizations.

16.31.182. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.31.183. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.31.184. Executing OPT_RMDFF pass (remove dff with constant values).

16.31.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.31.186. Finished OPT passes. (There is nothing left to do.)

16.32. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

16.33. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11134 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [0] -> \flight_core.motorThrottle[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11135 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [1] -> \flight_core.motorThrottle[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11136 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [2] -> \flight_core.motorThrottle[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11137 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [3] -> \flight_core.motorThrottle[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11138 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [4] -> \flight_core.motorThrottle[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11139 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [5] -> \flight_core.motorThrottle[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11140 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [6] -> \flight_core.motorThrottle[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11141 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [7] -> \flight_core.motorThrottle[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11142 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [8] -> \flight_core.motorThrottle[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11143 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [9] -> \flight_core.motorThrottle[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11144 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [10] -> \flight_core.motorThrottle[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11145 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [11] -> \flight_core.motorThrottle[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11146 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [12] -> \flight_core.motorThrottle[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11147 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [13] -> \flight_core.motorThrottle[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11148 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [14] -> \flight_core.motorThrottle[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11149 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [15] -> \flight_core.motorThrottle[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11150 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [16] -> \flight_core.motorThrottle[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11151 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [17] -> \flight_core.motorThrottle[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11152 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [18] -> \flight_core.motorThrottle[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11153 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [19] -> \flight_core.motorThrottle[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11154 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [20] -> \flight_core.motorThrottle[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11155 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [21] -> \flight_core.motorThrottle[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11156 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [22] -> \flight_core.motorThrottle[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11157 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [23] -> \flight_core.motorThrottle[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11158 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [24] -> \flight_core.motorThrottle[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11159 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [25] -> \flight_core.motorThrottle[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11160 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [26] -> \flight_core.motorThrottle[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11161 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [27] -> \flight_core.motorThrottle[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11162 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [28] -> \flight_core.motorThrottle[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11163 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [29] -> \flight_core.motorThrottle[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11164 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [30] -> \flight_core.motorThrottle[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11165 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8600.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [31] -> \flight_core.motorThrottle[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11166 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [0] -> \flight_core.motorThrottle[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11167 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [1] -> \flight_core.motorThrottle[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11168 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [2] -> \flight_core.motorThrottle[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11169 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [3] -> \flight_core.motorThrottle[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11170 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [4] -> \flight_core.motorThrottle[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11171 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [5] -> \flight_core.motorThrottle[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11172 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [6] -> \flight_core.motorThrottle[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11173 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [7] -> \flight_core.motorThrottle[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11174 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [8] -> \flight_core.motorThrottle[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11175 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [9] -> \flight_core.motorThrottle[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11176 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [10] -> \flight_core.motorThrottle[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11177 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [11] -> \flight_core.motorThrottle[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11178 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [12] -> \flight_core.motorThrottle[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11179 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [13] -> \flight_core.motorThrottle[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11180 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [14] -> \flight_core.motorThrottle[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11181 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [15] -> \flight_core.motorThrottle[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11182 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [16] -> \flight_core.motorThrottle[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11183 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [17] -> \flight_core.motorThrottle[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11184 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [18] -> \flight_core.motorThrottle[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11185 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [19] -> \flight_core.motorThrottle[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11186 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [20] -> \flight_core.motorThrottle[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11187 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [21] -> \flight_core.motorThrottle[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11188 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [22] -> \flight_core.motorThrottle[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11189 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [23] -> \flight_core.motorThrottle[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11190 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [24] -> \flight_core.motorThrottle[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11191 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [25] -> \flight_core.motorThrottle[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11192 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [26] -> \flight_core.motorThrottle[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11193 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [27] -> \flight_core.motorThrottle[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11194 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [28] -> \flight_core.motorThrottle[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11195 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [29] -> \flight_core.motorThrottle[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11196 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [30] -> \flight_core.motorThrottle[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11197 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8606.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [31] -> \flight_core.motorThrottle[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11198 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [0] -> \flight_core.motorThrottle[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11199 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [1] -> \flight_core.motorThrottle[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11200 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [2] -> \flight_core.motorThrottle[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11201 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [3] -> \flight_core.motorThrottle[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11202 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [4] -> \flight_core.motorThrottle[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11203 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [5] -> \flight_core.motorThrottle[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11204 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [6] -> \flight_core.motorThrottle[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11205 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [7] -> \flight_core.motorThrottle[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11206 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [8] -> \flight_core.motorThrottle[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11207 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [9] -> \flight_core.motorThrottle[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11208 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [10] -> \flight_core.motorThrottle[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11209 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [11] -> \flight_core.motorThrottle[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11210 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [12] -> \flight_core.motorThrottle[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11211 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [13] -> \flight_core.motorThrottle[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11212 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [14] -> \flight_core.motorThrottle[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11213 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [15] -> \flight_core.motorThrottle[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11214 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [16] -> \flight_core.motorThrottle[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11215 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [17] -> \flight_core.motorThrottle[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11216 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [18] -> \flight_core.motorThrottle[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11217 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [19] -> \flight_core.motorThrottle[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11218 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [20] -> \flight_core.motorThrottle[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11219 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [21] -> \flight_core.motorThrottle[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11220 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [22] -> \flight_core.motorThrottle[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11221 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [23] -> \flight_core.motorThrottle[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11222 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [24] -> \flight_core.motorThrottle[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11223 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [25] -> \flight_core.motorThrottle[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11224 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [26] -> \flight_core.motorThrottle[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11225 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [27] -> \flight_core.motorThrottle[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11226 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [28] -> \flight_core.motorThrottle[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11227 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [29] -> \flight_core.motorThrottle[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11228 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [30] -> \flight_core.motorThrottle[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11229 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8612.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [31] -> \flight_core.motorThrottle[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11230 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [0] -> \flight_core.motorThrottle[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11231 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [1] -> \flight_core.motorThrottle[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11232 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [2] -> \flight_core.motorThrottle[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11233 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [3] -> \flight_core.motorThrottle[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11234 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [4] -> \flight_core.motorThrottle[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11235 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [5] -> \flight_core.motorThrottle[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11236 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [6] -> \flight_core.motorThrottle[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11237 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [7] -> \flight_core.motorThrottle[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11238 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [8] -> \flight_core.motorThrottle[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11239 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [9] -> \flight_core.motorThrottle[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11240 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [10] -> \flight_core.motorThrottle[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11241 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [11] -> \flight_core.motorThrottle[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11242 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [12] -> \flight_core.motorThrottle[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11243 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [13] -> \flight_core.motorThrottle[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11244 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [14] -> \flight_core.motorThrottle[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11245 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [15] -> \flight_core.motorThrottle[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11246 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [16] -> \flight_core.motorThrottle[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11247 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [17] -> \flight_core.motorThrottle[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11248 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [18] -> \flight_core.motorThrottle[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11249 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [19] -> \flight_core.motorThrottle[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11250 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [20] -> \flight_core.motorThrottle[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11251 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [21] -> \flight_core.motorThrottle[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11252 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [22] -> \flight_core.motorThrottle[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11253 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [23] -> \flight_core.motorThrottle[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11254 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [24] -> \flight_core.motorThrottle[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11255 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [25] -> \flight_core.motorThrottle[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11256 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [26] -> \flight_core.motorThrottle[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11257 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [27] -> \flight_core.motorThrottle[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11258 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [28] -> \flight_core.motorThrottle[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11259 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [29] -> \flight_core.motorThrottle[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11260 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [30] -> \flight_core.motorThrottle[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11261 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8618.$ternary$/usr/bin/../share/yosys/techmap.v:445$13064_Y [31] -> \flight_core.motorThrottle[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11262 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [0] -> \flight_core.inputs[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11263 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [1] -> \flight_core.inputs[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11264 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [2] -> \flight_core.inputs[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11265 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [3] -> \flight_core.inputs[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11266 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [4] -> \flight_core.inputs[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11267 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [5] -> \flight_core.inputs[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11268 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [6] -> \flight_core.inputs[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11269 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [7] -> \flight_core.inputs[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11270 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [8] -> \flight_core.inputs[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11271 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [9] -> \flight_core.inputs[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11272 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [10] -> \flight_core.inputs[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11273 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [11] -> \flight_core.inputs[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11274 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [12] -> \flight_core.inputs[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11275 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [13] -> \flight_core.inputs[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11276 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [14] -> \flight_core.inputs[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11277 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [15] -> \flight_core.inputs[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11278 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [16] -> \flight_core.inputs[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11279 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [17] -> \flight_core.inputs[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11280 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [18] -> \flight_core.inputs[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11281 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [19] -> \flight_core.inputs[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11282 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [20] -> \flight_core.inputs[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11283 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [21] -> \flight_core.inputs[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11284 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [22] -> \flight_core.inputs[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11285 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [23] -> \flight_core.inputs[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11286 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [24] -> \flight_core.inputs[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11287 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [25] -> \flight_core.inputs[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11288 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [26] -> \flight_core.inputs[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11289 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [27] -> \flight_core.inputs[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11290 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [28] -> \flight_core.inputs[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11291 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [29] -> \flight_core.inputs[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11292 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [30] -> \flight_core.inputs[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11293 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[3][31:0] [31] -> \flight_core.inputs[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11294 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [0] -> \flight_core.inputs[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11295 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [1] -> \flight_core.inputs[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11296 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [2] -> \flight_core.inputs[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11297 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [3] -> \flight_core.inputs[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11298 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [4] -> \flight_core.inputs[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11299 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [5] -> \flight_core.inputs[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11300 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [6] -> \flight_core.inputs[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11301 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [7] -> \flight_core.inputs[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11302 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [8] -> \flight_core.inputs[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11303 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [9] -> \flight_core.inputs[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11304 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [10] -> \flight_core.inputs[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11305 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [11] -> \flight_core.inputs[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11306 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [12] -> \flight_core.inputs[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11307 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [13] -> \flight_core.inputs[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11308 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [14] -> \flight_core.inputs[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11309 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [15] -> \flight_core.inputs[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11310 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [16] -> \flight_core.inputs[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11311 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [17] -> \flight_core.inputs[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11312 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [18] -> \flight_core.inputs[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11313 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [19] -> \flight_core.inputs[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11314 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [20] -> \flight_core.inputs[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11315 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [21] -> \flight_core.inputs[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11316 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [22] -> \flight_core.inputs[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11317 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [23] -> \flight_core.inputs[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11318 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [24] -> \flight_core.inputs[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11319 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [25] -> \flight_core.inputs[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11320 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [26] -> \flight_core.inputs[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11321 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [27] -> \flight_core.inputs[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11322 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [28] -> \flight_core.inputs[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11323 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [29] -> \flight_core.inputs[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11324 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [30] -> \flight_core.inputs[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11325 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[2][31:0] [31] -> \flight_core.inputs[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11326 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [0] -> \flight_core.inputs[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11327 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [1] -> \flight_core.inputs[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11328 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [2] -> \flight_core.inputs[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11329 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [3] -> \flight_core.inputs[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11330 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [4] -> \flight_core.inputs[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11331 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [5] -> \flight_core.inputs[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11332 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [6] -> \flight_core.inputs[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11333 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [7] -> \flight_core.inputs[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11334 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [8] -> \flight_core.inputs[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11335 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [9] -> \flight_core.inputs[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11336 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [10] -> \flight_core.inputs[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11337 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [11] -> \flight_core.inputs[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11338 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [12] -> \flight_core.inputs[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11339 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [13] -> \flight_core.inputs[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11340 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [14] -> \flight_core.inputs[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11341 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [15] -> \flight_core.inputs[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11342 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [16] -> \flight_core.inputs[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11343 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [17] -> \flight_core.inputs[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11344 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [18] -> \flight_core.inputs[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11345 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [19] -> \flight_core.inputs[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11346 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [20] -> \flight_core.inputs[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11347 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [21] -> \flight_core.inputs[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11348 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [22] -> \flight_core.inputs[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11349 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [23] -> \flight_core.inputs[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11350 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [24] -> \flight_core.inputs[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11351 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [25] -> \flight_core.inputs[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11352 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [26] -> \flight_core.inputs[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11353 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [27] -> \flight_core.inputs[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11354 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [28] -> \flight_core.inputs[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11355 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [29] -> \flight_core.inputs[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11356 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [30] -> \flight_core.inputs[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11357 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[1][31:0] [31] -> \flight_core.inputs[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11358 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [0] -> \flight_core.inputs[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11359 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [1] -> \flight_core.inputs[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11360 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [2] -> \flight_core.inputs[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11361 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [3] -> \flight_core.inputs[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11362 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [4] -> \flight_core.inputs[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11363 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [5] -> \flight_core.inputs[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11364 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [6] -> \flight_core.inputs[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11365 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [7] -> \flight_core.inputs[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11366 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [8] -> \flight_core.inputs[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11367 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [9] -> \flight_core.inputs[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11368 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [10] -> \flight_core.inputs[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11369 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [11] -> \flight_core.inputs[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11370 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [12] -> \flight_core.inputs[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11371 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [13] -> \flight_core.inputs[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11372 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [14] -> \flight_core.inputs[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11373 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [15] -> \flight_core.inputs[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11374 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [16] -> \flight_core.inputs[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11375 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [17] -> \flight_core.inputs[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11376 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [18] -> \flight_core.inputs[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11377 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [19] -> \flight_core.inputs[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11378 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [20] -> \flight_core.inputs[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11379 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [21] -> \flight_core.inputs[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11380 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [22] -> \flight_core.inputs[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11381 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [23] -> \flight_core.inputs[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11382 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [24] -> \flight_core.inputs[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11383 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [25] -> \flight_core.inputs[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11384 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [26] -> \flight_core.inputs[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11385 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [27] -> \flight_core.inputs[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11386 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [28] -> \flight_core.inputs[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11387 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [29] -> \flight_core.inputs[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11388 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [30] -> \flight_core.inputs[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11389 to $_DFFE_PP_ for $techmap\flight_core.$0\inputs[0][31:0] [31] -> \flight_core.inputs[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11390 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [0] -> \flight_core.setpoint[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11391 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [1] -> \flight_core.setpoint[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11392 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [2] -> \flight_core.setpoint[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11393 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [3] -> \flight_core.setpoint[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11394 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [4] -> \flight_core.setpoint[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11395 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [5] -> \flight_core.setpoint[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11396 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [6] -> \flight_core.setpoint[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11397 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [7] -> \flight_core.setpoint[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11398 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [8] -> \flight_core.setpoint[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11399 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [9] -> \flight_core.setpoint[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11400 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [10] -> \flight_core.setpoint[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11401 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [11] -> \flight_core.setpoint[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11402 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [12] -> \flight_core.setpoint[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11403 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [13] -> \flight_core.setpoint[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11404 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [14] -> \flight_core.setpoint[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11405 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [15] -> \flight_core.setpoint[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11406 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [16] -> \flight_core.setpoint[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11407 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [17] -> \flight_core.setpoint[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11408 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [18] -> \flight_core.setpoint[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11409 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [19] -> \flight_core.setpoint[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11410 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [20] -> \flight_core.setpoint[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11411 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [21] -> \flight_core.setpoint[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11412 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [22] -> \flight_core.setpoint[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11413 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [23] -> \flight_core.setpoint[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11414 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [24] -> \flight_core.setpoint[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11415 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [25] -> \flight_core.setpoint[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11416 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [26] -> \flight_core.setpoint[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11417 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [27] -> \flight_core.setpoint[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11418 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [28] -> \flight_core.setpoint[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11419 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [29] -> \flight_core.setpoint[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11420 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [30] -> \flight_core.setpoint[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11421 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[3][31:0] [31] -> \flight_core.setpoint[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11422 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [0] -> \flight_core.setpoint[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11423 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [1] -> \flight_core.setpoint[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11424 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [2] -> \flight_core.setpoint[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11425 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [3] -> \flight_core.setpoint[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11426 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [4] -> \flight_core.setpoint[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11427 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [5] -> \flight_core.setpoint[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11428 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [6] -> \flight_core.setpoint[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11429 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [7] -> \flight_core.setpoint[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11430 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [8] -> \flight_core.setpoint[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11431 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [9] -> \flight_core.setpoint[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11432 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [10] -> \flight_core.setpoint[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11433 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [11] -> \flight_core.setpoint[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11434 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [12] -> \flight_core.setpoint[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11435 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [13] -> \flight_core.setpoint[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11436 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [14] -> \flight_core.setpoint[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11437 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [15] -> \flight_core.setpoint[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11438 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [16] -> \flight_core.setpoint[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11439 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [17] -> \flight_core.setpoint[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11440 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [18] -> \flight_core.setpoint[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11441 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [19] -> \flight_core.setpoint[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11442 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [20] -> \flight_core.setpoint[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11443 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [21] -> \flight_core.setpoint[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11444 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [22] -> \flight_core.setpoint[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11445 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [23] -> \flight_core.setpoint[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11446 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [24] -> \flight_core.setpoint[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11447 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [25] -> \flight_core.setpoint[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11448 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [26] -> \flight_core.setpoint[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11449 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [27] -> \flight_core.setpoint[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11450 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [28] -> \flight_core.setpoint[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11451 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [29] -> \flight_core.setpoint[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11452 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [30] -> \flight_core.setpoint[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11453 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[2][31:0] [31] -> \flight_core.setpoint[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11454 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [0] -> \flight_core.setpoint[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11455 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [1] -> \flight_core.setpoint[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11456 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [2] -> \flight_core.setpoint[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11457 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [3] -> \flight_core.setpoint[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11458 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [4] -> \flight_core.setpoint[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11459 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [5] -> \flight_core.setpoint[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11460 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [6] -> \flight_core.setpoint[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11461 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [7] -> \flight_core.setpoint[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11462 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [8] -> \flight_core.setpoint[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11463 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [9] -> \flight_core.setpoint[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11464 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [10] -> \flight_core.setpoint[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11465 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [11] -> \flight_core.setpoint[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11466 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [12] -> \flight_core.setpoint[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11467 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [13] -> \flight_core.setpoint[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11468 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [14] -> \flight_core.setpoint[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11469 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [15] -> \flight_core.setpoint[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11470 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [16] -> \flight_core.setpoint[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11471 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [17] -> \flight_core.setpoint[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11472 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [18] -> \flight_core.setpoint[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11473 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [19] -> \flight_core.setpoint[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11474 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [20] -> \flight_core.setpoint[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11475 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [21] -> \flight_core.setpoint[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11476 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [22] -> \flight_core.setpoint[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11477 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [23] -> \flight_core.setpoint[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11478 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [24] -> \flight_core.setpoint[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11479 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [25] -> \flight_core.setpoint[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11480 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [26] -> \flight_core.setpoint[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11481 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [27] -> \flight_core.setpoint[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11482 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [28] -> \flight_core.setpoint[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11483 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [29] -> \flight_core.setpoint[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11484 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [30] -> \flight_core.setpoint[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11485 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[1][31:0] [31] -> \flight_core.setpoint[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11486 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [0] -> \flight_core.setpoint[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11487 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [1] -> \flight_core.setpoint[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11488 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [2] -> \flight_core.setpoint[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11489 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [3] -> \flight_core.setpoint[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11490 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [4] -> \flight_core.setpoint[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11491 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [5] -> \flight_core.setpoint[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11492 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [6] -> \flight_core.setpoint[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11493 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [7] -> \flight_core.setpoint[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11494 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [8] -> \flight_core.setpoint[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11495 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [9] -> \flight_core.setpoint[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11496 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [10] -> \flight_core.setpoint[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11497 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [11] -> \flight_core.setpoint[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11498 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [12] -> \flight_core.setpoint[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11499 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [13] -> \flight_core.setpoint[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11500 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [14] -> \flight_core.setpoint[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11501 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [15] -> \flight_core.setpoint[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11502 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [16] -> \flight_core.setpoint[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11503 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [17] -> \flight_core.setpoint[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11504 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [18] -> \flight_core.setpoint[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11505 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [19] -> \flight_core.setpoint[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11506 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [20] -> \flight_core.setpoint[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11507 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [21] -> \flight_core.setpoint[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11508 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [22] -> \flight_core.setpoint[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11509 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [23] -> \flight_core.setpoint[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11510 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [24] -> \flight_core.setpoint[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11511 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [25] -> \flight_core.setpoint[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11512 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [26] -> \flight_core.setpoint[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11513 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [27] -> \flight_core.setpoint[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11514 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [28] -> \flight_core.setpoint[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11515 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [29] -> \flight_core.setpoint[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11516 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [30] -> \flight_core.setpoint[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11517 to $_DFFE_PP_ for $techmap\flight_core.$0\setpoint[0][31:0] [31] -> \flight_core.setpoint[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11518 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [0] -> \flight_core.gyro_rates_sampled[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11519 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [1] -> \flight_core.gyro_rates_sampled[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11520 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [2] -> \flight_core.gyro_rates_sampled[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11521 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [3] -> \flight_core.gyro_rates_sampled[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11522 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [4] -> \flight_core.gyro_rates_sampled[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11523 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [5] -> \flight_core.gyro_rates_sampled[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11524 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [6] -> \flight_core.gyro_rates_sampled[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11525 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [7] -> \flight_core.gyro_rates_sampled[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11526 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [8] -> \flight_core.gyro_rates_sampled[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11527 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [9] -> \flight_core.gyro_rates_sampled[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11528 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [10] -> \flight_core.gyro_rates_sampled[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11529 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [11] -> \flight_core.gyro_rates_sampled[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11530 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [12] -> \flight_core.gyro_rates_sampled[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11531 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [13] -> \flight_core.gyro_rates_sampled[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11532 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [14] -> \flight_core.gyro_rates_sampled[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11533 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [15] -> \flight_core.gyro_rates_sampled[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11534 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [16] -> \flight_core.gyro_rates_sampled[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11535 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [17] -> \flight_core.gyro_rates_sampled[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11536 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [18] -> \flight_core.gyro_rates_sampled[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11537 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [19] -> \flight_core.gyro_rates_sampled[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11538 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [20] -> \flight_core.gyro_rates_sampled[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11539 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [21] -> \flight_core.gyro_rates_sampled[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11540 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [22] -> \flight_core.gyro_rates_sampled[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11541 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [23] -> \flight_core.gyro_rates_sampled[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11542 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [24] -> \flight_core.gyro_rates_sampled[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11543 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [25] -> \flight_core.gyro_rates_sampled[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11544 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [26] -> \flight_core.gyro_rates_sampled[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11545 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [27] -> \flight_core.gyro_rates_sampled[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11546 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [28] -> \flight_core.gyro_rates_sampled[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11547 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [29] -> \flight_core.gyro_rates_sampled[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11548 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [30] -> \flight_core.gyro_rates_sampled[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11549 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[2][31:0] [31] -> \flight_core.gyro_rates_sampled[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11550 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [0] -> \flight_core.gyro_rates_sampled[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11551 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [1] -> \flight_core.gyro_rates_sampled[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11552 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [2] -> \flight_core.gyro_rates_sampled[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11553 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [3] -> \flight_core.gyro_rates_sampled[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11554 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [4] -> \flight_core.gyro_rates_sampled[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11555 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [5] -> \flight_core.gyro_rates_sampled[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11556 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [6] -> \flight_core.gyro_rates_sampled[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11557 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [7] -> \flight_core.gyro_rates_sampled[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11558 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [8] -> \flight_core.gyro_rates_sampled[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11559 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [9] -> \flight_core.gyro_rates_sampled[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11560 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [10] -> \flight_core.gyro_rates_sampled[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11561 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [11] -> \flight_core.gyro_rates_sampled[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11562 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [12] -> \flight_core.gyro_rates_sampled[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11563 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [13] -> \flight_core.gyro_rates_sampled[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11564 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [14] -> \flight_core.gyro_rates_sampled[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11565 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [15] -> \flight_core.gyro_rates_sampled[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11566 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [16] -> \flight_core.gyro_rates_sampled[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11567 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [17] -> \flight_core.gyro_rates_sampled[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11568 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [18] -> \flight_core.gyro_rates_sampled[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11569 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [19] -> \flight_core.gyro_rates_sampled[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11570 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [20] -> \flight_core.gyro_rates_sampled[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11571 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [21] -> \flight_core.gyro_rates_sampled[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11572 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [22] -> \flight_core.gyro_rates_sampled[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11573 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [23] -> \flight_core.gyro_rates_sampled[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11574 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [24] -> \flight_core.gyro_rates_sampled[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11575 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [25] -> \flight_core.gyro_rates_sampled[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11576 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [26] -> \flight_core.gyro_rates_sampled[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11577 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [27] -> \flight_core.gyro_rates_sampled[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11578 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [28] -> \flight_core.gyro_rates_sampled[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11579 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [29] -> \flight_core.gyro_rates_sampled[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11580 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [30] -> \flight_core.gyro_rates_sampled[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11581 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[1][31:0] [31] -> \flight_core.gyro_rates_sampled[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11582 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [0] -> \flight_core.gyro_rates_sampled[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11583 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [1] -> \flight_core.gyro_rates_sampled[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11584 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [2] -> \flight_core.gyro_rates_sampled[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11585 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [3] -> \flight_core.gyro_rates_sampled[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11586 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [4] -> \flight_core.gyro_rates_sampled[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11587 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [5] -> \flight_core.gyro_rates_sampled[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11588 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [6] -> \flight_core.gyro_rates_sampled[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11589 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [7] -> \flight_core.gyro_rates_sampled[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11590 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [8] -> \flight_core.gyro_rates_sampled[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11591 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [9] -> \flight_core.gyro_rates_sampled[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11592 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [10] -> \flight_core.gyro_rates_sampled[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11593 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [11] -> \flight_core.gyro_rates_sampled[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11594 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [12] -> \flight_core.gyro_rates_sampled[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11595 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [13] -> \flight_core.gyro_rates_sampled[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11596 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [14] -> \flight_core.gyro_rates_sampled[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11597 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [15] -> \flight_core.gyro_rates_sampled[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11598 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [16] -> \flight_core.gyro_rates_sampled[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11599 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [17] -> \flight_core.gyro_rates_sampled[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11600 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [18] -> \flight_core.gyro_rates_sampled[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11601 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [19] -> \flight_core.gyro_rates_sampled[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11602 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [20] -> \flight_core.gyro_rates_sampled[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11603 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [21] -> \flight_core.gyro_rates_sampled[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11604 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [22] -> \flight_core.gyro_rates_sampled[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11605 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [23] -> \flight_core.gyro_rates_sampled[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11606 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [24] -> \flight_core.gyro_rates_sampled[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11607 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [25] -> \flight_core.gyro_rates_sampled[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11608 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [26] -> \flight_core.gyro_rates_sampled[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11609 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [27] -> \flight_core.gyro_rates_sampled[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11610 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [28] -> \flight_core.gyro_rates_sampled[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11611 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [29] -> \flight_core.gyro_rates_sampled[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11612 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [30] -> \flight_core.gyro_rates_sampled[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11613 to $_DFFE_PP_ for $techmap\flight_core.$0\gyro_rates_sampled[0][31:0] [31] -> \flight_core.gyro_rates_sampled[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11614 to $_DFFE_PP_ for $techmap\flight_core.$0\change_update_state[0:0] -> \flight_core.change_update_state.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11615 to $_DFFE_PP_ for $techmap\flight_core.$0\update_attitude[0:0] -> \flight_core.update_attitude.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11624 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [0] -> \flight_core.debugUpdateCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11625 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [1] -> \flight_core.debugUpdateCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11626 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [2] -> \flight_core.debugUpdateCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11627 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [3] -> \flight_core.debugUpdateCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11628 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [4] -> \flight_core.debugUpdateCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11629 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [5] -> \flight_core.debugUpdateCount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11630 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [6] -> \flight_core.debugUpdateCount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11631 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [7] -> \flight_core.debugUpdateCount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11632 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [8] -> \flight_core.debugUpdateCount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11633 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [9] -> \flight_core.debugUpdateCount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11634 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [10] -> \flight_core.debugUpdateCount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11635 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [11] -> \flight_core.debugUpdateCount [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11636 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [12] -> \flight_core.debugUpdateCount [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11637 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [13] -> \flight_core.debugUpdateCount [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11638 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [14] -> \flight_core.debugUpdateCount [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11639 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [15] -> \flight_core.debugUpdateCount [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11640 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [16] -> \flight_core.debugUpdateCount [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11641 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [17] -> \flight_core.debugUpdateCount [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11642 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [18] -> \flight_core.debugUpdateCount [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11643 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [19] -> \flight_core.debugUpdateCount [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11644 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [20] -> \flight_core.debugUpdateCount [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11645 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [21] -> \flight_core.debugUpdateCount [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11646 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [22] -> \flight_core.debugUpdateCount [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11647 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [23] -> \flight_core.debugUpdateCount [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11648 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [24] -> \flight_core.debugUpdateCount [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11649 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [25] -> \flight_core.debugUpdateCount [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11650 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [26] -> \flight_core.debugUpdateCount [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11651 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [27] -> \flight_core.debugUpdateCount [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11652 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [28] -> \flight_core.debugUpdateCount [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11653 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [29] -> \flight_core.debugUpdateCount [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11654 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [30] -> \flight_core.debugUpdateCount [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11655 to $_DFFE_PP_ for $techmap\flight_core.$0\debugUpdateCount[31:0] [31] -> \flight_core.debugUpdateCount [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11666 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [0] -> \flight_core.attitudeUpdateCounter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11667 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [1] -> \flight_core.attitudeUpdateCounter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11668 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [2] -> \flight_core.attitudeUpdateCounter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11669 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [3] -> \flight_core.attitudeUpdateCounter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11670 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [4] -> \flight_core.attitudeUpdateCounter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11671 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [5] -> \flight_core.attitudeUpdateCounter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11672 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [6] -> \flight_core.attitudeUpdateCounter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11673 to $_DFFE_PP_ for $techmap\flight_core.$0\attitudeUpdateCounter[7:0] [7] -> \flight_core.attitudeUpdateCounter [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11674 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [0] -> \flight_core.debug_msg_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11675 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [1] -> \flight_core.debug_msg_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11676 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [2] -> \flight_core.debug_msg_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11677 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [3] -> \flight_core.debug_msg_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11678 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [4] -> \flight_core.debug_msg_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11679 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [5] -> \flight_core.debug_msg_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11680 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [6] -> \flight_core.debug_msg_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11681 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_data[7:0] [7] -> \flight_core.debug_msg_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11682 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [0] -> \flight_core.debug_msg_length [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11683 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [1] -> \flight_core.debug_msg_length [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11684 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [2] -> \flight_core.debug_msg_length [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11685 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [3] -> \flight_core.debug_msg_length [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11686 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [4] -> \flight_core.debug_msg_length [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11687 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [5] -> \flight_core.debug_msg_length [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11688 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [6] -> \flight_core.debug_msg_length [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11689 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_length[7:0] [7] -> \flight_core.debug_msg_length [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11690 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [0] -> \flight_core.debug_msg_type [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11691 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [1] -> \flight_core.debug_msg_type [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11692 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [2] -> \flight_core.debug_msg_type [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11693 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [3] -> \flight_core.debug_msg_type [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11694 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [4] -> \flight_core.debug_msg_type [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11695 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [5] -> \flight_core.debug_msg_type [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11696 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [6] -> \flight_core.debug_msg_type [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11697 to $_DFFE_PP_ for $techmap\flight_core.$0\debug_msg_type[7:0] [7] -> \flight_core.debug_msg_type [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11698 to $_DFFE_PP_ for $techmap$techmap\flight_core.$procmux$8882.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.debug_msg_send.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11699 to $_DFFE_PP_ for $techmap\flight_core.$0\motor_send[0:0] -> \flight_core.motor_send.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13591 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [0] -> \flight_core.fport_decode.packet_data_read [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13592 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [1] -> \flight_core.fport_decode.packet_data_read [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13593 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [2] -> \flight_core.fport_decode.packet_data_read [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13594 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [3] -> \flight_core.fport_decode.packet_data_read [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13595 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [4] -> \flight_core.fport_decode.packet_data_read [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13596 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [5] -> \flight_core.fport_decode.packet_data_read [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13597 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [6] -> \flight_core.fport_decode.packet_data_read [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13598 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9670.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [7] -> \flight_core.fport_decode.packet_data_read [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13599 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9305.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxDataReady.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13600 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9249.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [0] -> \flight_core.control_rx.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13601 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9249.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [1] -> \flight_core.control_rx.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13602 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9249.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [2] -> \flight_core.control_rx.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13603 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9249.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [3] -> \flight_core.control_rx.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13604 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9279.$ternary$/usr/bin/../share/yosys/techmap.v:445$13652_Y [0] -> \flight_core.control_rx.bitCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13605 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9279.$ternary$/usr/bin/../share/yosys/techmap.v:445$13652_Y [1] -> \flight_core.control_rx.bitCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13606 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9279.$ternary$/usr/bin/../share/yosys/techmap.v:445$13652_Y [2] -> \flight_core.control_rx.bitCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13607 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9279.$ternary$/usr/bin/../share/yosys/techmap.v:445$13652_Y [3] -> \flight_core.control_rx.bitCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13608 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9279.$ternary$/usr/bin/../share/yosys/techmap.v:445$13652_Y [4] -> \flight_core.control_rx.bitCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13609 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [0] -> \flight_core.control_rx.timerCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13610 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [1] -> \flight_core.control_rx.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13611 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [2] -> \flight_core.control_rx.timerCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13612 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [3] -> \flight_core.control_rx.timerCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13613 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [4] -> \flight_core.control_rx.timerCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13614 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [5] -> \flight_core.control_rx.timerCount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13615 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [6] -> \flight_core.control_rx.timerCount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13616 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9290.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [7] -> \flight_core.control_rx.timerCount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13617 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9243.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13618 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9221.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13619 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9200.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13620 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9180.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13621 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9161.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13622 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9143.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13623 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9126.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13624 to $_DFFE_PP_ for $techmap$techmap\flight_core.control_rx.$procmux$9110.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.control_rx.rxData [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14447 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\waitDelay[3:0] [0] -> \flight_core.fport_decode.waitDelay [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14448 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\waitDelay[3:0] [1] -> \flight_core.fport_decode.waitDelay [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14449 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\waitDelay[3:0] [2] -> \flight_core.fport_decode.waitDelay [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14450 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\waitDelay[3:0] [3] -> \flight_core.fport_decode.waitDelay [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14483 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [0] -> \flight_core.fport_decode.packet_len [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14484 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [1] -> \flight_core.fport_decode.packet_len [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14485 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [2] -> \flight_core.fport_decode.packet_len [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14486 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [3] -> \flight_core.fport_decode.packet_len [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14487 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [4] -> \flight_core.fport_decode.packet_len [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14488 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [5] -> \flight_core.fport_decode.packet_len [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14489 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [6] -> \flight_core.fport_decode.packet_len [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14490 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9557.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [7] -> \flight_core.fport_decode.packet_len [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14500 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [0] -> \flight_core.fport_decode.controls3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14501 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [1] -> \flight_core.fport_decode.controls3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14502 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [2] -> \flight_core.fport_decode.controls3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14503 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [3] -> \flight_core.fport_decode.controls3 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14504 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [4] -> \flight_core.fport_decode.controls3 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14505 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [5] -> \flight_core.fport_decode.controls3 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14506 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [6] -> \flight_core.fport_decode.controls3 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14507 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [7] -> \flight_core.fport_decode.controls3 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14508 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [8] -> \flight_core.fport_decode.controls3 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14509 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [9] -> \flight_core.fport_decode.controls3 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14510 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls3[10:0] [10] -> \flight_core.fport_decode.controls3 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14511 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [0] -> \flight_core.fport_decode.controls2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14512 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [1] -> \flight_core.fport_decode.controls2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14513 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [2] -> \flight_core.fport_decode.controls2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14514 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [3] -> \flight_core.fport_decode.controls2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14515 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [4] -> \flight_core.fport_decode.controls2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14516 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [5] -> \flight_core.fport_decode.controls2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14517 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [6] -> \flight_core.fport_decode.controls2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14518 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [7] -> \flight_core.fport_decode.controls2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14519 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [8] -> \flight_core.fport_decode.controls2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14520 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [9] -> \flight_core.fport_decode.controls2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14521 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls2[10:0] [10] -> \flight_core.fport_decode.controls2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14522 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [0] -> \flight_core.fport_decode.controls1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14523 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [1] -> \flight_core.fport_decode.controls1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14524 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [2] -> \flight_core.fport_decode.controls1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14525 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [3] -> \flight_core.fport_decode.controls1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14526 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [4] -> \flight_core.fport_decode.controls1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14527 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [5] -> \flight_core.fport_decode.controls1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14528 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [6] -> \flight_core.fport_decode.controls1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14529 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [7] -> \flight_core.fport_decode.controls1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14530 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [8] -> \flight_core.fport_decode.controls1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14531 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [9] -> \flight_core.fport_decode.controls1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14532 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls1[10:0] [10] -> \flight_core.fport_decode.controls1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14533 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [0] -> \flight_core.fport_decode.controls0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14534 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [1] -> \flight_core.fport_decode.controls0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14535 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [2] -> \flight_core.fport_decode.controls0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14536 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [3] -> \flight_core.fport_decode.controls0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14537 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [4] -> \flight_core.fport_decode.controls0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14538 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [5] -> \flight_core.fport_decode.controls0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14539 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [6] -> \flight_core.fport_decode.controls0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14540 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [7] -> \flight_core.fport_decode.controls0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14541 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [8] -> \flight_core.fport_decode.controls0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14542 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [9] -> \flight_core.fport_decode.controls0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14543 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls0[10:0] [10] -> \flight_core.fport_decode.controls0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14544 to $_DFFE_PP_ for $techmap$techmap\flight_core.fport_decode.$procmux$9703.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.fport_decode.controlFrameReady.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14545 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [0] -> \flight_core.fport_decode.controls4 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14546 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [1] -> \flight_core.fport_decode.controls4 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14547 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [2] -> \flight_core.fport_decode.controls4 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14548 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [3] -> \flight_core.fport_decode.controls4 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14549 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [4] -> \flight_core.fport_decode.controls4 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14550 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [5] -> \flight_core.fport_decode.controls4 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14551 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [6] -> \flight_core.fport_decode.controls4 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14552 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [7] -> \flight_core.fport_decode.controls4 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14553 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [8] -> \flight_core.fport_decode.controls4 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14554 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [9] -> \flight_core.fport_decode.controls4 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14555 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.$0\controls4[10:0] [10] -> \flight_core.fport_decode.controls4 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15611 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [0] -> \flight_core.imu.imu_cfg_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15612 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [1] -> \flight_core.imu.imu_cfg_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15613 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [2] -> \flight_core.imu.imu_cfg_state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15614 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [3] -> \flight_core.imu.imu_cfg_state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15615 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [4] -> \flight_core.imu.imu_cfg_state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15616 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [5] -> \flight_core.imu.imu_cfg_state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15617 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [6] -> \flight_core.imu.imu_cfg_state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15618 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\imu_cfg_state[7:0] [7] -> \flight_core.imu.imu_cfg_state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15619 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [0] -> \flight_core.imu.imu_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15620 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [1] -> \flight_core.imu.imu_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15621 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [2] -> \flight_core.imu.imu_state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15622 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [3] -> \flight_core.imu.imu_state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15623 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [4] -> \flight_core.imu.imu_state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15624 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [5] -> \flight_core.imu.imu_state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15625 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [6] -> \flight_core.imu.imu_state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15626 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9001.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [7] -> \flight_core.imu.imu_state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15631 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [4] -> \flight_core.imu.gyroConfigCmdSentCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15632 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [5] -> \flight_core.imu.gyroConfigCmdSentCount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15633 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [6] -> \flight_core.imu.gyroConfigCmdSentCount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15634 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [7] -> \flight_core.imu.gyroConfigCmdSentCount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15635 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [8] -> \flight_core.imu.gyroConfigCmdSentCount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15636 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [9] -> \flight_core.imu.gyroConfigCmdSentCount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15637 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [10] -> \flight_core.imu.gyroConfigCmdSentCount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15638 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [11] -> \flight_core.imu.gyroConfigCmdSentCount [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15639 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [12] -> \flight_core.imu.gyroConfigCmdSentCount [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15640 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [13] -> \flight_core.imu.gyroConfigCmdSentCount [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15641 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [14] -> \flight_core.imu.gyroConfigCmdSentCount [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15642 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroConfigCmdSentCount[15:0] [15] -> \flight_core.imu.gyroConfigCmdSentCount [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15643 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTx[0:0] -> \flight_core.imu.spiRegTx.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15644 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [0] -> \flight_core.imu.spiRegTxData [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15645 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [1] -> \flight_core.imu.spiRegTxData [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15646 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [2] -> \flight_core.imu.spiRegTxData [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15647 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [3] -> \flight_core.imu.spiRegTxData [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15648 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [4] -> \flight_core.imu.spiRegTxData [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15649 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [5] -> \flight_core.imu.spiRegTxData [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15650 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [6] -> \flight_core.imu.spiRegTxData [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15651 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [7] -> \flight_core.imu.spiRegTxData [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15652 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [8] -> \flight_core.imu.spiRegTxData [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15653 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [9] -> \flight_core.imu.spiRegTxData [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15654 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [10] -> \flight_core.imu.spiRegTxData [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15655 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [11] -> \flight_core.imu.spiRegTxData [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15656 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [12] -> \flight_core.imu.spiRegTxData [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15657 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [13] -> \flight_core.imu.spiRegTxData [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15658 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [14] -> \flight_core.imu.spiRegTxData [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15659 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiRegTxData[15:0] [15] -> \flight_core.imu.spiRegTxData [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15660 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTx[0:0] -> \flight_core.imu.spiTx.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15661 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [0] -> \flight_core.imu.spiTxData [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15662 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [1] -> \flight_core.imu.spiTxData [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15663 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [2] -> \flight_core.imu.spiTxData [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15664 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [3] -> \flight_core.imu.spiTxData [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15665 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [4] -> \flight_core.imu.spiTxData [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15666 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [5] -> \flight_core.imu.spiTxData [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15667 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [6] -> \flight_core.imu.spiTxData [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15668 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [7] -> \flight_core.imu.spiTxData [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15669 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [8] -> \flight_core.imu.spiTxData [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15670 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [9] -> \flight_core.imu.spiTxData [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15671 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [10] -> \flight_core.imu.spiTxData [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15672 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [11] -> \flight_core.imu.spiTxData [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15673 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [12] -> \flight_core.imu.spiTxData [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15674 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [13] -> \flight_core.imu.spiTxData [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15675 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [14] -> \flight_core.imu.spiTxData [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15676 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [15] -> \flight_core.imu.spiTxData [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15677 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [16] -> \flight_core.imu.spiTxData [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15678 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [17] -> \flight_core.imu.spiTxData [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15679 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [18] -> \flight_core.imu.spiTxData [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15680 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [19] -> \flight_core.imu.spiTxData [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15681 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [20] -> \flight_core.imu.spiTxData [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15682 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [21] -> \flight_core.imu.spiTxData [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15683 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [22] -> \flight_core.imu.spiTxData [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15684 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [23] -> \flight_core.imu.spiTxData [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15685 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [24] -> \flight_core.imu.spiTxData [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15686 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [25] -> \flight_core.imu.spiTxData [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15687 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [26] -> \flight_core.imu.spiTxData [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15688 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [27] -> \flight_core.imu.spiTxData [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15689 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [28] -> \flight_core.imu.spiTxData [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15690 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [29] -> \flight_core.imu.spiTxData [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15691 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [30] -> \flight_core.imu.spiTxData [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15692 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [31] -> \flight_core.imu.spiTxData [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15693 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [32] -> \flight_core.imu.spiTxData [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15694 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [33] -> \flight_core.imu.spiTxData [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15695 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [34] -> \flight_core.imu.spiTxData [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15696 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [35] -> \flight_core.imu.spiTxData [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15697 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [36] -> \flight_core.imu.spiTxData [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15698 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [37] -> \flight_core.imu.spiTxData [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15699 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [38] -> \flight_core.imu.spiTxData [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15700 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [39] -> \flight_core.imu.spiTxData [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15701 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [40] -> \flight_core.imu.spiTxData [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15702 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [41] -> \flight_core.imu.spiTxData [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15703 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [42] -> \flight_core.imu.spiTxData [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15704 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [43] -> \flight_core.imu.spiTxData [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15705 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [44] -> \flight_core.imu.spiTxData [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15706 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [45] -> \flight_core.imu.spiTxData [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15707 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [46] -> \flight_core.imu.spiTxData [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15708 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [47] -> \flight_core.imu.spiTxData [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15709 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [48] -> \flight_core.imu.spiTxData [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15710 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [49] -> \flight_core.imu.spiTxData [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15711 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [50] -> \flight_core.imu.spiTxData [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15712 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [51] -> \flight_core.imu.spiTxData [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15713 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [52] -> \flight_core.imu.spiTxData [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15714 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [53] -> \flight_core.imu.spiTxData [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15715 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [54] -> \flight_core.imu.spiTxData [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15716 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\spiTxData[55:0] [55] -> \flight_core.imu.spiTxData [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15717 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [0] -> \flight_core.imu.counter1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15718 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [1] -> \flight_core.imu.counter1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15719 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [2] -> \flight_core.imu.counter1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15720 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [3] -> \flight_core.imu.counter1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15721 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [4] -> \flight_core.imu.counter1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15722 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [5] -> \flight_core.imu.counter1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15723 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [6] -> \flight_core.imu.counter1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15724 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [7] -> \flight_core.imu.counter1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15725 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [8] -> \flight_core.imu.counter1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15726 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [9] -> \flight_core.imu.counter1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15727 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [10] -> \flight_core.imu.counter1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15728 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [11] -> \flight_core.imu.counter1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15729 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [12] -> \flight_core.imu.counter1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15730 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [13] -> \flight_core.imu.counter1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15731 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [14] -> \flight_core.imu.counter1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15732 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [15] -> \flight_core.imu.counter1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15733 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [16] -> \flight_core.imu.counter1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15734 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [17] -> \flight_core.imu.counter1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15735 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [18] -> \flight_core.imu.counter1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15736 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [19] -> \flight_core.imu.counter1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15737 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [20] -> \flight_core.imu.counter1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15738 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [21] -> \flight_core.imu.counter1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15739 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [22] -> \flight_core.imu.counter1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15740 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [23] -> \flight_core.imu.counter1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15741 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [24] -> \flight_core.imu.counter1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15742 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [25] -> \flight_core.imu.counter1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15743 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [26] -> \flight_core.imu.counter1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15744 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [27] -> \flight_core.imu.counter1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15745 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [28] -> \flight_core.imu.counter1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15746 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [29] -> \flight_core.imu.counter1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15747 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [30] -> \flight_core.imu.counter1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15748 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$8908.$ternary$/usr/bin/../share/yosys/techmap.v:445$16530_Y [31] -> \flight_core.imu.counter1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15750 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [0] -> \flight_core.imu.rates_raw_yaw [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15751 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [1] -> \flight_core.imu.rates_raw_yaw [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15752 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [2] -> \flight_core.imu.rates_raw_yaw [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15753 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [3] -> \flight_core.imu.rates_raw_yaw [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15754 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [4] -> \flight_core.imu.rates_raw_yaw [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15755 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [5] -> \flight_core.imu.rates_raw_yaw [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15756 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [6] -> \flight_core.imu.rates_raw_yaw [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15757 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [7] -> \flight_core.imu.rates_raw_yaw [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15758 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [8] -> \flight_core.imu.rates_raw_yaw [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15759 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [9] -> \flight_core.imu.rates_raw_yaw [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15760 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [10] -> \flight_core.imu.rates_raw_yaw [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15761 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [11] -> \flight_core.imu.rates_raw_yaw [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15762 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [12] -> \flight_core.imu.rates_raw_yaw [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15763 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [13] -> \flight_core.imu.rates_raw_yaw [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15764 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [14] -> \flight_core.imu.rates_raw_yaw [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15765 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [15] -> \flight_core.imu.rates_raw_yaw [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15766 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [16] -> \flight_core.imu.rates_raw_yaw [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15767 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [17] -> \flight_core.imu.rates_raw_yaw [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15768 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [18] -> \flight_core.imu.rates_raw_yaw [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15769 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [19] -> \flight_core.imu.rates_raw_yaw [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15770 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [20] -> \flight_core.imu.rates_raw_yaw [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15771 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [21] -> \flight_core.imu.rates_raw_yaw [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15772 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [22] -> \flight_core.imu.rates_raw_yaw [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15773 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [23] -> \flight_core.imu.rates_raw_yaw [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15774 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [24] -> \flight_core.imu.rates_raw_yaw [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15775 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [25] -> \flight_core.imu.rates_raw_yaw [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15776 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [26] -> \flight_core.imu.rates_raw_yaw [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15777 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [27] -> \flight_core.imu.rates_raw_yaw [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15778 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [28] -> \flight_core.imu.rates_raw_yaw [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15779 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [29] -> \flight_core.imu.rates_raw_yaw [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15780 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [30] -> \flight_core.imu.rates_raw_yaw [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15781 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_yaw[31:0] [31] -> \flight_core.imu.rates_raw_yaw [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15782 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [0] -> \flight_core.imu.rates_raw_pitch [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15783 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [1] -> \flight_core.imu.rates_raw_pitch [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15784 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [2] -> \flight_core.imu.rates_raw_pitch [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15785 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [3] -> \flight_core.imu.rates_raw_pitch [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15786 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [4] -> \flight_core.imu.rates_raw_pitch [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15787 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [5] -> \flight_core.imu.rates_raw_pitch [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15788 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [6] -> \flight_core.imu.rates_raw_pitch [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15789 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [7] -> \flight_core.imu.rates_raw_pitch [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15790 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [8] -> \flight_core.imu.rates_raw_pitch [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15791 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [9] -> \flight_core.imu.rates_raw_pitch [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15792 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [10] -> \flight_core.imu.rates_raw_pitch [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15793 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [11] -> \flight_core.imu.rates_raw_pitch [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15794 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [12] -> \flight_core.imu.rates_raw_pitch [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15795 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [13] -> \flight_core.imu.rates_raw_pitch [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15796 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [14] -> \flight_core.imu.rates_raw_pitch [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15797 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [15] -> \flight_core.imu.rates_raw_pitch [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15798 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [16] -> \flight_core.imu.rates_raw_pitch [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15799 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [17] -> \flight_core.imu.rates_raw_pitch [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15800 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [18] -> \flight_core.imu.rates_raw_pitch [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15801 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [19] -> \flight_core.imu.rates_raw_pitch [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15802 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [20] -> \flight_core.imu.rates_raw_pitch [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15803 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [21] -> \flight_core.imu.rates_raw_pitch [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15804 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [22] -> \flight_core.imu.rates_raw_pitch [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15805 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [23] -> \flight_core.imu.rates_raw_pitch [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15806 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [24] -> \flight_core.imu.rates_raw_pitch [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15807 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [25] -> \flight_core.imu.rates_raw_pitch [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15808 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [26] -> \flight_core.imu.rates_raw_pitch [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15809 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [27] -> \flight_core.imu.rates_raw_pitch [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15810 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [28] -> \flight_core.imu.rates_raw_pitch [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15811 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [29] -> \flight_core.imu.rates_raw_pitch [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15812 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [30] -> \flight_core.imu.rates_raw_pitch [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15813 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_pitch[31:0] [31] -> \flight_core.imu.rates_raw_pitch [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15814 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [0] -> \flight_core.imu.rates_raw_roll [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15815 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [1] -> \flight_core.imu.rates_raw_roll [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15816 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [2] -> \flight_core.imu.rates_raw_roll [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15817 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [3] -> \flight_core.imu.rates_raw_roll [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15818 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [4] -> \flight_core.imu.rates_raw_roll [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15819 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [5] -> \flight_core.imu.rates_raw_roll [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15820 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [6] -> \flight_core.imu.rates_raw_roll [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15821 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [7] -> \flight_core.imu.rates_raw_roll [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15822 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [8] -> \flight_core.imu.rates_raw_roll [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15823 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [9] -> \flight_core.imu.rates_raw_roll [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15824 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [10] -> \flight_core.imu.rates_raw_roll [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15825 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [11] -> \flight_core.imu.rates_raw_roll [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15826 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [12] -> \flight_core.imu.rates_raw_roll [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15827 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [13] -> \flight_core.imu.rates_raw_roll [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15828 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [14] -> \flight_core.imu.rates_raw_roll [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15829 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [15] -> \flight_core.imu.rates_raw_roll [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15830 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [16] -> \flight_core.imu.rates_raw_roll [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15831 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [17] -> \flight_core.imu.rates_raw_roll [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15832 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [18] -> \flight_core.imu.rates_raw_roll [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15833 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [19] -> \flight_core.imu.rates_raw_roll [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15834 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [20] -> \flight_core.imu.rates_raw_roll [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15835 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [21] -> \flight_core.imu.rates_raw_roll [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15836 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [22] -> \flight_core.imu.rates_raw_roll [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15837 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [23] -> \flight_core.imu.rates_raw_roll [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15838 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [24] -> \flight_core.imu.rates_raw_roll [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15839 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [25] -> \flight_core.imu.rates_raw_roll [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15840 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [26] -> \flight_core.imu.rates_raw_roll [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15841 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [27] -> \flight_core.imu.rates_raw_roll [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15842 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [28] -> \flight_core.imu.rates_raw_roll [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15843 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [29] -> \flight_core.imu.rates_raw_roll [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15844 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [30] -> \flight_core.imu.rates_raw_roll [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15845 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\rates_raw_roll[31:0] [31] -> \flight_core.imu.rates_raw_roll [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15846 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.$procmux$9094.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.imu.sampleReady.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$15848 to $_DFFE_PP_ for $techmap\flight_core.imu.$0\gyroUpdateCounter[15:0] [1] -> \flight_core.imu.gyroUpdateCounter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17238 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5132.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.debug_proto.uart_send.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17255 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [0] -> \flight_core.debug_proto.uart_data_in [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17256 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [1] -> \flight_core.debug_proto.uart_data_in [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17257 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [2] -> \flight_core.debug_proto.uart_data_in [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17258 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [3] -> \flight_core.debug_proto.uart_data_in [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17259 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [4] -> \flight_core.debug_proto.uart_data_in [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17260 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [5] -> \flight_core.debug_proto.uart_data_in [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17261 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [6] -> \flight_core.debug_proto.uart_data_in [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17262 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5118.$ternary$/usr/bin/../share/yosys/techmap.v:445$16436_Y [7] -> \flight_core.debug_proto.uart_data_in [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17263 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [0] -> \flight_core.debug_proto.msgDataIndex [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17264 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [1] -> \flight_core.debug_proto.msgDataIndex [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17265 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [2] -> \flight_core.debug_proto.msgDataIndex [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17266 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [3] -> \flight_core.debug_proto.msgDataIndex [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17267 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [4] -> \flight_core.debug_proto.msgDataIndex [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17268 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [5] -> \flight_core.debug_proto.msgDataIndex [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17269 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [6] -> \flight_core.debug_proto.msgDataIndex [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17270 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5124.$ternary$/usr/bin/../share/yosys/techmap.v:445$13627_Y [7] -> \flight_core.debug_proto.msgDataIndex [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17271 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5139.$ternary$/usr/bin/../share/yosys/techmap.v:445$14961_Y -> \flight_core.debug_proto.msgDataLoad.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17272 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5148.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.debug_proto.msgComplete.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17273 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [0] -> \flight_core.debug_proto.sentDataCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17274 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [1] -> \flight_core.debug_proto.sentDataCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17275 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [2] -> \flight_core.debug_proto.sentDataCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17276 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [3] -> \flight_core.debug_proto.sentDataCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17277 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [4] -> \flight_core.debug_proto.sentDataCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17278 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [5] -> \flight_core.debug_proto.sentDataCount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17279 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [6] -> \flight_core.debug_proto.sentDataCount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17280 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5152.$ternary$/usr/bin/../share/yosys/techmap.v:445$14674_Y [7] -> \flight_core.debug_proto.sentDataCount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17281 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [0] -> \flight_core.debug_proto.nextState [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17282 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [1] -> \flight_core.debug_proto.nextState [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17283 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [2] -> \flight_core.debug_proto.nextState [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17284 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [3] -> \flight_core.debug_proto.nextState [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17285 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [4] -> \flight_core.debug_proto.nextState [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17286 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [5] -> \flight_core.debug_proto.nextState [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17287 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [6] -> \flight_core.debug_proto.nextState [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17288 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5157.$ternary$/usr/bin/../share/yosys/techmap.v:445$11739_Y [7] -> \flight_core.debug_proto.nextState [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17289 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [0] -> \flight_core.debug_proto.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17290 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [1] -> \flight_core.debug_proto.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17291 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [2] -> \flight_core.debug_proto.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17292 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [3] -> \flight_core.debug_proto.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17293 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [4] -> \flight_core.debug_proto.state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17294 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [5] -> \flight_core.debug_proto.state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17295 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [6] -> \flight_core.debug_proto.state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17296 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug_proto.$procmux$5163.$ternary$/usr/bin/../share/yosys/techmap.v:445$17348_Y [7] -> \flight_core.debug_proto.state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17610 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [0] -> \flight_core.motor3.dshot_tx.alarm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17611 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [1] -> \flight_core.motor3.dshot_tx.alarm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17612 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [2] -> \flight_core.motor3.dshot_tx.alarm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17613 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [3] -> \flight_core.motor3.dshot_tx.alarm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17614 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [4] -> \flight_core.motor3.dshot_tx.alarm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17615 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [5] -> \flight_core.motor3.dshot_tx.alarm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17616 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [6] -> \flight_core.motor3.dshot_tx.alarm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17617 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [7] -> \flight_core.motor3.dshot_tx.alarm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17618 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [8] -> \flight_core.motor3.dshot_tx.alarm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17619 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [9] -> \flight_core.motor3.dshot_tx.alarm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17620 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [10] -> \flight_core.motor3.dshot_tx.alarm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17621 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [11] -> \flight_core.motor3.dshot_tx.alarm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17622 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [12] -> \flight_core.motor3.dshot_tx.alarm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17623 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [13] -> \flight_core.motor3.dshot_tx.alarm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17624 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [14] -> \flight_core.motor3.dshot_tx.alarm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17625 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\alarm[15:0] [15] -> \flight_core.motor3.dshot_tx.alarm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17629 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\timerCount[7:0] [1] -> \flight_core.motor3.dshot_tx.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17636 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [0] -> \flight_core.motor3.dshot_tx.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17637 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [1] -> \flight_core.motor3.dshot_tx.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17638 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [2] -> \flight_core.motor3.dshot_tx.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17639 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [3] -> \flight_core.motor3.dshot_tx.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17640 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [4] -> \flight_core.motor3.dshot_tx.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17641 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [5] -> \flight_core.motor3.dshot_tx.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17642 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [6] -> \flight_core.motor3.dshot_tx.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17643 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [7] -> \flight_core.motor3.dshot_tx.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17644 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [8] -> \flight_core.motor3.dshot_tx.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17645 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [9] -> \flight_core.motor3.dshot_tx.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17646 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [10] -> \flight_core.motor3.dshot_tx.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17647 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [11] -> \flight_core.motor3.dshot_tx.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17648 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [12] -> \flight_core.motor3.dshot_tx.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17649 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [13] -> \flight_core.motor3.dshot_tx.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17650 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [14] -> \flight_core.motor3.dshot_tx.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17651 to $_DFFE_PP_ for $techmap\flight_core.motor3.dshot_tx.$0\data[15:0] [15] -> \flight_core.motor3.dshot_tx.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18034 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [0] -> \flight_core.motor4.dshot_tx.alarm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18035 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [1] -> \flight_core.motor4.dshot_tx.alarm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18036 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [2] -> \flight_core.motor4.dshot_tx.alarm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18037 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [3] -> \flight_core.motor4.dshot_tx.alarm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18038 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [4] -> \flight_core.motor4.dshot_tx.alarm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18039 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [5] -> \flight_core.motor4.dshot_tx.alarm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18040 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [6] -> \flight_core.motor4.dshot_tx.alarm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18041 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [7] -> \flight_core.motor4.dshot_tx.alarm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18042 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [8] -> \flight_core.motor4.dshot_tx.alarm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18043 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [9] -> \flight_core.motor4.dshot_tx.alarm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18044 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [10] -> \flight_core.motor4.dshot_tx.alarm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18045 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [11] -> \flight_core.motor4.dshot_tx.alarm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18046 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [12] -> \flight_core.motor4.dshot_tx.alarm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18047 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [13] -> \flight_core.motor4.dshot_tx.alarm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18048 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [14] -> \flight_core.motor4.dshot_tx.alarm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18049 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\alarm[15:0] [15] -> \flight_core.motor4.dshot_tx.alarm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18053 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\timerCount[7:0] [1] -> \flight_core.motor4.dshot_tx.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18060 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [0] -> \flight_core.motor4.dshot_tx.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18061 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [1] -> \flight_core.motor4.dshot_tx.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18062 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [2] -> \flight_core.motor4.dshot_tx.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18063 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [3] -> \flight_core.motor4.dshot_tx.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18064 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [4] -> \flight_core.motor4.dshot_tx.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18065 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [5] -> \flight_core.motor4.dshot_tx.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18066 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [6] -> \flight_core.motor4.dshot_tx.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18067 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [7] -> \flight_core.motor4.dshot_tx.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18068 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [8] -> \flight_core.motor4.dshot_tx.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18069 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [9] -> \flight_core.motor4.dshot_tx.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18070 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [10] -> \flight_core.motor4.dshot_tx.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18071 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [11] -> \flight_core.motor4.dshot_tx.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18072 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [12] -> \flight_core.motor4.dshot_tx.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18073 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [13] -> \flight_core.motor4.dshot_tx.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18074 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [14] -> \flight_core.motor4.dshot_tx.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18075 to $_DFFE_PP_ for $techmap\flight_core.motor4.dshot_tx.$0\data[15:0] [15] -> \flight_core.motor4.dshot_tx.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18228 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [0] -> \flight_core.motor2.dshot_tx.alarm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18229 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [1] -> \flight_core.motor2.dshot_tx.alarm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18230 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [2] -> \flight_core.motor2.dshot_tx.alarm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18231 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [3] -> \flight_core.motor2.dshot_tx.alarm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18232 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [4] -> \flight_core.motor2.dshot_tx.alarm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18233 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [5] -> \flight_core.motor2.dshot_tx.alarm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18234 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [6] -> \flight_core.motor2.dshot_tx.alarm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18235 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [7] -> \flight_core.motor2.dshot_tx.alarm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18236 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [8] -> \flight_core.motor2.dshot_tx.alarm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18237 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [9] -> \flight_core.motor2.dshot_tx.alarm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18238 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [10] -> \flight_core.motor2.dshot_tx.alarm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18239 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [11] -> \flight_core.motor2.dshot_tx.alarm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18240 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [12] -> \flight_core.motor2.dshot_tx.alarm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18241 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [13] -> \flight_core.motor2.dshot_tx.alarm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18242 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [14] -> \flight_core.motor2.dshot_tx.alarm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18243 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\alarm[15:0] [15] -> \flight_core.motor2.dshot_tx.alarm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18247 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\timerCount[7:0] [1] -> \flight_core.motor2.dshot_tx.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18254 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [0] -> \flight_core.motor2.dshot_tx.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18255 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [1] -> \flight_core.motor2.dshot_tx.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18256 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [2] -> \flight_core.motor2.dshot_tx.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18257 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [3] -> \flight_core.motor2.dshot_tx.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18258 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [4] -> \flight_core.motor2.dshot_tx.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18259 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [5] -> \flight_core.motor2.dshot_tx.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18260 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [6] -> \flight_core.motor2.dshot_tx.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18261 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [7] -> \flight_core.motor2.dshot_tx.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18262 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [8] -> \flight_core.motor2.dshot_tx.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18263 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [9] -> \flight_core.motor2.dshot_tx.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18264 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [10] -> \flight_core.motor2.dshot_tx.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18265 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [11] -> \flight_core.motor2.dshot_tx.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18266 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [12] -> \flight_core.motor2.dshot_tx.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18267 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [13] -> \flight_core.motor2.dshot_tx.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18268 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [14] -> \flight_core.motor2.dshot_tx.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18269 to $_DFFE_PP_ for $techmap\flight_core.motor2.dshot_tx.$0\data[15:0] [15] -> \flight_core.motor2.dshot_tx.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18440 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [0] -> \flight_core.motor1.dshot_tx.alarm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18441 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [1] -> \flight_core.motor1.dshot_tx.alarm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18442 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [2] -> \flight_core.motor1.dshot_tx.alarm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18443 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [3] -> \flight_core.motor1.dshot_tx.alarm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18444 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [4] -> \flight_core.motor1.dshot_tx.alarm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18445 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [5] -> \flight_core.motor1.dshot_tx.alarm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18446 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [6] -> \flight_core.motor1.dshot_tx.alarm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18447 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [7] -> \flight_core.motor1.dshot_tx.alarm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18448 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [8] -> \flight_core.motor1.dshot_tx.alarm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18449 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [9] -> \flight_core.motor1.dshot_tx.alarm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18450 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [10] -> \flight_core.motor1.dshot_tx.alarm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18451 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [11] -> \flight_core.motor1.dshot_tx.alarm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18452 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [12] -> \flight_core.motor1.dshot_tx.alarm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18453 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [13] -> \flight_core.motor1.dshot_tx.alarm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18454 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [14] -> \flight_core.motor1.dshot_tx.alarm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18455 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\alarm[15:0] [15] -> \flight_core.motor1.dshot_tx.alarm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18459 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\timerCount[7:0] [1] -> \flight_core.motor1.dshot_tx.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18466 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [0] -> \flight_core.motor1.dshot_tx.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18467 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [1] -> \flight_core.motor1.dshot_tx.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18468 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [2] -> \flight_core.motor1.dshot_tx.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18469 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [3] -> \flight_core.motor1.dshot_tx.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18470 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [4] -> \flight_core.motor1.dshot_tx.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18471 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [5] -> \flight_core.motor1.dshot_tx.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18472 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [6] -> \flight_core.motor1.dshot_tx.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18473 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [7] -> \flight_core.motor1.dshot_tx.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18474 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [8] -> \flight_core.motor1.dshot_tx.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18475 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [9] -> \flight_core.motor1.dshot_tx.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18476 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [10] -> \flight_core.motor1.dshot_tx.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18477 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [11] -> \flight_core.motor1.dshot_tx.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18478 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [12] -> \flight_core.motor1.dshot_tx.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18479 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [13] -> \flight_core.motor1.dshot_tx.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18480 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [14] -> \flight_core.motor1.dshot_tx.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18481 to $_DFFE_PP_ for $techmap\flight_core.motor1.dshot_tx.$0\data[15:0] [15] -> \flight_core.motor1.dshot_tx.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18611 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\write_address[5:0] [0] -> \flight_core.fport_decode.inputFIFO.write_address [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18612 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\write_address[5:0] [1] -> \flight_core.fport_decode.inputFIFO.write_address [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18613 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\write_address[5:0] [2] -> \flight_core.fport_decode.inputFIFO.write_address [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18614 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\write_address[5:0] [3] -> \flight_core.fport_decode.inputFIFO.write_address [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18615 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\write_address[5:0] [4] -> \flight_core.fport_decode.inputFIFO.write_address [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18616 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\write_address[5:0] [5] -> \flight_core.fport_decode.inputFIFO.write_address [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18617 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\read_address[5:0] [0] -> \flight_core.fport_decode.inputFIFO.read_address [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18618 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\read_address[5:0] [1] -> \flight_core.fport_decode.inputFIFO.read_address [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18619 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\read_address[5:0] [2] -> \flight_core.fport_decode.inputFIFO.read_address [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18620 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\read_address[5:0] [3] -> \flight_core.fport_decode.inputFIFO.read_address [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18621 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\read_address[5:0] [4] -> \flight_core.fport_decode.inputFIFO.read_address [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18622 to $_DFFE_PP_ for $techmap\flight_core.fport_decode.inputFIFO.$0\read_address[5:0] [5] -> \flight_core.fport_decode.inputFIFO.read_address [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18667 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [0] -> \flight_core.imu.spi_fast.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18668 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [1] -> \flight_core.imu.spi_fast.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18669 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [2] -> \flight_core.imu.spi_fast.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18670 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [3] -> \flight_core.imu.spi_fast.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18671 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [4] -> \flight_core.imu.spi_fast.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18672 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [5] -> \flight_core.imu.spi_fast.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18673 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [6] -> \flight_core.imu.spi_fast.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18674 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [7] -> \flight_core.imu.spi_fast.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18675 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [8] -> \flight_core.imu.spi_fast.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18676 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [9] -> \flight_core.imu.spi_fast.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18677 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [10] -> \flight_core.imu.spi_fast.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18678 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [11] -> \flight_core.imu.spi_fast.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18679 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [12] -> \flight_core.imu.spi_fast.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18680 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [13] -> \flight_core.imu.spi_fast.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18681 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [14] -> \flight_core.imu.spi_fast.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18682 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [15] -> \flight_core.imu.spi_fast.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18683 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [16] -> \flight_core.imu.spi_fast.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18684 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [17] -> \flight_core.imu.spi_fast.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18685 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [18] -> \flight_core.imu.spi_fast.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18686 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [19] -> \flight_core.imu.spi_fast.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18687 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [20] -> \flight_core.imu.spi_fast.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18688 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [21] -> \flight_core.imu.spi_fast.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18689 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [22] -> \flight_core.imu.spi_fast.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18690 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [23] -> \flight_core.imu.spi_fast.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18691 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [24] -> \flight_core.imu.spi_fast.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18692 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [25] -> \flight_core.imu.spi_fast.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18693 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [26] -> \flight_core.imu.spi_fast.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18694 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [27] -> \flight_core.imu.spi_fast.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18695 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [28] -> \flight_core.imu.spi_fast.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18696 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [29] -> \flight_core.imu.spi_fast.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18697 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [30] -> \flight_core.imu.spi_fast.data [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18698 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [31] -> \flight_core.imu.spi_fast.data [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18699 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [32] -> \flight_core.imu.spi_fast.data [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18700 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [33] -> \flight_core.imu.spi_fast.data [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18701 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [34] -> \flight_core.imu.spi_fast.data [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18702 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [35] -> \flight_core.imu.spi_fast.data [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18703 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [36] -> \flight_core.imu.spi_fast.data [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18704 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [37] -> \flight_core.imu.spi_fast.data [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18705 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [38] -> \flight_core.imu.spi_fast.data [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18706 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [39] -> \flight_core.imu.spi_fast.data [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18707 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [40] -> \flight_core.imu.spi_fast.data [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18708 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [41] -> \flight_core.imu.spi_fast.data [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18709 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [42] -> \flight_core.imu.spi_fast.data [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18710 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [43] -> \flight_core.imu.spi_fast.data [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18711 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [44] -> \flight_core.imu.spi_fast.data [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18712 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [45] -> \flight_core.imu.spi_fast.data [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18713 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [46] -> \flight_core.imu.spi_fast.data [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18714 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [47] -> \flight_core.imu.spi_fast.data [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18715 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [48] -> \flight_core.imu.spi_fast.data [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18716 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [49] -> \flight_core.imu.spi_fast.data [49].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18717 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [50] -> \flight_core.imu.spi_fast.data [50].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18718 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [51] -> \flight_core.imu.spi_fast.data [51].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18719 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [52] -> \flight_core.imu.spi_fast.data [52].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18720 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [53] -> \flight_core.imu.spi_fast.data [53].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18721 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [54] -> \flight_core.imu.spi_fast.data [54].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18722 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\data[55:0] [55] -> \flight_core.imu.spi_fast.data [55].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18723 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5052.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [0] -> \flight_core.imu.spi_fast.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18724 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5052.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [1] -> \flight_core.imu.spi_fast.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18725 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5052.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [2] -> \flight_core.imu.spi_fast.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18726 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5052.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [3] -> \flight_core.imu.spi_fast.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18727 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5029.$ternary$/usr/bin/../share/yosys/techmap.v:445$19077_Y [0] -> \flight_core.imu.spi_fast.bitCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18728 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5029.$ternary$/usr/bin/../share/yosys/techmap.v:445$19077_Y [1] -> \flight_core.imu.spi_fast.bitCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18729 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5029.$ternary$/usr/bin/../share/yosys/techmap.v:445$19077_Y [2] -> \flight_core.imu.spi_fast.bitCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18730 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5029.$ternary$/usr/bin/../share/yosys/techmap.v:445$19077_Y [3] -> \flight_core.imu.spi_fast.bitCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18731 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5029.$ternary$/usr/bin/../share/yosys/techmap.v:445$19077_Y [4] -> \flight_core.imu.spi_fast.bitCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18732 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5029.$ternary$/usr/bin/../share/yosys/techmap.v:445$19077_Y [5] -> \flight_core.imu.spi_fast.bitCount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18733 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [0] -> \flight_core.imu.spi_fast.timerCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18734 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [1] -> \flight_core.imu.spi_fast.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18735 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [2] -> \flight_core.imu.spi_fast.timerCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18736 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [3] -> \flight_core.imu.spi_fast.timerCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18737 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [4] -> \flight_core.imu.spi_fast.timerCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18738 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [5] -> \flight_core.imu.spi_fast.timerCount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18739 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [6] -> \flight_core.imu.spi_fast.timerCount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18740 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [7] -> \flight_core.imu.spi_fast.timerCount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18741 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [8] -> \flight_core.imu.spi_fast.timerCount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18742 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [9] -> \flight_core.imu.spi_fast.timerCount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18743 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [10] -> \flight_core.imu.spi_fast.timerCount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18744 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [11] -> \flight_core.imu.spi_fast.timerCount [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18745 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [12] -> \flight_core.imu.spi_fast.timerCount [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18746 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [13] -> \flight_core.imu.spi_fast.timerCount [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18747 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [14] -> \flight_core.imu.spi_fast.timerCount [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18748 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5036.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [15] -> \flight_core.imu.spi_fast.timerCount [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18749 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [0] -> \flight_core.imu.spiRxData [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18750 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [1] -> \flight_core.imu.spiRxData [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18751 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [2] -> \flight_core.imu.spiRxData [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18752 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [3] -> \flight_core.imu.spiRxData [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18753 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [4] -> \flight_core.imu.spiRxData [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18754 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [5] -> \flight_core.imu.spiRxData [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18755 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [6] -> \flight_core.imu.spiRxData [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18756 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [7] -> \flight_core.imu.spiRxData [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18757 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [8] -> \flight_core.imu.spiRxData [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18758 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [9] -> \flight_core.imu.spiRxData [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18759 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [10] -> \flight_core.imu.spiRxData [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18760 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [11] -> \flight_core.imu.spiRxData [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18761 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [12] -> \flight_core.imu.spiRxData [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18762 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [13] -> \flight_core.imu.spiRxData [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18763 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [14] -> \flight_core.imu.spiRxData [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18764 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [15] -> \flight_core.imu.spiRxData [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18765 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [16] -> \flight_core.imu.spiRxData [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18766 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [17] -> \flight_core.imu.spiRxData [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18767 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [18] -> \flight_core.imu.spiRxData [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18768 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [19] -> \flight_core.imu.spiRxData [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18769 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [20] -> \flight_core.imu.spiRxData [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18770 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [21] -> \flight_core.imu.spiRxData [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18771 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [22] -> $auto$wreduce.cc:455:run$10173 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18772 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [23] -> $auto$wreduce.cc:455:run$10173 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18773 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [24] -> $auto$wreduce.cc:455:run$10173 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18774 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [25] -> $auto$wreduce.cc:455:run$10173 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18775 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [26] -> $auto$wreduce.cc:455:run$10173 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18776 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [27] -> $auto$wreduce.cc:455:run$10173 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18777 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [28] -> $auto$wreduce.cc:455:run$10173 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18778 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [29] -> $auto$wreduce.cc:455:run$10173 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18779 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [30] -> $auto$wreduce.cc:455:run$10173 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18780 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [31] -> $auto$wreduce.cc:455:run$10173 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18781 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [32] -> $auto$wreduce.cc:455:run$10173 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18782 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [33] -> $auto$wreduce.cc:455:run$10173 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18783 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [34] -> $auto$wreduce.cc:455:run$10173 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18784 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [35] -> $auto$wreduce.cc:455:run$10173 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18785 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [36] -> $auto$wreduce.cc:455:run$10173 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18786 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [37] -> $auto$wreduce.cc:455:run$10173 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18787 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [38] -> $auto$wreduce.cc:455:run$10173 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18788 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [39] -> $auto$wreduce.cc:455:run$10173 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18789 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [40] -> $auto$wreduce.cc:455:run$10173 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18790 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [41] -> $auto$wreduce.cc:455:run$10173 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18791 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [42] -> $auto$wreduce.cc:455:run$10173 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18792 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [43] -> $auto$wreduce.cc:455:run$10173 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18793 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [44] -> $auto$wreduce.cc:455:run$10173 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18794 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [45] -> $auto$wreduce.cc:455:run$10173 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18795 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [46] -> $auto$wreduce.cc:455:run$10173 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18796 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_fast.$0\rxData[55:0] [47] -> $auto$wreduce.cc:455:run$10173 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18805 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5075.$ternary$/usr/bin/../share/yosys/techmap.v:445$14961_Y -> \flight_core.imu.spi_fast.complete.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18806 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5088.$ternary$/usr/bin/../share/yosys/techmap.v:445$14961_Y -> \flight_core.imu.spi_fast.outCS.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18807 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5092.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.imu.spi_fast.outMOSI.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18808 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_fast.$procmux$5099.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.imu.spi_fast.outCLK.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20493 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [0] -> \flight_core.imu.spi_registers.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20494 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [1] -> \flight_core.imu.spi_registers.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20495 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [2] -> \flight_core.imu.spi_registers.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20496 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [3] -> \flight_core.imu.spi_registers.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20497 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [4] -> \flight_core.imu.spi_registers.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20498 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [5] -> \flight_core.imu.spi_registers.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20499 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [6] -> \flight_core.imu.spi_registers.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20500 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [7] -> \flight_core.imu.spi_registers.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20501 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [8] -> \flight_core.imu.spi_registers.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20502 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [9] -> \flight_core.imu.spi_registers.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20503 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [10] -> \flight_core.imu.spi_registers.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20504 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [11] -> \flight_core.imu.spi_registers.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20505 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [12] -> \flight_core.imu.spi_registers.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20506 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [13] -> \flight_core.imu.spi_registers.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20507 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [14] -> \flight_core.imu.spi_registers.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20508 to $_DFFE_PP_ for $techmap\flight_core.imu.spi_registers.$0\data[15:0] [15] -> \flight_core.imu.spi_registers.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20509 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2629.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [0] -> \flight_core.imu.spi_registers.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20510 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2629.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [1] -> \flight_core.imu.spi_registers.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20511 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2629.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [2] -> \flight_core.imu.spi_registers.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20512 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2629.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [3] -> \flight_core.imu.spi_registers.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20513 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2606.$ternary$/usr/bin/../share/yosys/techmap.v:445$20729_Y [0] -> \flight_core.imu.spi_registers.bitCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20514 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2606.$ternary$/usr/bin/../share/yosys/techmap.v:445$20729_Y [1] -> \flight_core.imu.spi_registers.bitCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20515 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2606.$ternary$/usr/bin/../share/yosys/techmap.v:445$20729_Y [2] -> \flight_core.imu.spi_registers.bitCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20516 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2606.$ternary$/usr/bin/../share/yosys/techmap.v:445$20729_Y [3] -> \flight_core.imu.spi_registers.bitCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20517 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [0] -> \flight_core.imu.spi_registers.timerCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20518 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [1] -> \flight_core.imu.spi_registers.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20519 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [2] -> \flight_core.imu.spi_registers.timerCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20520 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [3] -> \flight_core.imu.spi_registers.timerCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20521 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [4] -> \flight_core.imu.spi_registers.timerCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20522 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [5] -> \flight_core.imu.spi_registers.timerCount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20523 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [6] -> \flight_core.imu.spi_registers.timerCount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20524 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [7] -> \flight_core.imu.spi_registers.timerCount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20525 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [8] -> \flight_core.imu.spi_registers.timerCount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20526 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [9] -> \flight_core.imu.spi_registers.timerCount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20527 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [10] -> \flight_core.imu.spi_registers.timerCount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20528 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [11] -> \flight_core.imu.spi_registers.timerCount [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20529 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [12] -> \flight_core.imu.spi_registers.timerCount [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20530 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [13] -> \flight_core.imu.spi_registers.timerCount [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20531 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [14] -> \flight_core.imu.spi_registers.timerCount [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20532 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2613.$ternary$/usr/bin/../share/yosys/techmap.v:445$19034_Y [15] -> \flight_core.imu.spi_registers.timerCount [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20533 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2652.$ternary$/usr/bin/../share/yosys/techmap.v:445$14961_Y -> \flight_core.imu.spi_registers.complete.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20534 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2665.$ternary$/usr/bin/../share/yosys/techmap.v:445$14961_Y -> \flight_core.imu.spi_registers.outCS.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20535 to $_DFFE_PP_ for $techmap$techmap\flight_core.imu.spi_registers.$procmux$2669.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.imu.spi_registers.outMOSI.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20974 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [0] -> \flight_core.debug.tx.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20975 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [1] -> \flight_core.debug.tx.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20976 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [2] -> \flight_core.debug.tx.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20977 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [3] -> \flight_core.debug.tx.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20978 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [4] -> \flight_core.debug.tx.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20979 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [5] -> \flight_core.debug.tx.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20980 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [6] -> \flight_core.debug.tx.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20981 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\data[7:0] [7] -> \flight_core.debug.tx.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20983 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$1971.$ternary$/usr/bin/../share/yosys/techmap.v:445$11702_Y -> \flight_core.debug.tx.sendingComplete.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20984 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$1974.$ternary$/usr/bin/../share/yosys/techmap.v:445$14961_Y -> \flight_core.debug.tx.outputBit.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20985 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [0] -> \flight_core.debug.tx.buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20986 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [1] -> \flight_core.debug.tx.buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20987 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [2] -> \flight_core.debug.tx.buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20988 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [3] -> \flight_core.debug.tx.buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20989 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [4] -> \flight_core.debug.tx.buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20990 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [5] -> \flight_core.debug.tx.buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20991 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [6] -> \flight_core.debug.tx.buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20992 to $_DFFE_PP_ for $techmap\flight_core.debug.tx.$0\buffer[7:0] [7] -> \flight_core.debug.tx.buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20993 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$1984.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [0] -> \flight_core.debug.tx.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20994 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$1984.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [1] -> \flight_core.debug.tx.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20995 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$1984.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [2] -> \flight_core.debug.tx.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20996 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$1984.$ternary$/usr/bin/../share/yosys/techmap.v:445$13702_Y [3] -> \flight_core.debug.tx.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20997 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2012.$ternary$/usr/bin/../share/yosys/techmap.v:445$12529_Y [0] -> \flight_core.debug.tx.bitCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20998 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2012.$ternary$/usr/bin/../share/yosys/techmap.v:445$12529_Y [1] -> \flight_core.debug.tx.bitCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$20999 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2012.$ternary$/usr/bin/../share/yosys/techmap.v:445$12529_Y [2] -> \flight_core.debug.tx.bitCount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21000 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2012.$ternary$/usr/bin/../share/yosys/techmap.v:445$12529_Y [3] -> \flight_core.debug.tx.bitCount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21001 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2012.$ternary$/usr/bin/../share/yosys/techmap.v:445$12529_Y [4] -> \flight_core.debug.tx.bitCount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21002 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2019.$ternary$/usr/bin/../share/yosys/techmap.v:445$21022_Y [0] -> \flight_core.debug.tx.timerCount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21003 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2019.$ternary$/usr/bin/../share/yosys/techmap.v:445$21022_Y [1] -> \flight_core.debug.tx.timerCount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21004 to $_DFFE_PP_ for $techmap$techmap\flight_core.debug.tx.$procmux$2019.$ternary$/usr/bin/../share/yosys/techmap.v:445$21022_Y [2] -> \flight_core.debug.tx.timerCount [2].

16.34. Executing TECHMAP pass (map to technology primitives).

16.34.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

16.34.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~1428 debug messages>

16.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3660 debug messages>

16.36. Executing SIMPLEMAP pass (map simple cells to gate primitives).

16.37. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13596 (SB_DFFE): \flight_core.fport_decode.packet_data_read [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11262 (SB_DFFE): \flight_core.inputs[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11263 (SB_DFFE): \flight_core.inputs[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11264 (SB_DFFE): \flight_core.inputs[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11265 (SB_DFFE): \flight_core.inputs[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11266 (SB_DFFE): \flight_core.inputs[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11267 (SB_DFFE): \flight_core.inputs[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11268 (SB_DFFE): \flight_core.inputs[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11269 (SB_DFFE): \flight_core.inputs[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11271 (SB_DFFE): \flight_core.inputs[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11272 (SB_DFFE): \flight_core.inputs[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11273 (SB_DFFE): \flight_core.inputs[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11274 (SB_DFFE): \flight_core.inputs[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11275 (SB_DFFE): \flight_core.inputs[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11276 (SB_DFFE): \flight_core.inputs[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11277 (SB_DFFE): \flight_core.inputs[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11278 (SB_DFFE): \flight_core.inputs[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11279 (SB_DFFE): \flight_core.inputs[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11281 (SB_DFFE): \flight_core.inputs[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11282 (SB_DFFE): \flight_core.inputs[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11283 (SB_DFFE): \flight_core.inputs[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11284 (SB_DFFE): \flight_core.inputs[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11285 (SB_DFFE): \flight_core.inputs[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11286 (SB_DFFE): \flight_core.inputs[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11287 (SB_DFFE): \flight_core.inputs[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11288 (SB_DFFE): \flight_core.inputs[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11289 (SB_DFFE): \flight_core.inputs[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11290 (SB_DFFE): \flight_core.inputs[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11291 (SB_DFFE): \flight_core.inputs[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11292 (SB_DFFE): \flight_core.inputs[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11293 (SB_DFFE): \flight_core.inputs[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11294 (SB_DFFE): \flight_core.inputs[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11295 (SB_DFFE): \flight_core.inputs[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11565 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11298 (SB_DFFE): \flight_core.inputs[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11300 (SB_DFFE): \flight_core.inputs[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11303 (SB_DFFE): \flight_core.inputs[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11299 (SB_DFFE): \flight_core.inputs[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11305 (SB_DFFE): \flight_core.inputs[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11270 (SB_DFFE): \flight_core.inputs[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11307 (SB_DFFE): \flight_core.inputs[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11309 (SB_DFFE): \flight_core.inputs[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11311 (SB_DFFE): \flight_core.inputs[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11313 (SB_DFFE): \flight_core.inputs[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11310 (SB_DFFE): \flight_core.inputs[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11315 (SB_DFFE): \flight_core.inputs[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11312 (SB_DFFE): \flight_core.inputs[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11317 (SB_DFFE): \flight_core.inputs[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13603 (SB_DFFE): \flight_core.control_rx.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11319 (SB_DFFE): \flight_core.inputs[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11321 (SB_DFFE): \flight_core.inputs[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11318 (SB_DFFE): \flight_core.inputs[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11323 (SB_DFFE): \flight_core.inputs[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13601 (SB_DFFE): \flight_core.control_rx.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11325 (SB_DFFE): \flight_core.inputs[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11322 (SB_DFFE): \flight_core.inputs[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11326 (SB_DFFE): \flight_core.inputs[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13602 (SB_DFFE): \flight_core.control_rx.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11328 (SB_DFFE): \flight_core.inputs[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11329 (SB_DFFE): \flight_core.inputs[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11327 (SB_DFFE): \flight_core.inputs[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11330 (SB_DFFE): \flight_core.inputs[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18618 (SB_DFFE): \flight_core.fport_decode.inputFIFO.read_address [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11332 (SB_DFFE): \flight_core.inputs[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11335 (SB_DFFE): \flight_core.inputs[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11336 (SB_DFFE): \flight_core.inputs[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11302 (SB_DFFE): \flight_core.inputs[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11333 (SB_DFFE): \flight_core.inputs[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11339 (SB_DFFE): \flight_core.inputs[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11337 (SB_DFFE): \flight_core.inputs[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11341 (SB_DFFE): \flight_core.inputs[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11342 (SB_DFFE): \flight_core.inputs[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11343 (SB_DFFE): \flight_core.inputs[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11344 (SB_DFFE): \flight_core.inputs[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11345 (SB_DFFE): \flight_core.inputs[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11346 (SB_DFFE): \flight_core.inputs[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11347 (SB_DFFE): \flight_core.inputs[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11348 (SB_DFFE): \flight_core.inputs[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11349 (SB_DFFE): \flight_core.inputs[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11350 (SB_DFFE): \flight_core.inputs[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11351 (SB_DFFE): \flight_core.inputs[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11352 (SB_DFFE): \flight_core.inputs[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11353 (SB_DFFE): \flight_core.inputs[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11354 (SB_DFFE): \flight_core.inputs[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11355 (SB_DFFE): \flight_core.inputs[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11356 (SB_DFFE): \flight_core.inputs[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11358 (SB_DFFE): \flight_core.inputs[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11360 (SB_DFFE): \flight_core.inputs[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11361 (SB_DFFE): \flight_core.inputs[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11359 (SB_DFFE): \flight_core.inputs[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11357 (SB_DFFE): \flight_core.inputs[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11387 (SB_DFFE): \flight_core.inputs[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11365 (SB_DFFE): \flight_core.inputs[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11367 (SB_DFFE): \flight_core.inputs[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11334 (SB_DFFE): \flight_core.inputs[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11368 (SB_DFFE): \flight_core.inputs[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11369 (SB_DFFE): \flight_core.inputs[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11370 (SB_DFFE): \flight_core.inputs[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11371 (SB_DFFE): \flight_core.inputs[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11372 (SB_DFFE): \flight_core.inputs[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11373 (SB_DFFE): \flight_core.inputs[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11374 (SB_DFFE): \flight_core.inputs[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11375 (SB_DFFE): \flight_core.inputs[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11376 (SB_DFFE): \flight_core.inputs[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11377 (SB_DFFE): \flight_core.inputs[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11378 (SB_DFFE): \flight_core.inputs[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11379 (SB_DFFE): \flight_core.inputs[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11380 (SB_DFFE): \flight_core.inputs[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11381 (SB_DFFE): \flight_core.inputs[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11383 (SB_DFFE): \flight_core.inputs[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11385 (SB_DFFE): \flight_core.inputs[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11386 (SB_DFFE): \flight_core.inputs[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11382 (SB_DFFE): \flight_core.inputs[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11437 (SB_DFFE): \flight_core.setpoint[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11389 (SB_DFFE): \flight_core.inputs[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11390 (SB_DFFE): \flight_core.setpoint[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11391 (SB_DFFE): \flight_core.setpoint[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11392 (SB_DFFE): \flight_core.setpoint[3] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11393 (SB_DFFE): \flight_core.setpoint[3] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11394 (SB_DFFE): \flight_core.setpoint[3] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11395 (SB_DFFE): \flight_core.setpoint[3] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11396 (SB_DFFE): \flight_core.setpoint[3] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11397 (SB_DFFE): \flight_core.setpoint[3] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11399 (SB_DFFE): \flight_core.setpoint[3] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11366 (SB_DFFE): \flight_core.inputs[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11400 (SB_DFFE): \flight_core.setpoint[3] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11401 (SB_DFFE): \flight_core.setpoint[3] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11402 (SB_DFFE): \flight_core.setpoint[3] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11403 (SB_DFFE): \flight_core.setpoint[3] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11404 (SB_DFFE): \flight_core.setpoint[3] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11405 (SB_DFFE): \flight_core.setpoint[3] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11406 (SB_DFFE): \flight_core.setpoint[3] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11408 (SB_DFFE): \flight_core.setpoint[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11410 (SB_DFFE): \flight_core.setpoint[3] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11411 (SB_DFFE): \flight_core.setpoint[3] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11407 (SB_DFFE): \flight_core.setpoint[3] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11414 (SB_DFFE): \flight_core.setpoint[3] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11415 (SB_DFFE): \flight_core.setpoint[3] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11416 (SB_DFFE): \flight_core.setpoint[3] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11417 (SB_DFFE): \flight_core.setpoint[3] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11418 (SB_DFFE): \flight_core.setpoint[3] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11419 (SB_DFFE): \flight_core.setpoint[3] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11420 (SB_DFFE): \flight_core.setpoint[3] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11421 (SB_DFFE): \flight_core.setpoint[3] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11422 (SB_DFFE): \flight_core.setpoint[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11423 (SB_DFFE): \flight_core.setpoint[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11424 (SB_DFFE): \flight_core.setpoint[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11425 (SB_DFFE): \flight_core.setpoint[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11426 (SB_DFFE): \flight_core.setpoint[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11427 (SB_DFFE): \flight_core.setpoint[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11428 (SB_DFFE): \flight_core.setpoint[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11429 (SB_DFFE): \flight_core.setpoint[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11431 (SB_DFFE): \flight_core.setpoint[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11398 (SB_DFFE): \flight_core.setpoint[3] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11433 (SB_DFFE): \flight_core.setpoint[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11438 (SB_DFFE): \flight_core.setpoint[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11435 (SB_DFFE): \flight_core.setpoint[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11432 (SB_DFFE): \flight_core.setpoint[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11439 (SB_DFFE): \flight_core.setpoint[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11454 (SB_DFFE): \flight_core.setpoint[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11436 (SB_DFFE): \flight_core.setpoint[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11440 (SB_DFFE): \flight_core.setpoint[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11441 (SB_DFFE): \flight_core.setpoint[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11442 (SB_DFFE): \flight_core.setpoint[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11443 (SB_DFFE): \flight_core.setpoint[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11444 (SB_DFFE): \flight_core.setpoint[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11445 (SB_DFFE): \flight_core.setpoint[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11446 (SB_DFFE): \flight_core.setpoint[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11447 (SB_DFFE): \flight_core.setpoint[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11448 (SB_DFFE): \flight_core.setpoint[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11449 (SB_DFFE): \flight_core.setpoint[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11450 (SB_DFFE): \flight_core.setpoint[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11451 (SB_DFFE): \flight_core.setpoint[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11452 (SB_DFFE): \flight_core.setpoint[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11453 (SB_DFFE): \flight_core.setpoint[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11455 (SB_DFFE): \flight_core.setpoint[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13623 (SB_DFFE): \flight_core.control_rx.rxData [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11457 (SB_DFFE): \flight_core.setpoint[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11458 (SB_DFFE): \flight_core.setpoint[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11459 (SB_DFFE): \flight_core.setpoint[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11460 (SB_DFFE): \flight_core.setpoint[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11461 (SB_DFFE): \flight_core.setpoint[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11463 (SB_DFFE): \flight_core.setpoint[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11430 (SB_DFFE): \flight_core.setpoint[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11464 (SB_DFFE): \flight_core.setpoint[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11465 (SB_DFFE): \flight_core.setpoint[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11466 (SB_DFFE): \flight_core.setpoint[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11467 (SB_DFFE): \flight_core.setpoint[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11468 (SB_DFFE): \flight_core.setpoint[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11469 (SB_DFFE): \flight_core.setpoint[1] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11470 (SB_DFFE): \flight_core.setpoint[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11471 (SB_DFFE): \flight_core.setpoint[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11472 (SB_DFFE): \flight_core.setpoint[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11473 (SB_DFFE): \flight_core.setpoint[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11474 (SB_DFFE): \flight_core.setpoint[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11475 (SB_DFFE): \flight_core.setpoint[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11476 (SB_DFFE): \flight_core.setpoint[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11477 (SB_DFFE): \flight_core.setpoint[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11478 (SB_DFFE): \flight_core.setpoint[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11479 (SB_DFFE): \flight_core.setpoint[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11480 (SB_DFFE): \flight_core.setpoint[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11481 (SB_DFFE): \flight_core.setpoint[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11482 (SB_DFFE): \flight_core.setpoint[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11483 (SB_DFFE): \flight_core.setpoint[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11484 (SB_DFFE): \flight_core.setpoint[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11485 (SB_DFFE): \flight_core.setpoint[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11486 (SB_DFFE): \flight_core.setpoint[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11487 (SB_DFFE): \flight_core.setpoint[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11488 (SB_DFFE): \flight_core.setpoint[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11489 (SB_DFFE): \flight_core.setpoint[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11490 (SB_DFFE): \flight_core.setpoint[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11491 (SB_DFFE): \flight_core.setpoint[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11492 (SB_DFFE): \flight_core.setpoint[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11493 (SB_DFFE): \flight_core.setpoint[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11495 (SB_DFFE): \flight_core.setpoint[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11462 (SB_DFFE): \flight_core.setpoint[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11496 (SB_DFFE): \flight_core.setpoint[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11497 (SB_DFFE): \flight_core.setpoint[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11498 (SB_DFFE): \flight_core.setpoint[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11499 (SB_DFFE): \flight_core.setpoint[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11500 (SB_DFFE): \flight_core.setpoint[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11501 (SB_DFFE): \flight_core.setpoint[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11502 (SB_DFFE): \flight_core.setpoint[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11503 (SB_DFFE): \flight_core.setpoint[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11504 (SB_DFFE): \flight_core.setpoint[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11505 (SB_DFFE): \flight_core.setpoint[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11506 (SB_DFFE): \flight_core.setpoint[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11507 (SB_DFFE): \flight_core.setpoint[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11508 (SB_DFFE): \flight_core.setpoint[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11509 (SB_DFFE): \flight_core.setpoint[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11510 (SB_DFFE): \flight_core.setpoint[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11511 (SB_DFFE): \flight_core.setpoint[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11512 (SB_DFFE): \flight_core.setpoint[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11513 (SB_DFFE): \flight_core.setpoint[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11514 (SB_DFFE): \flight_core.setpoint[0] [28] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11515 (SB_DFFE): \flight_core.setpoint[0] [29] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11516 (SB_DFFE): \flight_core.setpoint[0] [30] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11517 (SB_DFFE): \flight_core.setpoint[0] [31] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11518 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11519 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11520 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11521 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11522 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11523 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11524 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11525 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11527 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11494 (SB_DFFE): \flight_core.setpoint[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11528 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11529 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11530 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11531 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11532 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11533 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11534 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11535 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11536 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11537 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11538 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11539 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11540 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11541 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11542 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11543 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11544 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11545 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11546 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11547 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11548 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11549 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11550 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11551 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11552 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11553 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11554 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11555 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11556 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11557 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11559 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11526 (SB_DFFE): \flight_core.gyro_rates_sampled[2] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11560 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11561 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11562 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11563 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11564 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11296 (SB_DFFE): \flight_core.inputs[2] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11566 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11567 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11568 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11569 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11570 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11571 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11572 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11573 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11574 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11575 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11576 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11577 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11578 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11579 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11580 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11581 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11582 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11583 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11584 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13624 (SB_DFFE): \flight_core.control_rx.rxData [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11586 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11592 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11588 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11589 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11591 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11558 (SB_DFFE): \flight_core.gyro_rates_sampled[1] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11593 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11587 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11594 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11595 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11596 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11597 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11598 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11599 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11600 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11601 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14453 (SB_DFF): \flight_core.fport_decode.timeout_counter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11603 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11604 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11605 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11606 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11607 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11608 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11609 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11610 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11611 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11612 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11613 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11614 (SB_DFFE): \flight_core.change_update_state = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11617 (SB_DFF): \flight_core.fc_state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11622 (SB_DFF): \flight_core.fc_state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11615 (SB_DFFE): \flight_core.update_attitude = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11618 (SB_DFF): \flight_core.fc_state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11619 (SB_DFF): \flight_core.fc_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11620 (SB_DFF): \flight_core.fc_state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11621 (SB_DFF): \flight_core.fc_state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11623 (SB_DFF): \flight_core.fc_state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11590 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11624 (SB_DFFE): \flight_core.debugUpdateCount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11625 (SB_DFFE): \flight_core.debugUpdateCount [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11626 (SB_DFFE): \flight_core.debugUpdateCount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11627 (SB_DFFE): \flight_core.debugUpdateCount [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11628 (SB_DFFE): \flight_core.debugUpdateCount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11629 (SB_DFFE): \flight_core.debugUpdateCount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11630 (SB_DFFE): \flight_core.debugUpdateCount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11631 (SB_DFFE): \flight_core.debugUpdateCount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11633 (SB_DFFE): \flight_core.debugUpdateCount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11616 (SB_DFF): \flight_core.fc_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11634 (SB_DFFE): \flight_core.debugUpdateCount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11635 (SB_DFFE): \flight_core.debugUpdateCount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11636 (SB_DFFE): \flight_core.debugUpdateCount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11637 (SB_DFFE): \flight_core.debugUpdateCount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11638 (SB_DFFE): \flight_core.debugUpdateCount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11639 (SB_DFFE): \flight_core.debugUpdateCount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11640 (SB_DFFE): \flight_core.debugUpdateCount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11641 (SB_DFFE): \flight_core.debugUpdateCount [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11642 (SB_DFFE): \flight_core.debugUpdateCount [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11643 (SB_DFFE): \flight_core.debugUpdateCount [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11644 (SB_DFFE): \flight_core.debugUpdateCount [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11645 (SB_DFFE): \flight_core.debugUpdateCount [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11646 (SB_DFFE): \flight_core.debugUpdateCount [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11647 (SB_DFFE): \flight_core.debugUpdateCount [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11648 (SB_DFFE): \flight_core.debugUpdateCount [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11649 (SB_DFFE): \flight_core.debugUpdateCount [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11650 (SB_DFFE): \flight_core.debugUpdateCount [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11651 (SB_DFFE): \flight_core.debugUpdateCount [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11652 (SB_DFFE): \flight_core.debugUpdateCount [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11653 (SB_DFFE): \flight_core.debugUpdateCount [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11654 (SB_DFFE): \flight_core.debugUpdateCount [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11655 (SB_DFFE): \flight_core.debugUpdateCount [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11662 (SB_DFF): \flight_core.debugState [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11664 (SB_DFF): \flight_core.debugState [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11663 (SB_DFF): \flight_core.debugState [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11665 (SB_DFF): \flight_core.debugState [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11632 (SB_DFFE): \flight_core.debugUpdateCount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11666 (SB_DFFE): \flight_core.attitudeUpdateCounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11667 (SB_DFFE): \flight_core.attitudeUpdateCounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11668 (SB_DFFE): \flight_core.attitudeUpdateCounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11669 (SB_DFFE): \flight_core.attitudeUpdateCounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11670 (SB_DFFE): \flight_core.attitudeUpdateCounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11671 (SB_DFFE): \flight_core.attitudeUpdateCounter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11672 (SB_DFFE): \flight_core.attitudeUpdateCounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11673 (SB_DFFE): \flight_core.attitudeUpdateCounter [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11661 (SB_DFF): \flight_core.debugState [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13617 (SB_DFFE): \flight_core.control_rx.rxData [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13597 (SB_DFFE): \flight_core.fport_decode.packet_data_read [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13598 (SB_DFFE): \flight_core.fport_decode.packet_data_read [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13592 (SB_DFFE): \flight_core.fport_decode.packet_data_read [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13593 (SB_DFFE): \flight_core.fport_decode.packet_data_read [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13594 (SB_DFFE): \flight_core.fport_decode.packet_data_read [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13595 (SB_DFFE): \flight_core.fport_decode.packet_data_read [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11362 (SB_DFFE): \flight_core.inputs[0] [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11412 (SB_DFFE): \flight_core.setpoint[3] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18619 (SB_DFFE): \flight_core.fport_decode.inputFIFO.read_address [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11320 (SB_DFFE): \flight_core.inputs[2] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18617 (SB_DFFE): \flight_core.fport_decode.inputFIFO.read_address [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11314 (SB_DFFE): \flight_core.inputs[2] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13600 (SB_DFFE): \flight_core.control_rx.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11316 (SB_DFFE): \flight_core.inputs[2] [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11306 (SB_DFFE): \flight_core.inputs[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13591 (SB_DFFE): \flight_core.fport_decode.packet_data_read [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11301 (SB_DFFE): \flight_core.inputs[2] [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11304 (SB_DFFE): \flight_core.inputs[2] [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11308 (SB_DFFE): \flight_core.inputs[2] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11297 (SB_DFFE): \flight_core.inputs[2] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20535 (SB_DFFE): \flight_core.imu.spi_registers.outMOSI = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13622 (SB_DFFE): \flight_core.control_rx.rxData [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13619 (SB_DFFE): \flight_core.control_rx.rxData [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13621 (SB_DFFE): \flight_core.control_rx.rxData [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13620 (SB_DFFE): \flight_core.control_rx.rxData [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14560 (SB_DFF): \flight_core.fport_decode.failsafe = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14448 (SB_DFFE): \flight_core.fport_decode.waitDelay [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11585 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14446 (SB_DFF): \flight_core.fport_decode.fifo_read = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14449 (SB_DFFE): \flight_core.fport_decode.waitDelay [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14450 (SB_DFFE): \flight_core.fport_decode.waitDelay [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14452 (SB_DFF): \flight_core.fport_decode.timeout_counter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14447 (SB_DFFE): \flight_core.fport_decode.waitDelay [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14454 (SB_DFF): \flight_core.fport_decode.timeout_counter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11602 (SB_DFFE): \flight_core.gyro_rates_sampled[0] [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14455 (SB_DFF): \flight_core.fport_decode.timeout_counter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14456 (SB_DFF): \flight_core.fport_decode.timeout_counter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14457 (SB_DFF): \flight_core.fport_decode.timeout_counter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14459 (SB_DFF): \flight_core.fport_decode.timeout_counter [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14460 (SB_DFF): \flight_core.fport_decode.timeout_counter [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14461 (SB_DFF): \flight_core.fport_decode.timeout_counter [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14462 (SB_DFF): \flight_core.fport_decode.timeout_counter [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14463 (SB_DFF): \flight_core.fport_decode.timeout_counter [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14464 (SB_DFF): \flight_core.fport_decode.timeout_counter [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14465 (SB_DFF): \flight_core.fport_decode.timeout_counter [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14477 (SB_DFF): \flight_core.fport_decode.timeout_counter [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14467 (SB_DFF): \flight_core.fport_decode.timeout_counter [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14468 (SB_DFF): \flight_core.fport_decode.timeout_counter [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14469 (SB_DFF): \flight_core.fport_decode.timeout_counter [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14470 (SB_DFF): \flight_core.fport_decode.timeout_counter [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14471 (SB_DFF): \flight_core.fport_decode.timeout_counter [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14472 (SB_DFF): \flight_core.fport_decode.timeout_counter [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14473 (SB_DFF): \flight_core.fport_decode.timeout_counter [22] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14475 (SB_DFF): \flight_core.fport_decode.timeout_counter [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14476 (SB_DFF): \flight_core.fport_decode.timeout_counter [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14481 (SB_DFF): \flight_core.fport_decode.timeout_counter [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14478 (SB_DFF): \flight_core.fport_decode.timeout_counter [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14458 (SB_DFF): \flight_core.fport_decode.timeout_counter [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14480 (SB_DFF): \flight_core.fport_decode.timeout_counter [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14474 (SB_DFF): \flight_core.fport_decode.timeout_counter [23] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14495 (SB_DFF): \flight_core.fport_decode.rssi [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14479 (SB_DFF): \flight_core.fport_decode.timeout_counter [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14482 (SB_DFF): \flight_core.fport_decode.timeout_counter [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14496 (SB_DFF): \flight_core.fport_decode.rssi [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14451 (SB_DFF): \flight_core.fport_decode.timeout_counter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14499 (SB_DFF): \flight_core.fport_decode.rssi [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14500 (SB_DFFE): \flight_core.fport_decode.controls3 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14497 (SB_DFF): \flight_core.fport_decode.rssi [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14498 (SB_DFF): \flight_core.fport_decode.rssi [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14493 (SB_DFF): \flight_core.fport_decode.rssi [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14522 (SB_DFFE): \flight_core.fport_decode.controls1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14502 (SB_DFFE): \flight_core.fport_decode.controls3 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14491 (SB_DFF): \flight_core.fport_decode.rxFrameLoss = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14494 (SB_DFF): \flight_core.fport_decode.rssi [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14524 (SB_DFFE): \flight_core.fport_decode.controls1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14503 (SB_DFFE): \flight_core.fport_decode.controls3 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14504 (SB_DFFE): \flight_core.fport_decode.controls3 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14505 (SB_DFFE): \flight_core.fport_decode.controls3 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14506 (SB_DFFE): \flight_core.fport_decode.controls3 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14507 (SB_DFFE): \flight_core.fport_decode.controls3 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14509 (SB_DFFE): \flight_core.fport_decode.controls3 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14492 (SB_DFF): \flight_core.fport_decode.rssi [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14510 (SB_DFFE): \flight_core.fport_decode.controls3 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14511 (SB_DFFE): \flight_core.fport_decode.controls2 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14512 (SB_DFFE): \flight_core.fport_decode.controls2 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14513 (SB_DFFE): \flight_core.fport_decode.controls2 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14514 (SB_DFFE): \flight_core.fport_decode.controls2 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14516 (SB_DFFE): \flight_core.fport_decode.controls2 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14544 (SB_DFFE): \flight_core.fport_decode.controlFrameReady = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14517 (SB_DFFE): \flight_core.fport_decode.controls2 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14518 (SB_DFFE): \flight_core.fport_decode.controls2 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14520 (SB_DFFE): \flight_core.fport_decode.controls2 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14508 (SB_DFFE): \flight_core.fport_decode.controls3 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14521 (SB_DFFE): \flight_core.fport_decode.controls2 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14515 (SB_DFFE): \flight_core.fport_decode.controls2 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14523 (SB_DFFE): \flight_core.fport_decode.controls1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14501 (SB_DFFE): \flight_core.fport_decode.controls3 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14525 (SB_DFFE): \flight_core.fport_decode.controls1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14526 (SB_DFFE): \flight_core.fport_decode.controls1 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14527 (SB_DFFE): \flight_core.fport_decode.controls1 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14528 (SB_DFFE): \flight_core.fport_decode.controls1 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14529 (SB_DFFE): \flight_core.fport_decode.controls1 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14531 (SB_DFFE): \flight_core.fport_decode.controls1 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14519 (SB_DFFE): \flight_core.fport_decode.controls2 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14532 (SB_DFFE): \flight_core.fport_decode.controls1 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14533 (SB_DFFE): \flight_core.fport_decode.controls0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14539 (SB_DFFE): \flight_core.fport_decode.controls0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14535 (SB_DFFE): \flight_core.fport_decode.controls0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14536 (SB_DFFE): \flight_core.fport_decode.controls0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14537 (SB_DFFE): \flight_core.fport_decode.controls0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14540 (SB_DFFE): \flight_core.fport_decode.controls0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14542 (SB_DFFE): \flight_core.fport_decode.controls0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14538 (SB_DFFE): \flight_core.fport_decode.controls0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14530 (SB_DFFE): \flight_core.fport_decode.controls1 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14543 (SB_DFFE): \flight_core.fport_decode.controls0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14534 (SB_DFFE): \flight_core.fport_decode.controls0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14546 (SB_DFFE): \flight_core.fport_decode.controls4 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14552 (SB_DFFE): \flight_core.fport_decode.controls4 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14547 (SB_DFFE): \flight_core.fport_decode.controls4 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14548 (SB_DFFE): \flight_core.fport_decode.controls4 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14549 (SB_DFFE): \flight_core.fport_decode.controls4 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14550 (SB_DFFE): \flight_core.fport_decode.controls4 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14551 (SB_DFFE): \flight_core.fport_decode.controls4 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14553 (SB_DFFE): \flight_core.fport_decode.controls4 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14541 (SB_DFFE): \flight_core.fport_decode.controls0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14554 (SB_DFFE): \flight_core.fport_decode.controls4 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14555 (SB_DFFE): \flight_core.fport_decode.controls4 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14556 (SB_DFF): \flight_core.fport_decode.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14557 (SB_DFF): \flight_core.fport_decode.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14558 (SB_DFF): \flight_core.fport_decode.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14559 (SB_DFF): \flight_core.fport_decode.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14545 (SB_DFFE): \flight_core.fport_decode.controls4 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15604 (SB_DFF): \flight_core.imu.imu_sample_state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15610 (SB_DFF): \flight_core.imu.imu_sample_state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15605 (SB_DFF): \flight_core.imu.imu_sample_state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15606 (SB_DFF): \flight_core.imu.imu_sample_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15608 (SB_DFF): \flight_core.imu.imu_sample_state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15613 (SB_DFFE): \flight_core.imu.imu_cfg_state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15609 (SB_DFF): \flight_core.imu.imu_sample_state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15611 (SB_DFFE): \flight_core.imu.imu_cfg_state [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11456 (SB_DFFE): \flight_core.setpoint[1] [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15612 (SB_DFFE): \flight_core.imu.imu_cfg_state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15607 (SB_DFF): \flight_core.imu.imu_sample_state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15615 (SB_DFFE): \flight_core.imu.imu_cfg_state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15620 (SB_DFFE): \flight_core.imu.imu_state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15616 (SB_DFFE): \flight_core.imu.imu_cfg_state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15617 (SB_DFFE): \flight_core.imu.imu_cfg_state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15618 (SB_DFFE): \flight_core.imu.imu_cfg_state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15614 (SB_DFFE): \flight_core.imu.imu_cfg_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15603 (SB_DFF): \flight_core.imu.imu_sample_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15622 (SB_DFFE): \flight_core.imu.imu_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15626 (SB_DFFE): \flight_core.imu.imu_state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15623 (SB_DFFE): \flight_core.imu.imu_state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15624 (SB_DFFE): \flight_core.imu.imu_state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15625 (SB_DFFE): \flight_core.imu.imu_state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15621 (SB_DFFE): \flight_core.imu.imu_state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15619 (SB_DFFE): \flight_core.imu.imu_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18622 (SB_DFFE): \flight_core.fport_decode.inputFIFO.read_address [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15717 (SB_DFFE): \flight_core.imu.counter1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15718 (SB_DFFE): \flight_core.imu.counter1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15719 (SB_DFFE): \flight_core.imu.counter1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15720 (SB_DFFE): \flight_core.imu.counter1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15721 (SB_DFFE): \flight_core.imu.counter1 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15722 (SB_DFFE): \flight_core.imu.counter1 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15723 (SB_DFFE): \flight_core.imu.counter1 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15724 (SB_DFFE): \flight_core.imu.counter1 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15726 (SB_DFFE): \flight_core.imu.counter1 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15727 (SB_DFFE): \flight_core.imu.counter1 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15730 (SB_DFFE): \flight_core.imu.counter1 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15729 (SB_DFFE): \flight_core.imu.counter1 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15737 (SB_DFFE): \flight_core.imu.counter1 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15731 (SB_DFFE): \flight_core.imu.counter1 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15732 (SB_DFFE): \flight_core.imu.counter1 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15733 (SB_DFFE): \flight_core.imu.counter1 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15734 (SB_DFFE): \flight_core.imu.counter1 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15735 (SB_DFFE): \flight_core.imu.counter1 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15736 (SB_DFFE): \flight_core.imu.counter1 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15728 (SB_DFFE): \flight_core.imu.counter1 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15738 (SB_DFFE): \flight_core.imu.counter1 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15739 (SB_DFFE): \flight_core.imu.counter1 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15740 (SB_DFFE): \flight_core.imu.counter1 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15741 (SB_DFFE): \flight_core.imu.counter1 [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15742 (SB_DFFE): \flight_core.imu.counter1 [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15743 (SB_DFFE): \flight_core.imu.counter1 [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15746 (SB_DFFE): \flight_core.imu.counter1 [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15745 (SB_DFFE): \flight_core.imu.counter1 [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15754 (SB_DFFE): \flight_core.imu.rates_raw_yaw [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15747 (SB_DFFE): \flight_core.imu.counter1 [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15748 (SB_DFFE): \flight_core.imu.counter1 [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15751 (SB_DFFE): \flight_core.imu.rates_raw_yaw [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15757 (SB_DFFE): \flight_core.imu.rates_raw_yaw [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15752 (SB_DFFE): \flight_core.imu.rates_raw_yaw [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15753 (SB_DFFE): \flight_core.imu.rates_raw_yaw [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15744 (SB_DFFE): \flight_core.imu.counter1 [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15758 (SB_DFFE): \flight_core.imu.rates_raw_yaw [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15756 (SB_DFFE): \flight_core.imu.rates_raw_yaw [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15765 (SB_DFFE): \flight_core.imu.rates_raw_yaw [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15725 (SB_DFFE): \flight_core.imu.counter1 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15759 (SB_DFFE): \flight_core.imu.rates_raw_yaw [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15760 (SB_DFFE): \flight_core.imu.rates_raw_yaw [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15761 (SB_DFFE): \flight_core.imu.rates_raw_yaw [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15762 (SB_DFFE): \flight_core.imu.rates_raw_yaw [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15763 (SB_DFFE): \flight_core.imu.rates_raw_yaw [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15764 (SB_DFFE): \flight_core.imu.rates_raw_yaw [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15755 (SB_DFFE): \flight_core.imu.rates_raw_yaw [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15766 (SB_DFFE): \flight_core.imu.rates_raw_yaw [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15767 (SB_DFFE): \flight_core.imu.rates_raw_yaw [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15770 (SB_DFFE): \flight_core.imu.rates_raw_yaw [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15769 (SB_DFFE): \flight_core.imu.rates_raw_yaw [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15777 (SB_DFFE): \flight_core.imu.rates_raw_yaw [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15771 (SB_DFFE): \flight_core.imu.rates_raw_yaw [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15772 (SB_DFFE): \flight_core.imu.rates_raw_yaw [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15773 (SB_DFFE): \flight_core.imu.rates_raw_yaw [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15774 (SB_DFFE): \flight_core.imu.rates_raw_yaw [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15775 (SB_DFFE): \flight_core.imu.rates_raw_yaw [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15776 (SB_DFFE): \flight_core.imu.rates_raw_yaw [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15768 (SB_DFFE): \flight_core.imu.rates_raw_yaw [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15778 (SB_DFFE): \flight_core.imu.rates_raw_yaw [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15779 (SB_DFFE): \flight_core.imu.rates_raw_yaw [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15780 (SB_DFFE): \flight_core.imu.rates_raw_yaw [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15781 (SB_DFFE): \flight_core.imu.rates_raw_yaw [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15782 (SB_DFFE): \flight_core.imu.rates_raw_pitch [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15783 (SB_DFFE): \flight_core.imu.rates_raw_pitch [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15784 (SB_DFFE): \flight_core.imu.rates_raw_pitch [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15785 (SB_DFFE): \flight_core.imu.rates_raw_pitch [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15786 (SB_DFFE): \flight_core.imu.rates_raw_pitch [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15787 (SB_DFFE): \flight_core.imu.rates_raw_pitch [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15788 (SB_DFFE): \flight_core.imu.rates_raw_pitch [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15789 (SB_DFFE): \flight_core.imu.rates_raw_pitch [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15791 (SB_DFFE): \flight_core.imu.rates_raw_pitch [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15750 (SB_DFFE): \flight_core.imu.rates_raw_yaw [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15792 (SB_DFFE): \flight_core.imu.rates_raw_pitch [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15793 (SB_DFFE): \flight_core.imu.rates_raw_pitch [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15794 (SB_DFFE): \flight_core.imu.rates_raw_pitch [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15795 (SB_DFFE): \flight_core.imu.rates_raw_pitch [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15796 (SB_DFFE): \flight_core.imu.rates_raw_pitch [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15797 (SB_DFFE): \flight_core.imu.rates_raw_pitch [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15798 (SB_DFFE): \flight_core.imu.rates_raw_pitch [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15799 (SB_DFFE): \flight_core.imu.rates_raw_pitch [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15800 (SB_DFFE): \flight_core.imu.rates_raw_pitch [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15801 (SB_DFFE): \flight_core.imu.rates_raw_pitch [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15802 (SB_DFFE): \flight_core.imu.rates_raw_pitch [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15803 (SB_DFFE): \flight_core.imu.rates_raw_pitch [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15804 (SB_DFFE): \flight_core.imu.rates_raw_pitch [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15805 (SB_DFFE): \flight_core.imu.rates_raw_pitch [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15806 (SB_DFFE): \flight_core.imu.rates_raw_pitch [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15807 (SB_DFFE): \flight_core.imu.rates_raw_pitch [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15808 (SB_DFFE): \flight_core.imu.rates_raw_pitch [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15809 (SB_DFFE): \flight_core.imu.rates_raw_pitch [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15810 (SB_DFFE): \flight_core.imu.rates_raw_pitch [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15811 (SB_DFFE): \flight_core.imu.rates_raw_pitch [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15812 (SB_DFFE): \flight_core.imu.rates_raw_pitch [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15813 (SB_DFFE): \flight_core.imu.rates_raw_pitch [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15814 (SB_DFFE): \flight_core.imu.rates_raw_roll [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15815 (SB_DFFE): \flight_core.imu.rates_raw_roll [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15816 (SB_DFFE): \flight_core.imu.rates_raw_roll [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15817 (SB_DFFE): \flight_core.imu.rates_raw_roll [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15818 (SB_DFFE): \flight_core.imu.rates_raw_roll [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15819 (SB_DFFE): \flight_core.imu.rates_raw_roll [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15820 (SB_DFFE): \flight_core.imu.rates_raw_roll [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15821 (SB_DFFE): \flight_core.imu.rates_raw_roll [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15823 (SB_DFFE): \flight_core.imu.rates_raw_roll [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15790 (SB_DFFE): \flight_core.imu.rates_raw_pitch [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15824 (SB_DFFE): \flight_core.imu.rates_raw_roll [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15825 (SB_DFFE): \flight_core.imu.rates_raw_roll [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15826 (SB_DFFE): \flight_core.imu.rates_raw_roll [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15827 (SB_DFFE): \flight_core.imu.rates_raw_roll [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15828 (SB_DFFE): \flight_core.imu.rates_raw_roll [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15829 (SB_DFFE): \flight_core.imu.rates_raw_roll [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15830 (SB_DFFE): \flight_core.imu.rates_raw_roll [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15831 (SB_DFFE): \flight_core.imu.rates_raw_roll [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15832 (SB_DFFE): \flight_core.imu.rates_raw_roll [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15833 (SB_DFFE): \flight_core.imu.rates_raw_roll [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15834 (SB_DFFE): \flight_core.imu.rates_raw_roll [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15835 (SB_DFFE): \flight_core.imu.rates_raw_roll [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15836 (SB_DFFE): \flight_core.imu.rates_raw_roll [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15837 (SB_DFFE): \flight_core.imu.rates_raw_roll [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15838 (SB_DFFE): \flight_core.imu.rates_raw_roll [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15839 (SB_DFFE): \flight_core.imu.rates_raw_roll [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15840 (SB_DFFE): \flight_core.imu.rates_raw_roll [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15841 (SB_DFFE): \flight_core.imu.rates_raw_roll [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15842 (SB_DFFE): \flight_core.imu.rates_raw_roll [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15843 (SB_DFFE): \flight_core.imu.rates_raw_roll [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15844 (SB_DFFE): \flight_core.imu.rates_raw_roll [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15845 (SB_DFFE): \flight_core.imu.rates_raw_roll [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$15822 (SB_DFFE): \flight_core.imu.rates_raw_roll [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14445 (SB_DFF): \flight_core.fport_decode.unmask = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11434 (SB_DFFE): \flight_core.setpoint[2] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17290 (SB_DFFE): \flight_core.debug_proto.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17291 (SB_DFFE): \flight_core.debug_proto.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17292 (SB_DFFE): \flight_core.debug_proto.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17293 (SB_DFFE): \flight_core.debug_proto.state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17294 (SB_DFFE): \flight_core.debug_proto.state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17295 (SB_DFFE): \flight_core.debug_proto.state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17296 (SB_DFFE): \flight_core.debug_proto.state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$17289 (SB_DFFE): \flight_core.debug_proto.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11413 (SB_DFFE): \flight_core.setpoint[3] [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11409 (SB_DFFE): \flight_core.setpoint[3] [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11388 (SB_DFFE): \flight_core.inputs[0] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11280 (SB_DFFE): \flight_core.inputs[3] [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11364 (SB_DFFE): \flight_core.inputs[0] [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11384 (SB_DFFE): \flight_core.inputs[0] [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11363 (SB_DFFE): \flight_core.inputs[0] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$14466 (SB_DFF): \flight_core.fport_decode.timeout_counter [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11338 (SB_DFFE): \flight_core.inputs[1] [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11340 (SB_DFFE): \flight_core.inputs[1] [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13599 (SB_DFFE): \flight_core.control_rx.rxDataReady = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18611 (SB_DFFE): \flight_core.fport_decode.inputFIFO.write_address [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18612 (SB_DFFE): \flight_core.fport_decode.inputFIFO.write_address [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18613 (SB_DFFE): \flight_core.fport_decode.inputFIFO.write_address [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18614 (SB_DFFE): \flight_core.fport_decode.inputFIFO.write_address [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18615 (SB_DFFE): \flight_core.fport_decode.inputFIFO.write_address [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11324 (SB_DFFE): \flight_core.inputs[2] [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11331 (SB_DFFE): \flight_core.inputs[1] [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18616 (SB_DFFE): \flight_core.fport_decode.inputFIFO.write_address [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18620 (SB_DFFE): \flight_core.fport_decode.inputFIFO.read_address [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18621 (SB_DFFE): \flight_core.fport_decode.inputFIFO.read_address [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18723 (SB_DFFE): \flight_core.imu.spi_fast.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18724 (SB_DFFE): \flight_core.imu.spi_fast.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18725 (SB_DFFE): \flight_core.imu.spi_fast.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18726 (SB_DFFE): \flight_core.imu.spi_fast.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18807 (SB_DFFE): \flight_core.imu.spi_fast.outMOSI = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$18805 (SB_DFFE): \flight_core.imu.spi_fast.complete = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20509 (SB_DFFE): \flight_core.imu.spi_registers.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20510 (SB_DFFE): \flight_core.imu.spi_registers.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20511 (SB_DFFE): \flight_core.imu.spi_registers.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20512 (SB_DFFE): \flight_core.imu.spi_registers.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13618 (SB_DFFE): \flight_core.control_rx.rxData [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20980 (SB_DFFE): \flight_core.debug.tx.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20533 (SB_DFFE): \flight_core.imu.spi_registers.complete = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20975 (SB_DFFE): \flight_core.debug.tx.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20976 (SB_DFFE): \flight_core.debug.tx.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20977 (SB_DFFE): \flight_core.debug.tx.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20978 (SB_DFFE): \flight_core.debug.tx.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20979 (SB_DFFE): \flight_core.debug.tx.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20981 (SB_DFFE): \flight_core.debug.tx.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20984 (SB_DFFE): \flight_core.debug.tx.outputBit = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20982 (SB_DFF): \flight_core.debug.tx.bufferFull = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20974 (SB_DFFE): \flight_core.debug.tx.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20993 (SB_DFFE): \flight_core.debug.tx.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20994 (SB_DFFE): \flight_core.debug.tx.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20995 (SB_DFFE): \flight_core.debug.tx.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$20996 (SB_DFFE): \flight_core.debug.tx.state [3] = 0

16.38. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$11700 (A=$techmap$techmap\flight_core.$procmux$8886.$and$/usr/bin/../share/yosys/techmap.v:434$11703_Y, B=1'1, S=\flight_core.imu.sampleReady) into $auto$simplemap.cc:420:simplemap_dff$11699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$30045 (A=1'0, B=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$11723_Y, S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30050 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30148 [2], S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30046 (A=1'0, B=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$11724_Y, S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30047 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30124 [2], S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11619 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30048 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30132 [2], S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30049 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30140 [2], S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11621 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30051 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30156 [2], S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11623 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12560 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [0], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12562 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [2], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12564 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [4], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12565 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [5], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12566 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [6], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11630 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12567 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [7], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11631 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12569 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [9], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11633 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$30044 (A=1'0, B=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$11722_Y, S=$techmap$techmap\flight_core.$procmux$8694.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$11714_Y) into $auto$simplemap.cc:420:simplemap_dff$11616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12570 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [10], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12571 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [11], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11635 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12572 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [12], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12573 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [13], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12574 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [14], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11638 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12575 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [15], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11639 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12576 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [16], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12577 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [17], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12578 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [18], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12579 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [19], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12580 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [20], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12581 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [21], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11645 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12582 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [22], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11646 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12583 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [23], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11647 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12584 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [24], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11648 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12585 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [25], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11649 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12586 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [26], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12587 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [27], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11651 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12588 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [28], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12589 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [29], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11653 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12590 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [30], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11654 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12591 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [31], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11655 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$30199 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30238, S=$techmap$techmap\flight_core.$procmux$8739.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$12370_Y) into $auto$simplemap.cc:420:simplemap_dff$11662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30201 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30249 [1], S=$techmap$techmap\flight_core.$procmux$8739.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$12370_Y) into $auto$simplemap.cc:420:simplemap_dff$11664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30200 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30245, S=$techmap$techmap\flight_core.$procmux$8739.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$12370_Y) into $auto$simplemap.cc:420:simplemap_dff$11663 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$30202 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$30256 [1], S=$techmap$techmap\flight_core.$procmux$8739.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$12370_Y) into $auto$simplemap.cc:420:simplemap_dff$11665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12568 (A=1'0, B=$techmap\flight_core.$sub$flight.v:356$1551_Y [8], S=$auto$simplemap.cc:168:logic_reduce$13235) into $auto$simplemap.cc:420:simplemap_dff$11632 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12338 (A=1'1, B=$techmap\flight_core.$sub$flight.v:467$1585_Y [0], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11666 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12339 (A=1'1, B=$auto$simplemap.cc:309:simplemap_lut$65585 [2], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12340 (A=1'1, B=$techmap\flight_core.$sub$flight.v:467$1585_Y [2], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12341 (A=1'1, B=$techmap\flight_core.$sub$flight.v:467$1585_Y [3], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12342 (A=1'1, B=$techmap\flight_core.$sub$flight.v:467$1585_Y [4], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12343 (A=1'0, B=$techmap\flight_core.$sub$flight.v:467$1585_Y [5], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12344 (A=1'0, B=$techmap\flight_core.$sub$flight.v:467$1585_Y [6], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12345 (A=1'0, B=$techmap\flight_core.$sub$flight.v:467$1585_Y [7], S=$auto$simplemap.cc:168:logic_reduce$13217) into $auto$simplemap.cc:420:simplemap_dff$11673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$30198 (A=1'0, B=$techmap$techmap\flight_core.$procmux$8739.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$12377_Y, S=$techmap$techmap\flight_core.$procmux$8739.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$12370_Y) into $auto$simplemap.cc:420:simplemap_dff$11661 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$20560 (A=1'0, B=\flight_core.imu.spiRegTxData [8], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15863 (A=$auto$wreduce.cc:455:run$10164 [0], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15847 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$28421 (A=1'0, B=$techmap$techmap\flight_core.fport_decode.$procmux$9471.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$14965_Y, S=$techmap$techmap\flight_core.fport_decode.$procmux$9471.$reduce_or$/usr/bin/../share/yosys/techmap.v:445$14960_Y) into $auto$simplemap.cc:420:simplemap_dff$14446 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15864 (A=$auto$alumacc.cc:474:replace_alu$10349.BB [1], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15848 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$15870 (A=$auto$wreduce.cc:455:run$10164 [7], B=1'1, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15854 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15866 (A=$auto$wreduce.cc:455:run$10164 [3], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15850 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15875 (A=$auto$wreduce.cc:455:run$10164 [12], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15859 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15867 (A=$auto$wreduce.cc:455:run$10164 [4], B=1'1, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15851 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15868 (A=$auto$wreduce.cc:455:run$10164 [5], B=1'1, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15852 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15869 (A=$auto$wreduce.cc:455:run$10164 [6], B=1'1, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15853 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15871 (A=$auto$wreduce.cc:455:run$10164 [8], B=1'1, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15855 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15872 (A=$auto$wreduce.cc:455:run$10164 [9], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15856 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15873 (A=$auto$wreduce.cc:455:run$10164 [10], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15857 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15874 (A=$auto$wreduce.cc:455:run$10164 [11], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15858 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15865 (A=$auto$wreduce.cc:455:run$10164 [2], B=1'1, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15849 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15876 (A=$auto$wreduce.cc:455:run$10164 [13], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15860 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15877 (A=$auto$wreduce.cc:455:run$10164 [14], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15861 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15878 (A=$auto$wreduce.cc:455:run$10164 [15], B=1'0, S=$auto$alumacc.cc:491:replace_alu$10351 [15]) into $auto$simplemap.cc:420:simplemap_dff$15862 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17692 (A=1'0, B=$techmap\flight_core.motor3.dshot_tx.$logic_and$ip/peripherals/rc/dshottx.v:73$1018_Y, S=\flight_core.motor3.dshot_tx.state) into $auto$simplemap.cc:420:simplemap_dff$17626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18111 (A=1'0, B=$techmap\flight_core.motor4.dshot_tx.$logic_and$ip/peripherals/rc/dshottx.v:73$1018_Y, S=\flight_core.motor4.dshot_tx.state) into $auto$simplemap.cc:420:simplemap_dff$18050 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18305 (A=1'0, B=$techmap\flight_core.motor2.dshot_tx.$logic_and$ip/peripherals/rc/dshottx.v:73$1018_Y, S=\flight_core.motor2.dshot_tx.state) into $auto$simplemap.cc:420:simplemap_dff$18244 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18517 (A=1'0, B=$techmap\flight_core.motor1.dshot_tx.$logic_and$ip/peripherals/rc/dshottx.v:73$1018_Y, S=\flight_core.motor1.dshot_tx.state) into $auto$simplemap.cc:420:simplemap_dff$18456 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18873 (A=1'0, B=\flight_core.imu.spiTxData [8], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18865 (A=1'0, B=\flight_core.imu.spiTxData [0], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18866 (A=1'0, B=\flight_core.imu.spiTxData [1], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18867 (A=1'0, B=\flight_core.imu.spiTxData [2], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18868 (A=1'0, B=\flight_core.imu.spiTxData [3], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18869 (A=1'0, B=\flight_core.imu.spiTxData [4], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18870 (A=1'0, B=\flight_core.imu.spiTxData [5], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18872 (A=1'0, B=\flight_core.imu.spiTxData [7], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18874 (A=1'0, B=\flight_core.imu.spiTxData [9], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18875 (A=1'0, B=\flight_core.imu.spiTxData [10], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18876 (A=1'0, B=\flight_core.imu.spiTxData [11], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18877 (A=1'0, B=\flight_core.imu.spiTxData [12], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18878 (A=1'0, B=\flight_core.imu.spiTxData [13], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18879 (A=1'0, B=\flight_core.imu.spiTxData [14], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18880 (A=1'0, B=\flight_core.imu.spiTxData [15], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18881 (A=1'0, B=\flight_core.imu.spiTxData [16], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18882 (A=1'0, B=\flight_core.imu.spiTxData [17], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18883 (A=1'0, B=\flight_core.imu.spiTxData [18], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18884 (A=1'0, B=\flight_core.imu.spiTxData [19], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18686 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18885 (A=1'0, B=\flight_core.imu.spiTxData [20], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18886 (A=1'0, B=\flight_core.imu.spiTxData [21], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18887 (A=1'0, B=\flight_core.imu.spiTxData [22], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18888 (A=1'0, B=\flight_core.imu.spiTxData [23], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18889 (A=1'0, B=\flight_core.imu.spiTxData [24], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18691 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18890 (A=1'0, B=\flight_core.imu.spiTxData [25], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18692 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18891 (A=1'0, B=\flight_core.imu.spiTxData [26], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18892 (A=1'0, B=\flight_core.imu.spiTxData [27], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18694 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18893 (A=1'0, B=\flight_core.imu.spiTxData [28], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18695 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18894 (A=1'0, B=\flight_core.imu.spiTxData [29], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18895 (A=1'0, B=\flight_core.imu.spiTxData [30], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18896 (A=1'0, B=\flight_core.imu.spiTxData [31], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18698 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18897 (A=1'0, B=\flight_core.imu.spiTxData [32], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18898 (A=1'0, B=\flight_core.imu.spiTxData [33], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18700 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18899 (A=1'0, B=\flight_core.imu.spiTxData [34], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18701 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18900 (A=1'0, B=\flight_core.imu.spiTxData [35], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18901 (A=1'0, B=\flight_core.imu.spiTxData [36], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18902 (A=1'0, B=\flight_core.imu.spiTxData [37], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18903 (A=1'0, B=\flight_core.imu.spiTxData [38], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18904 (A=1'0, B=\flight_core.imu.spiTxData [39], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18905 (A=1'0, B=\flight_core.imu.spiTxData [40], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18906 (A=1'0, B=\flight_core.imu.spiTxData [41], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18708 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18907 (A=1'0, B=\flight_core.imu.spiTxData [42], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18709 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18908 (A=1'0, B=\flight_core.imu.spiTxData [43], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18710 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18909 (A=1'0, B=\flight_core.imu.spiTxData [44], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18711 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18910 (A=1'0, B=\flight_core.imu.spiTxData [45], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18712 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18911 (A=1'0, B=\flight_core.imu.spiTxData [46], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18912 (A=1'0, B=\flight_core.imu.spiTxData [47], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18714 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18913 (A=1'0, B=\flight_core.imu.spiTxData [48], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18914 (A=1'0, B=\flight_core.imu.spiTxData [49], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18915 (A=1'0, B=\flight_core.imu.spiTxData [50], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18916 (A=1'0, B=\flight_core.imu.spiTxData [51], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18718 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18917 (A=1'0, B=\flight_core.imu.spiTxData [52], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18719 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18918 (A=1'0, B=\flight_core.imu.spiTxData [53], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18720 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18919 (A=1'0, B=\flight_core.imu.spiTxData [54], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18721 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18920 (A=1'0, B=\flight_core.imu.spiTxData [55], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18722 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18871 (A=1'0, B=\flight_core.imu.spiTxData [6], S=\flight_core.imu.spiTx) into $auto$simplemap.cc:420:simplemap_dff$18673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20558 (A=1'0, B=\flight_core.imu.spiRegTxData [6], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20499 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20552 (A=1'0, B=\flight_core.imu.spiRegTxData [0], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20493 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20553 (A=1'0, B=\flight_core.imu.spiRegTxData [1], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20494 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20554 (A=1'0, B=\flight_core.imu.spiRegTxData [2], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20555 (A=1'0, B=\flight_core.imu.spiRegTxData [3], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20556 (A=1'0, B=\flight_core.imu.spiRegTxData [4], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20557 (A=1'0, B=\flight_core.imu.spiRegTxData [5], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20498 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20559 (A=1'0, B=\flight_core.imu.spiRegTxData [7], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20561 (A=1'0, B=\flight_core.imu.spiRegTxData [9], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20562 (A=1'0, B=\flight_core.imu.spiRegTxData [10], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20563 (A=1'0, B=\flight_core.imu.spiRegTxData [11], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20564 (A=1'0, B=\flight_core.imu.spiRegTxData [12], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20565 (A=1'0, B=\flight_core.imu.spiRegTxData [13], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20566 (A=1'0, B=\flight_core.imu.spiRegTxData [14], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$20567 (A=1'0, B=\flight_core.imu.spiRegTxData [15], S=\flight_core.imu.spiRegTx) into $auto$simplemap.cc:420:simplemap_dff$20508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21019 (A=1'0, B=\flight_core.debug.tx.buffer [6], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20980 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21014 (A=1'0, B=\flight_core.debug.tx.buffer [1], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20975 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21015 (A=1'0, B=\flight_core.debug.tx.buffer [2], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20976 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21016 (A=1'0, B=\flight_core.debug.tx.buffer [3], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20977 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21017 (A=1'0, B=\flight_core.debug.tx.buffer [4], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20978 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21018 (A=1'0, B=\flight_core.debug.tx.buffer [5], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20979 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21020 (A=1'0, B=\flight_core.debug.tx.buffer [7], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20981 (SB_DFFE).
  Merging $auto$simplemap.cc:311:simplemap_lut$21091 (A=$auto$simplemap.cc:309:simplemap_lut$21087 [0], B=1'0, S=\flight_core.debug.tx.state [3]) into $auto$simplemap.cc:420:simplemap_dff$20983 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$21013 (A=1'0, B=\flight_core.debug.tx.buffer [0], S=\flight_core.debug.tx.bufferFull) into $auto$simplemap.cc:420:simplemap_dff$20974 (SB_DFFE).

16.39. Executing ICE40_OPT pass (performing simple optimizations).

16.39.1. Running ICE40 specific optimizations.

16.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~602 debug messages>

16.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9525 debug messages>
Removed a total of 3175 cells.

16.39.4. Executing OPT_RMDFF pass (remove dff with constant values).

16.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 154 unused cells and 11650 unused wires.
<suppressed ~155 debug messages>

16.39.6. Rerunning OPT passes. (Removed registers in this run.)

16.39.7. Running ICE40 specific optimizations.

16.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.39.10. Executing OPT_RMDFF pass (remove dff with constant values).

16.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.39.12. Finished OPT passes. (There is nothing left to do.)

16.40. Executing TECHMAP pass (map to technology primitives).

16.40.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

16.40.2. Continuing TECHMAP pass.
No more expansions possible.

16.41. Executing ABC pass (technology mapping using ABC).

16.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 7476 gates and 9095 wires to a netlist network with 1617 inputs and 1450 outputs.

16.41.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1915.
ABC: Participating nodes from both networks       =    4207.
ABC: Participating nodes from the first network   =    1947. (  66.91 % of nodes)
ABC: Participating nodes from the second network  =    2260. (  77.66 % of nodes)
ABC: Node pairs (any polarity)                    =    1947. (  66.91 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1665. (  57.22 % of names can be moved)
ABC: Total runtime =     0.34 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

16.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     5774
ABC RESULTS:        internal signals:     6028
ABC RESULTS:           input signals:     1617
ABC RESULTS:          output signals:     1450
Removing temp directory.
Removed 0 unused cells and 4042 unused wires.

16.42. Executing TECHMAP pass (map to technology primitives).

16.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

16.42.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101110101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111010111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110001110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010100010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111010110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110111010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010001001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001000101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010111000000 for cells of type $lut.
No more expansions possible.
<suppressed ~4839 debug messages>
Removed 0 unused cells and 5762 unused wires.

16.43. Executing HIERARCHY pass (managing design hierarchy).

16.43.1. Analyzing design hierarchy..
Top module:  \top

16.43.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

16.44. Printing statistics.

=== top ===

   Number of wires:               3645
   Number of wire bits:          10789
   Number of public wires:         420
   Number of public wire bits:    5801
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5735
     SB_CARRY                      931
     SB_DFF                        119
     SB_DFFE                      1155
     SB_DFFESR                     115
     SB_DFFESS                       6
     SB_DFFSR                       27
     SB_DFFSS                        6
     SB_LUT4                      3374
     SB_RAM40_4K                     2

16.45. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

16.46. Executing JSON backend.

Warnings: 8 unique messages, 13 total
End of script. Logfile hash: 1a4a461991
CPU: user 52.41s system 0.13s, MEM: 151.37 MB total, 138.21 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 29% 49x opt_clean (15 sec), 27% 52x opt_expr (14 sec), ...
